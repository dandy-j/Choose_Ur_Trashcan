!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADJUST_FACTOR	transitions/SlideInLTransition.java	/^    protected static final float ADJUST_FACTOR = 0.5f;$/;"	f	class:SlideInLTransition
ALLOCATION_SIZE	utils/FloatBufferProvider.java	/^	private static final int ALLOCATION_SIZE = 64 * 1024;$/;"	f	class:FloatBufferProvider	file:
Action	actions/base/Action.java	/^    protected Action() {$/;"	m	class:Action
Action	actions/base/Action.java	/^public class Action implements Copyable {$/;"	c
ActionManager	actions/ActionManager.java	/^    private ActionManager() {$/;"	m	class:ActionManager	file:
ActionManager	actions/ActionManager.java	/^public class ActionManager {$/;"	c
AndroidTest	box2d/AndroidTest.java	/^public class AndroidTest {$/;"	c
Animate	actions/interval/Animate.java	/^    protected Animate(CocosNode.CocosAnimation anim, boolean restore) {$/;"	m	class:Animate
Animate	actions/interval/Animate.java	/^public class Animate extends IntervalAction {$/;"	c
Animation	nodes/Animation.java	/^    public Animation(String n, float d) {$/;"	m	class:Animation
Animation	nodes/Animation.java	/^    public Animation(String n, float d, Bitmap... images) {$/;"	m	class:Animation
Animation	nodes/Animation.java	/^    public Animation(String n, float d, String... filenames) {$/;"	m	class:Animation
Animation	nodes/Animation.java	/^    public Animation(String n, float d, Texture2D... textures) {$/;"	m	class:Animation
Animation	nodes/Animation.java	/^public class Animation implements CocosNode.CocosAnimation {$/;"	c
Atlas1	tests/AtlasSpriteTest.java	/^        public Atlas1() {$/;"	m	class:AtlasSpriteTest.Atlas1
Atlas1	tests/AtlasSpriteTest.java	/^    static class Atlas1 extends AtlasSpriteDemo {$/;"	c	class:AtlasSpriteTest
Atlas1	tests/AtlasTest.java	/^        public Atlas1() {$/;"	m	class:AtlasTest.Atlas1
Atlas1	tests/AtlasTest.java	/^    static class Atlas1 extends AtlasDemo {$/;"	c	class:AtlasTest
Atlas2	tests/AtlasSpriteTest.java	/^        public Atlas2() {$/;"	m	class:AtlasSpriteTest.Atlas2
Atlas2	tests/AtlasSpriteTest.java	/^    static class Atlas2 extends AtlasSpriteDemo {$/;"	c	class:AtlasSpriteTest
Atlas2	tests/AtlasTest.java	/^        public Atlas2() {$/;"	m	class:AtlasTest.Atlas2
Atlas2	tests/AtlasTest.java	/^    static class Atlas2 extends AtlasDemo {$/;"	c	class:AtlasTest
Atlas3	tests/AtlasSpriteTest.java	/^        public Atlas3() {$/;"	m	class:AtlasSpriteTest.Atlas3
Atlas3	tests/AtlasSpriteTest.java	/^    static class Atlas3 extends AtlasSpriteDemo {$/;"	c	class:AtlasSpriteTest
Atlas3	tests/AtlasTest.java	/^        public Atlas3() {$/;"	m	class:AtlasTest.Atlas3
Atlas3	tests/AtlasTest.java	/^    static class Atlas3 extends AtlasDemo {$/;"	c	class:AtlasTest
Atlas4	tests/AtlasSpriteTest.java	/^        public Atlas4() {$/;"	m	class:AtlasSpriteTest.Atlas4
Atlas4	tests/AtlasSpriteTest.java	/^    static class Atlas4 extends AtlasSpriteDemo {$/;"	c	class:AtlasSpriteTest
Atlas4	tests/AtlasTest.java	/^        public Atlas4() {$/;"	m	class:AtlasTest.Atlas4
Atlas4	tests/AtlasTest.java	/^    static class Atlas4 extends AtlasDemo {$/;"	c	class:AtlasTest
Atlas5	tests/AtlasSpriteTest.java	/^        public Atlas5() {$/;"	m	class:AtlasSpriteTest.Atlas5
Atlas5	tests/AtlasSpriteTest.java	/^    static class Atlas5 extends AtlasSpriteDemo {$/;"	c	class:AtlasSpriteTest
Atlas6	tests/AtlasSpriteTest.java	/^        public Atlas6() {$/;"	m	class:AtlasSpriteTest.Atlas6
Atlas6	tests/AtlasSpriteTest.java	/^    static class Atlas6 extends AtlasSpriteDemo {$/;"	c	class:AtlasSpriteTest
AtlasAnimation	nodes/AtlasAnimation.java	/^    public AtlasAnimation(String n, float d) {$/;"	m	class:AtlasAnimation
AtlasAnimation	nodes/AtlasAnimation.java	/^    public AtlasAnimation(String t, float d, AtlasSpriteFrame... f) {$/;"	m	class:AtlasAnimation
AtlasAnimation	nodes/AtlasAnimation.java	/^public class AtlasAnimation implements CocosNode.CocosAnimation {$/;"	c
AtlasDemo	tests/AtlasTest.java	/^        public AtlasDemo() {$/;"	m	class:AtlasTest.AtlasDemo
AtlasDemo	tests/AtlasTest.java	/^    static abstract class AtlasDemo extends Layer {$/;"	c	class:AtlasTest
AtlasNode	nodes/AtlasNode.java	/^    protected AtlasNode(String tile, int w, int h, int c) {$/;"	m	class:AtlasNode
AtlasNode	nodes/AtlasNode.java	/^public abstract class AtlasNode extends CocosNode implements CocosNode.CocosNodeRGBA, CocosNode.CocosNodeTexture {$/;"	c
AtlasSprite	nodes/AtlasSprite.java	/^    protected AtlasSprite(CCRect rect, AtlasSpriteManager manager) {$/;"	m	class:AtlasSprite
AtlasSprite	nodes/AtlasSprite.java	/^public class AtlasSprite extends CocosNode implements CocosNode.CocosNodeSize, CocosNode.CocosNodeFrames, CocosNode.CocosNodeRGBA {$/;"	c
AtlasSpriteDemo	tests/AtlasSpriteTest.java	/^        public AtlasSpriteDemo() {$/;"	m	class:AtlasSpriteTest.AtlasSpriteDemo
AtlasSpriteDemo	tests/AtlasSpriteTest.java	/^    static abstract class AtlasSpriteDemo extends Layer {$/;"	c	class:AtlasSpriteTest
AtlasSpriteFrame	nodes/AtlasSpriteFrame.java	/^    public AtlasSpriteFrame(CCRect frame) {$/;"	m	class:AtlasSpriteFrame
AtlasSpriteFrame	nodes/AtlasSpriteFrame.java	/^public class AtlasSpriteFrame {$/;"	c
AtlasSpriteManager	nodes/AtlasSpriteManager.java	/^    public AtlasSpriteManager(String fileImage, int capacity) {$/;"	m	class:AtlasSpriteManager
AtlasSpriteManager	nodes/AtlasSpriteManager.java	/^    public AtlasSpriteManager(String imageFile) {$/;"	m	class:AtlasSpriteManager
AtlasSpriteManager	nodes/AtlasSpriteManager.java	/^    public AtlasSpriteManager(Texture2D tex) {$/;"	m	class:AtlasSpriteManager
AtlasSpriteManager	nodes/AtlasSpriteManager.java	/^    public AtlasSpriteManager(Texture2D tex, int capacity) {$/;"	m	class:AtlasSpriteManager
AtlasSpriteManager	nodes/AtlasSpriteManager.java	/^public class AtlasSpriteManager extends CocosNode {$/;"	c
AtlasSpriteTest	tests/AtlasSpriteTest.java	/^public class AtlasSpriteTest extends Activity {$/;"	c
AtlasTest	tests/AtlasTest.java	/^public class AtlasTest extends Activity {$/;"	c
BUFFER	tests/JBox2DTest.java	/^        protected static final float BUFFER = 1.0f;$/;"	f	class:JBox2DTest.JBox2DTestLayer
BezierBy	actions/interval/BezierBy.java	/^    protected BezierBy(float t, CCBezierConfig c) {$/;"	m	class:BezierBy
BezierBy	actions/interval/BezierBy.java	/^public class BezierBy extends IntervalAction {$/;"	c
Blink	actions/interval/Blink.java	/^    protected Blink(float t, int b) {$/;"	m	class:Blink
Blink	actions/interval/Blink.java	/^public class Blink extends IntervalAction {$/;"	c
Box2DTest	tests/Box2DTest.java	/^public class Box2DTest extends Activity {$/;"	c
Box2DTestLayer	tests/Box2DTest.java	/^        public Box2DTestLayer()$/;"	m	class:Box2DTest.Box2DTestLayer
Box2DTestLayer	tests/Box2DTest.java	/^    static class Box2DTestLayer extends Layer {$/;"	c	class:Box2DTest
Box2DView	box2d/Box2DView.java	/^public class Box2DView {$/;"	c
CCAffineToGL	utils/TransformUtils.java	/^    public static void CCAffineToGL(final CCAffineTransform t, float[] m)$/;"	m	class:TransformUtils
CCAffineTransform	types/CCAffineTransform.java	/^    public CCAffineTransform() {$/;"	m	class:CCAffineTransform
CCAffineTransform	types/CCAffineTransform.java	/^    public CCAffineTransform(CCAffineTransform t) {$/;"	m	class:CCAffineTransform
CCAffineTransform	types/CCAffineTransform.java	/^    public CCAffineTransform(double m00, double m10, double m01, double m11, double m02, double m12) {$/;"	m	class:CCAffineTransform
CCAffineTransform	types/CCAffineTransform.java	/^    public CCAffineTransform(double[] matrix) {$/;"	m	class:CCAffineTransform
CCAffineTransform	types/CCAffineTransform.java	/^    public CCAffineTransform(float m00, float m10, float m01, float m11, float m02, float m12) {$/;"	m	class:CCAffineTransform
CCAffineTransform	types/CCAffineTransform.java	/^    public CCAffineTransform(float[] matrix) {$/;"	m	class:CCAffineTransform
CCAffineTransform	types/CCAffineTransform.java	/^public class CCAffineTransform \/*implements Cloneable, Serializable*\/ {$/;"	c
CCBezierConfig	types/CCBezierConfig.java	/^public class CCBezierConfig {$/;"	c
CCBlendFunc	types/CCBlendFunc.java	/^    public CCBlendFunc(int s, int d) {$/;"	m	class:CCBlendFunc
CCBlendFunc	types/CCBlendFunc.java	/^public class CCBlendFunc {$/;"	c
CCColor3B	types/CCColor3B.java	/^    public CCColor3B(int rr, int gg, int bb) {$/;"	m	class:CCColor3B
CCColor3B	types/CCColor3B.java	/^public class CCColor3B {$/;"	c
CCColor4B	types/CCColor4B.java	/^    public CCColor4B(int rr, int gg, int bb, int aa) {$/;"	m	class:CCColor4B
CCColor4B	types/CCColor4B.java	/^public class CCColor4B {$/;"	c
CCColorF	types/CCColorF.java	/^    public CCColorF() {$/;"	m	class:CCColorF
CCColorF	types/CCColorF.java	/^    public CCColorF(CCColor3B c)$/;"	m	class:CCColorF
CCColorF	types/CCColorF.java	/^    public CCColorF(CCColor4B c)$/;"	m	class:CCColorF
CCColorF	types/CCColorF.java	/^    public CCColorF(CCColorF c) {$/;"	m	class:CCColorF
CCColorF	types/CCColorF.java	/^    public CCColorF(float rr, float gg, float bb, float aa) {$/;"	m	class:CCColorF
CCColorF	types/CCColorF.java	/^public class CCColorF {$/;"	c
CCDeviceOrientationLandscapeLeft	nodes/Director.java	/^    public static final int CCDeviceOrientationLandscapeLeft = 3;$/;"	f	class:Director
CCDeviceOrientationLandscapeRight	nodes/Director.java	/^    public static final int CCDeviceOrientationLandscapeRight = 4;$/;"	f	class:Director
CCDeviceOrientationPortrait	nodes/Director.java	/^	public static final int CCDeviceOrientationPortrait = 1;$/;"	f	class:Director
CCDeviceOrientationPortraitUpsideDown	nodes/Director.java	/^    public static final int CCDeviceOrientationPortraitUpsideDown = 2;$/;"	f	class:Director
CCDirectorProjection2D	nodes/Director.java	/^    public static final int CCDirectorProjection2D = 1;$/;"	f	class:Director
CCDirectorProjection3D	nodes/Director.java	/^    public static final int CCDirectorProjection3D = 2;$/;"	f	class:Director
CCDirectorProjectionCustom	nodes/Director.java	/^    public static final int CCDirectorProjectionCustom = 3;$/;"	f	class:Director
CCDirectorProjectionDefault	nodes/Director.java	/^    public static final int CCDirectorProjectionDefault = CCDirectorProjection2D;$/;"	f	class:Director
CCFormatter	utils/CCFormatter.java	/^    public CCFormatter() {$/;"	m	class:CCFormatter
CCFormatter	utils/CCFormatter.java	/^public class CCFormatter {$/;"	c
CCGLSurfaceView	opengl/CCGLSurfaceView.java	/^    public CCGLSurfaceView(Context context) {$/;"	m	class:CCGLSurfaceView
CCGLSurfaceView	opengl/CCGLSurfaceView.java	/^public class CCGLSurfaceView extends GLSurfaceView {$/;"	c
CCGridSize	types/CCGridSize.java	/^    public CCGridSize(int x, int y) {$/;"	m	class:CCGridSize
CCGridSize	types/CCGridSize.java	/^public class CCGridSize {$/;"	c
CCMacros	types/CCMacros.java	/^public class CCMacros {$/;"	c
CCPoint	types/CCPoint.java	/^    private CCPoint(float x, float y) {$/;"	m	class:CCPoint	file:
CCPoint	types/CCPoint.java	/^    public CCPoint() {$/;"	m	class:CCPoint
CCPoint	types/CCPoint.java	/^public class CCPoint {$/;"	c
CCPointObject	nodes/ParallaxNode.java	/^        public CCPointObject(float ratioX, float ratioY, float offsetX, float offsetY) {$/;"	m	class:ParallaxNode.CCPointObject
CCPointObject	nodes/ParallaxNode.java	/^    static class CCPointObject$/;"	c	class:ParallaxNode
CCPointSize	types/CCPointSize.java	/^public class CCPointSize {$/;"	c
CCPointSprite	types/CCPointSprite.java	/^public class CCPointSprite {$/;"	c
CCQuad2	types/CCQuad2.java	/^    public CCQuad2() {$/;"	m	class:CCQuad2
CCQuad2	types/CCQuad2.java	/^    public CCQuad2(float a, float b, float c, float d, float e, float f, float g, float h) {$/;"	m	class:CCQuad2
CCQuad2	types/CCQuad2.java	/^    public CCQuad2(float[] f) {$/;"	m	class:CCQuad2
CCQuad2	types/CCQuad2.java	/^public class CCQuad2 {$/;"	c
CCQuad3	types/CCQuad3.java	/^    public CCQuad3() {$/;"	m	class:CCQuad3
CCQuad3	types/CCQuad3.java	/^    public CCQuad3(float a, float b, float c, float d, float e, float f, float g, float h, float i, float j, float k, float l) {$/;"	m	class:CCQuad3
CCQuad3	types/CCQuad3.java	/^    public CCQuad3(float[] f) {$/;"	m	class:CCQuad3
CCQuad3	types/CCQuad3.java	/^public class CCQuad3 {$/;"	c
CCRANDOM_0_1	types/CCMacros.java	/^    public static float CCRANDOM_0_1() {$/;"	m	class:CCMacros
CCRANDOM_MINUS1_1	types/CCMacros.java	/^    public static float CCRANDOM_MINUS1_1() {$/;"	m	class:CCMacros
CCRGBB	types/CCRGBB.java	/^    public CCRGBB(byte rr, byte gg, byte bb) {$/;"	m	class:CCRGBB
CCRGBB	types/CCRGBB.java	/^public class CCRGBB {$/;"	c
CCRect	types/CCRect.java	/^    private CCRect() {$/;"	m	class:CCRect	file:
CCRect	types/CCRect.java	/^    private CCRect(final CCPoint origin, final CCSize size) {$/;"	m	class:CCRect	file:
CCRect	types/CCRect.java	/^    private CCRect(float x, float y, float w, float h) {$/;"	m	class:CCRect	file:
CCRect	types/CCRect.java	/^public class CCRect {$/;"	c
CCSize	types/CCSize.java	/^    private CCSize() {$/;"	m	class:CCSize	file:
CCSize	types/CCSize.java	/^    private CCSize(float w, float h) {$/;"	m	class:CCSize	file:
CCSize	types/CCSize.java	/^public class CCSize {$/;"	c
CCTexParams	types/CCTexParams.java	/^    public CCTexParams(int min, int mag, int s, int t) {$/;"	m	class:CCTexParams
CCTexParams	types/CCTexParams.java	/^public class CCTexParams {$/;"	c
CCV3F_C4B_T2F_Quad	types/CCV3F_C4B_T2F_Quad.java	/^public class CCV3F_C4B_T2F_Quad {$/;"	c
CCVertex3D	types/CCVertex3D.java	/^    public CCVertex3D(float x, float y, float z) {$/;"	m	class:CCVertex3D
CCVertex3D	types/CCVertex3D.java	/^public class CCVertex3D {$/;"	c
CC_BLEND_DST	types/CCMacros.java	/^    public static final int CC_BLEND_DST = GL10.GL_ONE_MINUS_SRC_ALPHA;$/;"	f	class:CCMacros
CC_BLEND_SRC	types/CCMacros.java	/^    public static final int CC_BLEND_SRC = GL10.GL_SRC_ALPHA;$/;"	f	class:CCMacros
CC_DEGREES_TO_RADIANS	types/CCMacros.java	/^    public static float CC_DEGREES_TO_RADIANS(float angle) {$/;"	m	class:CCMacros
CC_RADIANS_TO_DEGREES	types/CCMacros.java	/^    public static float CC_RADIANS_TO_DEGREES(float angle) {$/;"	m	class:CCMacros
CC_SWAP	types/CCMacros.java	/^    public static void CC_SWAP(float x, float y ) {$/;"	m	class:CCMacros
CC_SWAP	types/CCMacros.java	/^    public static void CC_SWAP(int x, int y ) {$/;"	m	class:CCMacros
CENTER	nodes/Label.java	/^        CENTER,$/;"	e	enum:Label.TextAlignment	file:
COUNT	nodes/Ribbon.java	/^        private static final int COUNT = 50;$/;"	f	class:Ribbon.RibbonSegment	file:
CallFunc	actions/instant/CallFunc.java	/^    protected CallFunc(Object t, String s) {$/;"	m	class:CallFunc
CallFunc	actions/instant/CallFunc.java	/^public class CallFunc extends InstantAction {$/;"	c
CallFuncN	actions/instant/CallFuncN.java	/^    protected CallFuncN(Object t, String s) {$/;"	m	class:CallFuncN
CallFuncN	actions/instant/CallFuncN.java	/^public class CallFuncN extends CallFunc {$/;"	c
CallFuncND	actions/instant/CallFuncND.java	/^    protected CallFuncND(Object t, String s, Object d) {$/;"	m	class:CallFuncND
CallFuncND	actions/instant/CallFuncND.java	/^public class CallFuncND extends CallFuncN {$/;"	c
Camera	opengl/Camera.java	/^    public Camera() {$/;"	m	class:Camera
Camera	opengl/Camera.java	/^public class Camera {$/;"	c
CameraAction	actions/camera/CameraAction.java	/^    protected CameraAction(float t) {$/;"	m	class:CameraAction
CameraAction	actions/camera/CameraAction.java	/^public abstract class CameraAction extends IntervalAction {$/;"	c
ClickAndMoveTest	tests/ClickAndMoveTest.java	/^public class ClickAndMoveTest extends Activity {$/;"	c
Cocos2D	Cocos2D.java	/^public class Cocos2D extends ListActivity {$/;"	c
CocosActionTag	actions/base/Action.java	/^    public interface CocosActionTag {$/;"	i	class:Action
CocosAnimation	nodes/CocosNode.java	/^    public interface CocosAnimation {$/;"	i	class:CocosNode
CocosNode	nodes/CocosNode.java	/^    protected CocosNode() {$/;"	m	class:CocosNode
CocosNode	nodes/CocosNode.java	/^public class CocosNode {$/;"	c
CocosNodeFrames	nodes/CocosNode.java	/^    public interface CocosNodeFrames {$/;"	i	class:CocosNode
CocosNodeLabel	nodes/CocosNode.java	/^    public interface CocosNodeLabel {$/;"	i	class:CocosNode
CocosNodeRGBA	nodes/CocosNode.java	/^    public interface CocosNodeRGBA {$/;"	i	class:CocosNode
CocosNodeSize	nodes/CocosNode.java	/^    public interface CocosNodeSize {$/;"	i	class:CocosNode
CocosNodeTest	tests/CocosNodeTest.java	/^public class CocosNodeTest extends Activity {$/;"	c
CocosNodeTexture	nodes/CocosNode.java	/^    interface CocosNodeTexture {$/;"	i	class:CocosNode
ColorLayer	layers/ColorLayer.java	/^    protected ColorLayer(CCColor4B color) {$/;"	m	class:ColorLayer
ColorLayer	layers/ColorLayer.java	/^    protected ColorLayer(CCColor4B color, float w, float h) {$/;"	m	class:ColorLayer
ColorLayer	layers/ColorLayer.java	/^public class ColorLayer extends Layer implements CocosNode.CocosNodeRGBA, CocosNode.CocosNodeSize {$/;"	c
CompleteBombSpawn	box2d/Test.java	/^    public abstract void CompleteBombSpawn(final BBVec2 p);$/;"	m	class:Test
ContactPoint	box2d/ContactPoint.java	/^public class ContactPoint {$/;"	c
Copyable	types/Copyable.java	/^public interface Copyable {$/;"	i
DEBUG	tests/AtlasSpriteTest.java	/^    private static final boolean DEBUG = true;$/;"	f	class:AtlasSpriteTest	file:
DEBUG	tests/ParallaxTest.java	/^    private static final boolean DEBUG = true;$/;"	f	class:ParallaxTest	file:
DEBUG	tests/ParticleTest.java	/^    private static final boolean DEBUG = true;$/;"	f	class:ParticleTest	file:
DEBUG_DRAW	nodes/AtlasSpriteManager.java	/^    private static boolean DEBUG_DRAW = false;$/;"	f	class:AtlasSpriteManager	file:
DelayTime	actions/interval/DelayTime.java	/^    protected DelayTime(float t) {$/;"	m	class:DelayTime
DelayTime	actions/interval/DelayTime.java	/^public class DelayTime extends IntervalAction {$/;"	c
DemoExplosion	tests/ParticleTest.java	/^    static class DemoExplosion extends ParticleDemo {$/;"	c	class:ParticleTest
DemoFire	tests/ParticleTest.java	/^    static class DemoFire extends ParticleDemo {$/;"	c	class:ParticleTest
DemoFirework	tests/ParticleTest.java	/^    static class DemoFirework extends ParticleDemo {$/;"	c	class:ParticleTest
DestructionListener	box2d/DestructionListener.java	/^public class DestructionListener implements BBDestructionListener {$/;"	c
Director	nodes/Director.java	/^    protected Director() {$/;"	m	class:Director
Director	nodes/Director.java	/^public class Director implements GLSurfaceView.Renderer {$/;"	c
DrawAABB	box2d/GLESDebugDraw.java	/^    public void DrawAABB(GL10 gl, BBAABB aabb, final BBColor color) {$/;"	m	class:GLESDebugDraw
DrawPoint	box2d/GLESDebugDraw.java	/^    public void DrawPoint(GL10 gl, final BBVec2 p, float size, final BBColor color) {$/;"	m	class:GLESDebugDraw
DrawPrimitivesTest	tests/DrawPrimitivesTest.java	/^public class DrawPrimitivesTest extends Activity {$/;"	c
DrawString	box2d/GLESDebugDraw.java	/^    public void DrawString(GL10 gl, int x, int y, String... string) {$/;"	m	class:GLESDebugDraw
DrawTransform	box2d/GLESDebugDraw.java	/^    void DrawTransform(GL10 gl, final BBTransform xf) {$/;"	m	class:GLESDebugDraw
EaseAction	actions/ease/EaseAction.java	/^    protected EaseAction(IntervalAction action) {$/;"	m	class:EaseAction
EaseAction	actions/ease/EaseAction.java	/^public class EaseAction extends IntervalAction {$/;"	c
EaseActionsTest	tests/EaseActionsTest.java	/^public class EaseActionsTest extends Activity {$/;"	c
EaseBackIn	actions/ease/EaseBackIn.java	/^    protected EaseBackIn(IntervalAction action) {$/;"	m	class:EaseBackIn
EaseBackIn	actions/ease/EaseBackIn.java	/^public class EaseBackIn extends EaseAction {$/;"	c
EaseBackInOut	actions/ease/EaseBackInOut.java	/^    protected EaseBackInOut(IntervalAction action) {$/;"	m	class:EaseBackInOut
EaseBackInOut	actions/ease/EaseBackInOut.java	/^public class EaseBackInOut extends EaseAction {$/;"	c
EaseBackOut	actions/ease/EaseBackOut.java	/^    protected EaseBackOut(IntervalAction action) {$/;"	m	class:EaseBackOut
EaseBackOut	actions/ease/EaseBackOut.java	/^public class EaseBackOut extends EaseAction {$/;"	c
EaseBounce	actions/ease/EaseBounce.java	/^    protected EaseBounce(IntervalAction action) {$/;"	m	class:EaseBounce
EaseBounce	actions/ease/EaseBounce.java	/^public abstract class EaseBounce extends EaseAction {$/;"	c
EaseBounceIn	actions/ease/EaseBounceIn.java	/^    protected EaseBounceIn(IntervalAction action) {$/;"	m	class:EaseBounceIn
EaseBounceIn	actions/ease/EaseBounceIn.java	/^public class EaseBounceIn extends EaseBounce {$/;"	c
EaseBounceInOut	actions/ease/EaseBounceInOut.java	/^    protected EaseBounceInOut(IntervalAction action) {$/;"	m	class:EaseBounceInOut
EaseBounceInOut	actions/ease/EaseBounceInOut.java	/^public class EaseBounceInOut extends EaseBounce {$/;"	c
EaseBounceOut	actions/ease/EaseBounceOut.java	/^    protected EaseBounceOut(IntervalAction action) {$/;"	m	class:EaseBounceOut
EaseBounceOut	actions/ease/EaseBounceOut.java	/^public class EaseBounceOut extends EaseBounce {$/;"	c
EaseElastic	actions/ease/EaseElastic.java	/^    protected EaseElastic(IntervalAction action, float period) {$/;"	m	class:EaseElastic
EaseElastic	actions/ease/EaseElastic.java	/^public abstract class EaseElastic extends EaseAction {$/;"	c
EaseElasticIn	actions/ease/EaseElasticIn.java	/^    protected EaseElasticIn(IntervalAction action, float period) {$/;"	m	class:EaseElasticIn
EaseElasticIn	actions/ease/EaseElasticIn.java	/^public class EaseElasticIn extends EaseElastic {$/;"	c
EaseElasticInOut	actions/ease/EaseElasticInOut.java	/^    protected EaseElasticInOut(IntervalAction action, float period) {$/;"	m	class:EaseElasticInOut
EaseElasticInOut	actions/ease/EaseElasticInOut.java	/^public class EaseElasticInOut extends EaseElastic {$/;"	c
EaseElasticOut	actions/ease/EaseElasticOut.java	/^    protected EaseElasticOut(IntervalAction action, float period) {$/;"	m	class:EaseElasticOut
EaseElasticOut	actions/ease/EaseElasticOut.java	/^public class EaseElasticOut extends EaseElastic {$/;"	c
EaseExponentialIn	actions/ease/EaseExponentialIn.java	/^    protected EaseExponentialIn(IntervalAction action) {$/;"	m	class:EaseExponentialIn
EaseExponentialIn	actions/ease/EaseExponentialIn.java	/^public class EaseExponentialIn extends EaseAction {$/;"	c
EaseExponentialInOut	actions/ease/EaseExponentialInOut.java	/^    protected EaseExponentialInOut(IntervalAction action) {$/;"	m	class:EaseExponentialInOut
EaseExponentialInOut	actions/ease/EaseExponentialInOut.java	/^public class EaseExponentialInOut extends EaseAction {$/;"	c
EaseExponentialOut	actions/ease/EaseExponentialOut.java	/^    protected EaseExponentialOut(IntervalAction action) {$/;"	m	class:EaseExponentialOut
EaseExponentialOut	actions/ease/EaseExponentialOut.java	/^public class EaseExponentialOut extends EaseAction {$/;"	c
EaseIn	actions/ease/EaseIn.java	/^    protected EaseIn(IntervalAction action, float rate) {$/;"	m	class:EaseIn
EaseIn	actions/ease/EaseIn.java	/^public class EaseIn extends EaseRateAction {$/;"	c
EaseInOut	actions/ease/EaseInOut.java	/^    protected EaseInOut(IntervalAction action, float rate) {$/;"	m	class:EaseInOut
EaseInOut	actions/ease/EaseInOut.java	/^public class EaseInOut extends EaseRateAction {$/;"	c
EaseOut	actions/ease/EaseOut.java	/^    protected EaseOut(IntervalAction action, float rate) {$/;"	m	class:EaseOut
EaseOut	actions/ease/EaseOut.java	/^public class EaseOut extends EaseRateAction {$/;"	c
EaseRateAction	actions/ease/EaseRateAction.java	/^    protected EaseRateAction(IntervalAction action, float aRate) {$/;"	m	class:EaseRateAction
EaseRateAction	actions/ease/EaseRateAction.java	/^public class EaseRateAction extends EaseAction {$/;"	c
EaseSineIn	actions/ease/EaseSineIn.java	/^    protected EaseSineIn(IntervalAction action) {$/;"	m	class:EaseSineIn
EaseSineIn	actions/ease/EaseSineIn.java	/^public class EaseSineIn extends EaseAction {$/;"	c
EaseSineInOut	actions/ease/EaseSineInOut.java	/^    protected EaseSineInOut(IntervalAction action) {$/;"	m	class:EaseSineInOut
EaseSineInOut	actions/ease/EaseSineInOut.java	/^public class EaseSineInOut extends EaseAction {$/;"	c
EaseSineOut	actions/ease/EaseSineOut.java	/^    protected EaseSineOut(IntervalAction action) {$/;"	m	class:EaseSineOut
EaseSineOut	actions/ease/EaseSineOut.java	/^public class EaseSineOut extends EaseAction {$/;"	c
Edge	types/CCRect.java	/^    public enum Edge {$/;"	g	class:CCRect
FAST_FPS_DISPLAY	nodes/Director.java	/^    private static final boolean FAST_FPS_DISPLAY = true;$/;"	f	class:Director	file:
FadeBLTransition	transitions/FadeBLTransition.java	/^    public FadeBLTransition(float t, Scene s) {$/;"	m	class:FadeBLTransition
FadeBLTransition	transitions/FadeBLTransition.java	/^public class FadeBLTransition extends FadeTRTransition {$/;"	c
FadeDownTransition	transitions/FadeDownTransition.java	/^    public FadeDownTransition(float t, Scene s) {$/;"	m	class:FadeDownTransition
FadeDownTransition	transitions/FadeDownTransition.java	/^public class FadeDownTransition extends FadeTRTransition {$/;"	c
FadeIn	actions/interval/FadeIn.java	/^    protected FadeIn(float t) {$/;"	m	class:FadeIn
FadeIn	actions/interval/FadeIn.java	/^public class FadeIn extends IntervalAction {$/;"	c
FadeOut	actions/interval/FadeOut.java	/^    protected FadeOut(float t) {$/;"	m	class:FadeOut
FadeOut	actions/interval/FadeOut.java	/^public class FadeOut extends IntervalAction {$/;"	c
FadeTRTransition	transitions/FadeTRTransition.java	/^    public FadeTRTransition(float t, Scene s) {$/;"	m	class:FadeTRTransition
FadeTRTransition	transitions/FadeTRTransition.java	/^public class FadeTRTransition extends TransitionScene {$/;"	c
FadeTo	actions/interval/FadeTo.java	/^    protected FadeTo(float t, byte a) {$/;"	m	class:FadeTo
FadeTo	actions/interval/FadeTo.java	/^public class FadeTo extends IntervalAction {$/;"	c
FadeTransition	transitions/FadeTransition.java	/^    public FadeTransition(float d, Scene s) {$/;"	m	class:FadeTransition
FadeTransition	transitions/FadeTransition.java	/^    public FadeTransition(float d, Scene s, CCColor3B rgb) {$/;"	m	class:FadeTransition
FadeTransition	transitions/FadeTransition.java	/^public class FadeTransition extends TransitionScene {$/;"	c
FadeUpTransition	transitions/FadeUpTransition.java	/^    public FadeUpTransition(float t, Scene s) {$/;"	m	class:FadeUpTransition
FadeUpTransition	transitions/FadeUpTransition.java	/^public class FadeUpTransition extends FadeTRTransition {$/;"	c
FadeWhiteTransition	tests/TransitionsTest.java	/^        public FadeWhiteTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.FadeWhiteTransition
FadeWhiteTransition	tests/TransitionsTest.java	/^    static class FadeWhiteTransition extends FadeTransition {$/;"	c	class:TransitionsTest
FiniteTimeAction	actions/base/FiniteTimeAction.java	/^    protected FiniteTimeAction(float d) {$/;"	m	class:FiniteTimeAction
FiniteTimeAction	actions/base/FiniteTimeAction.java	/^public class FiniteTimeAction extends Action {$/;"	c
FlipAngularLeftOverTransition	tests/TransitionsTest.java	/^        public FlipAngularLeftOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.FlipAngularLeftOverTransition
FlipAngularLeftOverTransition	tests/TransitionsTest.java	/^    static class FlipAngularLeftOverTransition extends FlipAngularTransition {$/;"	c	class:TransitionsTest
FlipAngularRightOverTransition	tests/TransitionsTest.java	/^        public FlipAngularRightOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.FlipAngularRightOverTransition
FlipAngularRightOverTransition	tests/TransitionsTest.java	/^    static class FlipAngularRightOverTransition extends FlipAngularTransition {$/;"	c	class:TransitionsTest
FlipAngularTransition	transitions/FlipAngularTransition.java	/^    public FlipAngularTransition(float t, Scene s, int orientation) {$/;"	m	class:FlipAngularTransition
FlipAngularTransition	transitions/FlipAngularTransition.java	/^public class FlipAngularTransition extends OrientedTransitionScene {$/;"	c
FlipXLeftOverTransition	tests/TransitionsTest.java	/^        public FlipXLeftOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.FlipXLeftOverTransition
FlipXLeftOverTransition	tests/TransitionsTest.java	/^    static class FlipXLeftOverTransition extends FlipXTransition {$/;"	c	class:TransitionsTest
FlipXRightOverTransition	tests/TransitionsTest.java	/^        public FlipXRightOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.FlipXRightOverTransition
FlipXRightOverTransition	tests/TransitionsTest.java	/^    static class FlipXRightOverTransition extends FlipXTransition {$/;"	c	class:TransitionsTest
FlipXTransition	transitions/FlipXTransition.java	/^    public FlipXTransition(float t, Scene s, int orientation) {$/;"	m	class:FlipXTransition
FlipXTransition	transitions/FlipXTransition.java	/^public class FlipXTransition extends OrientedTransitionScene {$/;"	c
FlipYDownOverTransition	tests/TransitionsTest.java	/^        public FlipYDownOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.FlipYDownOverTransition
FlipYDownOverTransition	tests/TransitionsTest.java	/^    static class FlipYDownOverTransition extends FlipYTransition {$/;"	c	class:TransitionsTest
FlipYTransition	transitions/FlipYTransition.java	/^    public FlipYTransition(float t, Scene s, int orientation) {$/;"	m	class:FlipYTransition
FlipYTransition	transitions/FlipYTransition.java	/^public class FlipYTransition extends OrientedTransitionScene {$/;"	c
FlipYUpOverTransition	tests/TransitionsTest.java	/^        public FlipYUpOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.FlipYUpOverTransition
FlipYUpOverTransition	tests/TransitionsTest.java	/^    static class FlipYUpOverTransition extends FlipYTransition {$/;"	c	class:TransitionsTest
FloatBufferProvider	utils/FloatBufferProvider.java	/^public class FloatBufferProvider {$/;"	c
GLDebugWrapper	opengl/GLDebugWrapper.java	/^public class GLDebugWrapper implements GLSurfaceView.GLWrapper {$/;"	c
GLESDebugDraw	box2d/GLESDebugDraw.java	/^    public GLESDebugDraw( float ratio ) {$/;"	m	class:GLESDebugDraw
GLESDebugDraw	box2d/GLESDebugDraw.java	/^    public GLESDebugDraw() {$/;"	m	class:GLESDebugDraw
GLESDebugDraw	box2d/GLESDebugDraw.java	/^public class GLESDebugDraw extends BBDebugDraw {$/;"	c
GLToCGAffine	utils/TransformUtils.java	/^    void GLToCGAffine(final float[] m, CCAffineTransform t)$/;"	m	class:TransformUtils
GLU	opengl/GLU.java	/^public class GLU {$/;"	c
Grid3D	grid/Grid3D.java	/^    public Grid3D(CCGridSize gSize) {$/;"	m	class:Grid3D
Grid3D	grid/Grid3D.java	/^public class Grid3D extends GridBase {$/;"	c
Grid3DAction	actions/grid/Grid3DAction.java	/^    protected Grid3DAction(CCGridSize gSize, float d) {$/;"	m	class:Grid3DAction
Grid3DAction	actions/grid/Grid3DAction.java	/^public class Grid3DAction extends GridAction {$/;"	c
GridAction	actions/grid/GridAction.java	/^    protected GridAction(CCGridSize gSize, float d) {$/;"	m	class:GridAction
GridAction	actions/grid/GridAction.java	/^public abstract class GridAction extends IntervalAction {$/;"	c
GridBase	grid/GridBase.java	/^    public GridBase(CCGridSize gSize) {$/;"	m	class:GridBase
GridBase	grid/GridBase.java	/^public abstract class GridBase {$/;"	c
HashCode	types/CCAffineTransform.java	/^final class HashCode {$/;"	c
HashElement	actions/ActionManager.java	/^        HashElement(CocosNode t, boolean p) {$/;"	m	class:ActionManager.HashElement
HashElement	actions/ActionManager.java	/^    static class HashElement {$/;"	c	class:ActionManager
Hide	actions/instant/Hide.java	/^public class Hide extends InstantAction {$/;"	c
INT_MIN	types/CCMacros.java	/^    public static final int INT_MIN = -2147483648;$/;"	f	class:CCMacros
INVALID_TAG	actions/base/Action.java	/^    public static final int INVALID_TAG = -1;$/;"	f	class:Action
INVALID_TAG	nodes/CocosNode.java	/^    public static final int INVALID_TAG = -1;$/;"	f	class:CocosNode
ImageTGA	opengl/TGA.java	/^    public static class ImageTGA {$/;"	c	class:TGA
InstantAction	actions/instant/InstantAction.java	/^    protected InstantAction() {$/;"	m	class:InstantAction
InstantAction	actions/instant/InstantAction.java	/^public class InstantAction extends FiniteTimeAction {$/;"	c
IntervalAction	actions/interval/IntervalAction.java	/^    protected IntervalAction(float d) {$/;"	m	class:IntervalAction
IntervalAction	actions/interval/IntervalAction.java	/^public class IntervalAction extends FiniteTimeAction {$/;"	c
JBox2DTest	tests/JBox2DTest.java	/^public class JBox2DTest extends Activity {$/;"	c
JBox2DTestLayer	tests/JBox2DTest.java	/^        public JBox2DTestLayer() {$/;"	m	class:JBox2DTest.JBox2DTestLayer
JBox2DTestLayer	tests/JBox2DTest.java	/^    static class JBox2DTestLayer extends Layer {$/;"	c	class:JBox2DTest
JointDestroyed	box2d/Test.java	/^    public abstract void JointDestroyed(BBJoint joint);$/;"	m	class:Test
JumpBy	actions/interval/JumpBy.java	/^    protected JumpBy(float time, float x, float y, float h, int j) {$/;"	m	class:JumpBy
JumpBy	actions/interval/JumpBy.java	/^public class JumpBy extends IntervalAction {$/;"	c
JumpTo	actions/interval/JumpTo.java	/^    protected JumpTo(float time, float x, float y, float height, int jumps) {$/;"	m	class:JumpTo
JumpTo	actions/interval/JumpTo.java	/^public class JumpTo extends JumpBy {$/;"	c
JumpZoomTransition	transitions/JumpZoomTransition.java	/^    public JumpZoomTransition(float t, Scene s) {$/;"	m	class:JumpZoomTransition
JumpZoomTransition	transitions/JumpZoomTransition.java	/^public class JumpZoomTransition extends TransitionScene {$/;"	c
Keyboard	box2d/Test.java	/^    public abstract void Keyboard(char key);$/;"	m	class:Test
LANDSCAPE_LEFT	grid/GridBase.java	/^    private static final boolean LANDSCAPE_LEFT = false;$/;"	f	class:GridBase	file:
LEFT	nodes/Label.java	/^        LEFT,$/;"	e	enum:Label.TextAlignment	file:
LOG_TAG	actions/ActionManager.java	/^    private static final String LOG_TAG = ActionManager.class.getSimpleName();$/;"	f	class:ActionManager	file:
LOG_TAG	actions/base/Action.java	/^    private static final String LOG_TAG = Action.class.getSimpleName();$/;"	f	class:Action	file:
LOG_TAG	actions/base/FiniteTimeAction.java	/^    private static final String LOG_TAG = FiniteTimeAction.class.getSimpleName();$/;"	f	class:FiniteTimeAction	file:
LOG_TAG	nodes/CocosNode.java	/^    private static final String LOG_TAG = CocosNode.class.getSimpleName();$/;"	f	class:CocosNode	file:
LOG_TAG	nodes/Director.java	/^    private static final String LOG_TAG = Director.class.getSimpleName();$/;"	f	class:Director	file:
LOG_TAG	opengl/GLDebugWrapper.java	/^    private static final String LOG_TAG = GLDebugWrapper.class.getSimpleName();$/;"	f	class:GLDebugWrapper	file:
LOG_TAG	opengl/TGA.java	/^    private static final String LOG_TAG = TGA.class.getSimpleName();$/;"	f	class:TGA	file:
LOG_TAG	opengl/Texture2D.java	/^    private static final String LOG_TAG = Texture2D.class.getSimpleName();$/;"	f	class:Texture2D	file:
LOG_TAG	tests/AtlasTest.java	/^    private static final String LOG_TAG = AtlasTest.class.getSimpleName();$/;"	f	class:AtlasTest	file:
LOG_TAG	tests/JBox2DTest.java	/^    private static final String LOG_TAG = JBox2DTest.class.getSimpleName();$/;"	f	class:JBox2DTest	file:
LOG_TAG	tests/MenuTest.java	/^    private static final String LOG_TAG = MenuTest.class.getSimpleName();$/;"	f	class:MenuTest	file:
LOG_TAG	tests/RotateWorldTest.java	/^    private static final String LOG_TAG = RotateWorldTest.class.getSimpleName();$/;"	f	class:RotateWorldTest	file:
LOG_TAG	tests/SceneTest.java	/^    private static final String LOG_TAG = SceneTest.class.getSimpleName();$/;"	f	class:SceneTest	file:
Label	nodes/Label.java	/^    protected Label(String string, String fontname, float fontsize) {$/;"	m	class:Label
Label	nodes/Label.java	/^    protected Label(String string, float w, float h, TextAlignment alignment, String name, float size) {$/;"	m	class:Label
Label	nodes/Label.java	/^public class Label extends TextureNode implements CocosNode.CocosNodeLabel, CocosNode.CocosNodeSize {$/;"	c
LabelAtlas	nodes/LabelAtlas.java	/^    protected LabelAtlas(String theString, String charmapfile, int w, int h, char c) {$/;"	m	class:LabelAtlas
LabelAtlas	nodes/LabelAtlas.java	/^public class LabelAtlas extends AtlasNode implements CocosNode.CocosNodeLabel, CocosNode.CocosNodeSize {$/;"	c
LaunchBomb	box2d/Test.java	/^    public abstract void LaunchBomb();$/;"	m	class:Test
LaunchBomb	box2d/Test.java	/^    public abstract void LaunchBomb(final BBVec2 position, final BBVec2 velocity);$/;"	m	class:Test
Layer	layers/Layer.java	/^    protected Layer() {$/;"	m	class:Layer
Layer	layers/Layer.java	/^public class Layer extends CocosNode implements TouchDelegate, SensorEventListener {$/;"	c
Layer1	tests/MenuTest.java	/^        public Layer1() {$/;"	m	class:MenuTest.Layer1
Layer1	tests/MenuTest.java	/^    static class Layer1 extends Layer {$/;"	c	class:MenuTest
Layer1	tests/SceneTest.java	/^        public Layer1() {$/;"	m	class:SceneTest.Layer1
Layer1	tests/SceneTest.java	/^    static class Layer1 extends Layer {$/;"	c	class:SceneTest
Layer2	tests/MenuTest.java	/^    static class Layer2 extends Layer {$/;"	c	class:MenuTest
Layer2	tests/SceneTest.java	/^        public Layer2() {$/;"	m	class:SceneTest.Layer2
Layer2	tests/SceneTest.java	/^    static class Layer2 extends Layer {$/;"	c	class:SceneTest
Layer3	tests/MenuTest.java	/^    static class Layer3 extends Layer {$/;"	c	class:MenuTest
Layer3	tests/SceneTest.java	/^        public Layer3() {$/;"	m	class:SceneTest.Layer3
Layer3	tests/SceneTest.java	/^    static class Layer3 extends ColorLayer {$/;"	c	class:SceneTest
Layer4	tests/MenuTest.java	/^    static class Layer4 extends Layer {$/;"	c	class:MenuTest
MainLayer	tests/ClickAndMoveTest.java	/^        public MainLayer() {$/;"	m	class:ClickAndMoveTest.MainLayer
MainLayer	tests/ClickAndMoveTest.java	/^    static class MainLayer extends Layer {$/;"	c	class:ClickAndMoveTest
MainLayer	tests/RotateWorldTest.java	/^        public MainLayer() {$/;"	m	class:RotateWorldTest.MainLayer
MainLayer	tests/RotateWorldTest.java	/^    static class MainLayer extends Layer {$/;"	c	class:RotateWorldTest
MaxXEdge	types/CCRect.java	/^        MaxXEdge,$/;"	e	enum:CCRect.Edge	file:
MaxYEdge	types/CCRect.java	/^        MaxYEdge,$/;"	e	enum:CCRect.Edge	file:
Menu	menus/Menu.java	/^    protected Menu(MenuItem... items) {$/;"	m	class:Menu
Menu	menus/Menu.java	/^public class Menu extends Layer {$/;"	c
MenuItem	menus/MenuItem.java	/^    protected MenuItem(Object rec, String cb) {$/;"	m	class:MenuItem
MenuItem	menus/MenuItem.java	/^public abstract class MenuItem extends CocosNode {$/;"	c
MenuItemAtlasFont	menus/MenuItemAtlasFont.java	/^    protected MenuItemAtlasFont(LabelAtlas label, CocosNode rec, String cb) {$/;"	m	class:MenuItemAtlasFont
MenuItemAtlasFont	menus/MenuItemAtlasFont.java	/^public class MenuItemAtlasFont extends MenuItemLabel {$/;"	c
MenuItemAtlasSprite	menus/MenuItemAtlasSprite.java	/^    protected MenuItemAtlasSprite(AtlasSprite normalSprite, AtlasSprite selectedSprite, AtlasSprite disabledSprite,$/;"	m	class:MenuItemAtlasSprite
MenuItemAtlasSprite	menus/MenuItemAtlasSprite.java	/^public class MenuItemAtlasSprite extends MenuItemSprite {$/;"	c
MenuItemFont	menus/MenuItemFont.java	/^    protected MenuItemFont(Label label, CocosNode rec, String cb) {$/;"	m	class:MenuItemFont
MenuItemFont	menus/MenuItemFont.java	/^public class MenuItemFont extends MenuItemLabel {$/;"	c
MenuItemImage	menus/MenuItemImage.java	/^    protected MenuItemImage(Sprite normal, Sprite selected, Sprite disabled, CocosNode t, String sel) {$/;"	m	class:MenuItemImage
MenuItemImage	menus/MenuItemImage.java	/^public class MenuItemImage extends MenuItemSprite {$/;"	c
MenuItemLabel	menus/MenuItemLabel.java	/^    protected MenuItemLabel(CocosNodeLabel label, CocosNode target, String selector) {$/;"	m	class:MenuItemLabel
MenuItemLabel	menus/MenuItemLabel.java	/^public class MenuItemLabel extends MenuItem implements CocosNode.CocosNodeRGBA {$/;"	c
MenuItemSprite	menus/MenuItemSprite.java	/^    protected MenuItemSprite(CocosNode normalSprite, CocosNode selectedSprite, CocosNode disabledSprite, CocosNode target, String selector) {$/;"	m	class:MenuItemSprite
MenuItemSprite	menus/MenuItemSprite.java	/^public class MenuItemSprite extends MenuItem implements CocosNode.CocosNodeRGBA {$/;"	c
MenuItemToggle	menus/MenuItemToggle.java	/^    protected MenuItemToggle(CocosNode t, String sel, MenuItem... items) {$/;"	m	class:MenuItemToggle
MenuItemToggle	menus/MenuItemToggle.java	/^public class MenuItemToggle extends MenuItem {$/;"	c
MenuState	menus/Menu.java	/^    enum MenuState {$/;"	g	class:Menu
MenuTest	tests/MenuTest.java	/^public class MenuTest extends Activity {$/;"	c
MinXEdge	types/CCRect.java	/^        MinXEdge,$/;"	e	enum:CCRect.Edge	file:
MinYEdge	types/CCRect.java	/^        MinYEdge,$/;"	e	enum:CCRect.Edge	file:
MotionStreak	nodes/MotionStreak.java	/^    public MotionStreak(float fade, float seg, String path, float width, float length, CCColor4B color) {$/;"	m	class:MotionStreak
MotionStreak	nodes/MotionStreak.java	/^public class MotionStreak extends CocosNode \/*implements CocosNodeTexture*\/ {$/;"	c
MotionStreakTest	tests/MotionStreakTest.java	/^public class MotionStreakTest extends Activity {$/;"	c
MouseDown	box2d/Test.java	/^    public abstract boolean MouseDown(final BBVec2 p);$/;"	m	class:Test
MouseMove	box2d/Test.java	/^    public abstract void MouseMove(final BBVec2 p);$/;"	m	class:Test
MouseUp	box2d/Test.java	/^    public abstract void MouseUp(final BBVec2 p);$/;"	m	class:Test
MoveBy	actions/interval/MoveBy.java	/^    protected MoveBy(float t, float x, float y) {$/;"	m	class:MoveBy
MoveBy	actions/interval/MoveBy.java	/^public class MoveBy extends MoveTo {$/;"	c
MoveInBTransition	transitions/MoveInBTransition.java	/^    public MoveInBTransition(float t, Scene s) {$/;"	m	class:MoveInBTransition
MoveInBTransition	transitions/MoveInBTransition.java	/^public class MoveInBTransition extends MoveInLTransition {$/;"	c
MoveInLTransition	transitions/MoveInLTransition.java	/^    public MoveInLTransition(float t, Scene s) {$/;"	m	class:MoveInLTransition
MoveInLTransition	transitions/MoveInLTransition.java	/^public class MoveInLTransition extends TransitionScene {$/;"	c
MoveInRTransition	transitions/MoveInRTransition.java	/^    public MoveInRTransition(float t, Scene s) {$/;"	m	class:MoveInRTransition
MoveInRTransition	transitions/MoveInRTransition.java	/^public class MoveInRTransition extends MoveInLTransition {$/;"	c
MoveInTTransition	transitions/MoveInTTransition.java	/^    public MoveInTTransition(float t, Scene s) {$/;"	m	class:MoveInTTransition
MoveInTTransition	transitions/MoveInTTransition.java	/^public class MoveInTTransition extends MoveInLTransition {$/;"	c
MoveTo	actions/interval/MoveTo.java	/^    protected MoveTo(float t, float x, float y) {$/;"	m	class:MoveTo
MoveTo	actions/interval/MoveTo.java	/^public class MoveTo extends IntervalAction {$/;"	c
MultiplexLayer	layers/MultiplexLayer.java	/^    protected MultiplexLayer(Layer... params) {$/;"	m	class:MultiplexLayer
MultiplexLayer	layers/MultiplexLayer.java	/^public class MultiplexLayer extends Layer {$/;"	c
MultiplexLayerInvalidIndex	layers/MultiplexLayer.java	/^        public MultiplexLayerInvalidIndex(String reason) {$/;"	m	class:MultiplexLayer.MultiplexLayerInvalidIndex
MultiplexLayerInvalidIndex	layers/MultiplexLayer.java	/^    static class MultiplexLayerInvalidIndex extends RuntimeException {$/;"	c	class:MultiplexLayer
MyGLImplementation	opengl/GLDebugWrapper.java	/^        MyGLImplementation(GL10 gl) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
MyGLImplementation	opengl/GLDebugWrapper.java	/^    static class MyGLImplementation implements GL, GL10 {$/;"	c	class:GLDebugWrapper
NoninvertibleTransformException	types/NoninvertibleTransformException.java	/^    public NoninvertibleTransformException(String s) {$/;"	m	class:NoninvertibleTransformException
NoninvertibleTransformException	types/NoninvertibleTransformException.java	/^public class NoninvertibleTransformException extends java.lang.Exception {$/;"	c
OpenGLViewAlreadyAttachedException	opengl/OpenGLViewAlreadyAttachedException.java	/^    public OpenGLViewAlreadyAttachedException(String reason) {$/;"	m	class:OpenGLViewAlreadyAttachedException
OpenGLViewAlreadyAttachedException	opengl/OpenGLViewAlreadyAttachedException.java	/^public class OpenGLViewAlreadyAttachedException extends Exception {$/;"	c
OpenGLViewCantAttachException	opengl/OpenGLViewCantAttachException.java	/^    public OpenGLViewCantAttachException(String reason) {$/;"	m	class:OpenGLViewCantAttachException
OpenGLViewCantAttachException	opengl/OpenGLViewCantAttachException.java	/^public class OpenGLViewCantAttachException extends Exception {$/;"	c
OpenGLViewCantDetachException	opengl/OpenGLViewCantDetachException.java	/^    public OpenGLViewCantDetachException(String reason) {$/;"	m	class:OpenGLViewCantDetachException
OpenGLViewCantDetachException	opengl/OpenGLViewCantDetachException.java	/^public class OpenGLViewCantDetachException extends Exception {$/;"	c
OpenGLViewCantInitException	opengl/OpenGLViewCantInitException.java	/^    public OpenGLViewCantInitException(String reason) {$/;"	m	class:OpenGLViewCantInitException
OpenGLViewCantInitException	opengl/OpenGLViewCantInitException.java	/^public class OpenGLViewCantInitException extends Exception {$/;"	c
OpenGLViewNotAttachedException	opengl/OpenGLViewNotAttachedException.java	/^    public OpenGLViewNotAttachedException(String reason) {$/;"	m	class:OpenGLViewNotAttachedException
OpenGLViewNotAttachedException	opengl/OpenGLViewNotAttachedException.java	/^public class OpenGLViewNotAttachedException extends Exception {$/;"	c
OrbitCamera	actions/camera/OrbitCamera.java	/^    protected OrbitCamera(float t, float r, float dr, float z, float dz, float x, float dx) {$/;"	m	class:OrbitCamera
OrbitCamera	actions/camera/OrbitCamera.java	/^public class OrbitCamera extends CameraAction {$/;"	c
Orientation	transitions/TransitionScene.java	/^    public interface Orientation {$/;"	i	class:TransitionScene
OrientedTransitionScene	transitions/OrientedTransitionScene.java	/^    protected OrientedTransitionScene(float t, Scene s, int o) {$/;"	m	class:OrientedTransitionScene
OrientedTransitionScene	transitions/OrientedTransitionScene.java	/^public abstract class OrientedTransitionScene extends TransitionScene {$/;"	c
PTM_RATIO	tests/Box2DTest.java	/^        static final int PTM_RATIO = 32;$/;"	f	class:Box2DTest.Box2DTestLayer
PTM_RATIO	tests/JBox2DTest.java	/^        protected static final float PTM_RATIO = 32.0f;$/;"	f	class:JBox2DTest.JBox2DTestLayer
PageTurnTransition	transitions/PageTurnTransition.java	/^    public PageTurnTransition(float t, Scene s, boolean back) {$/;"	m	class:PageTurnTransition
PageTurnTransition	transitions/PageTurnTransition.java	/^public class PageTurnTransition extends TransitionScene {$/;"	c
Parallax1	tests/ParallaxTest.java	/^        public Parallax1() {$/;"	m	class:ParallaxTest.Parallax1
Parallax1	tests/ParallaxTest.java	/^    static class Parallax1 extends ParallaxDemo {$/;"	c	class:ParallaxTest
Parallax2	tests/ParallaxTest.java	/^        public Parallax2() {$/;"	m	class:ParallaxTest.Parallax2
Parallax2	tests/ParallaxTest.java	/^    static class Parallax2 extends ParallaxDemo {$/;"	c	class:ParallaxTest
ParallaxDemo	tests/ParallaxTest.java	/^        public ParallaxDemo() {$/;"	m	class:ParallaxTest.ParallaxDemo
ParallaxDemo	tests/ParallaxTest.java	/^    static abstract class ParallaxDemo extends Layer {$/;"	c	class:ParallaxTest
ParallaxNode	nodes/ParallaxNode.java	/^    protected ParallaxNode()$/;"	m	class:ParallaxNode
ParallaxNode	nodes/ParallaxNode.java	/^public class ParallaxNode extends CocosNode {$/;"	c
ParallaxTest	tests/ParallaxTest.java	/^public class ParallaxTest extends Activity {$/;"	c
Particle	particlesystem/ParticleSystem.java	/^    public static class Particle {$/;"	c	class:ParticleSystem
ParticleDemo	tests/ParticleTest.java	/^        public ParticleDemo() {$/;"	m	class:ParticleTest.ParticleDemo
ParticleDemo	tests/ParticleTest.java	/^    static abstract class ParticleDemo extends ColorLayer {$/;"	c	class:ParticleTest
ParticleExplosion	particlesystem/ParticleExplosion.java	/^    protected ParticleExplosion() {$/;"	m	class:ParticleExplosion
ParticleExplosion	particlesystem/ParticleExplosion.java	/^    protected ParticleExplosion(int p) {$/;"	m	class:ParticleExplosion
ParticleExplosion	particlesystem/ParticleExplosion.java	/^public class ParticleExplosion extends ParticleSystem {$/;"	c
ParticleFire	particlesystem/ParticleFire.java	/^    protected ParticleFire() {$/;"	m	class:ParticleFire
ParticleFire	particlesystem/ParticleFire.java	/^    protected ParticleFire(int p) {$/;"	m	class:ParticleFire
ParticleFire	particlesystem/ParticleFire.java	/^public class ParticleFire extends ParticleSystem {$/;"	c
ParticleFireworks	particlesystem/ParticleFireworks.java	/^    protected ParticleFireworks() {$/;"	m	class:ParticleFireworks
ParticleFireworks	particlesystem/ParticleFireworks.java	/^    protected ParticleFireworks(int p) {$/;"	m	class:ParticleFireworks
ParticleFireworks	particlesystem/ParticleFireworks.java	/^public class ParticleFireworks extends ParticleSystem {$/;"	c
ParticleFlower	particlesystem/ParticleFlower.java	/^    protected ParticleFlower() {$/;"	m	class:ParticleFlower
ParticleFlower	particlesystem/ParticleFlower.java	/^    protected ParticleFlower(int p) {$/;"	m	class:ParticleFlower
ParticleFlower	particlesystem/ParticleFlower.java	/^public class ParticleFlower extends ParticleSystem {$/;"	c
ParticleGalaxy	particlesystem/ParticleGalaxy.java	/^    protected ParticleGalaxy() {$/;"	m	class:ParticleGalaxy
ParticleGalaxy	particlesystem/ParticleGalaxy.java	/^    protected ParticleGalaxy(int p) {$/;"	m	class:ParticleGalaxy
ParticleGalaxy	particlesystem/ParticleGalaxy.java	/^public class ParticleGalaxy extends ParticleSystem {$/;"	c
ParticleMeteor	particlesystem/ParticleMeteor.java	/^    protected ParticleMeteor() {$/;"	m	class:ParticleMeteor
ParticleMeteor	particlesystem/ParticleMeteor.java	/^    protected ParticleMeteor(int p) {$/;"	m	class:ParticleMeteor
ParticleMeteor	particlesystem/ParticleMeteor.java	/^public class ParticleMeteor extends ParticleSystem {$/;"	c
ParticleRain	particlesystem/ParticleRain.java	/^    protected ParticleRain() {$/;"	m	class:ParticleRain
ParticleRain	particlesystem/ParticleRain.java	/^    protected ParticleRain(int p) {$/;"	m	class:ParticleRain
ParticleRain	particlesystem/ParticleRain.java	/^public class ParticleRain extends ParticleSystem {$/;"	c
ParticleSmoke	particlesystem/ParticleSmoke.java	/^    protected ParticleSmoke() {$/;"	m	class:ParticleSmoke
ParticleSmoke	particlesystem/ParticleSmoke.java	/^    protected ParticleSmoke(int p) {$/;"	m	class:ParticleSmoke
ParticleSmoke	particlesystem/ParticleSmoke.java	/^public class ParticleSmoke extends ParticleSystem {$/;"	c
ParticleSnow	particlesystem/ParticleSnow.java	/^    protected ParticleSnow() {$/;"	m	class:ParticleSnow
ParticleSnow	particlesystem/ParticleSnow.java	/^    protected ParticleSnow(int p) {$/;"	m	class:ParticleSnow
ParticleSnow	particlesystem/ParticleSnow.java	/^public class ParticleSnow extends ParticleSystem {$/;"	c
ParticleSpiral	particlesystem/ParticleSpiral.java	/^    protected ParticleSpiral() {$/;"	m	class:ParticleSpiral
ParticleSpiral	particlesystem/ParticleSpiral.java	/^    protected ParticleSpiral(int p) {$/;"	m	class:ParticleSpiral
ParticleSpiral	particlesystem/ParticleSpiral.java	/^public class ParticleSpiral extends ParticleSystem {$/;"	c
ParticleSun	particlesystem/ParticleSun.java	/^    protected ParticleSun() {$/;"	m	class:ParticleSun
ParticleSun	particlesystem/ParticleSun.java	/^    protected ParticleSun(int p) {$/;"	m	class:ParticleSun
ParticleSun	particlesystem/ParticleSun.java	/^public class ParticleSun extends ParticleSystem {$/;"	c
ParticleSystem	particlesystem/ParticleSystem.java	/^    protected ParticleSystem(int numberOfParticles) {$/;"	m	class:ParticleSystem
ParticleSystem	particlesystem/ParticleSystem.java	/^public abstract class ParticleSystem extends CocosNode {$/;"	c
ParticleTest	tests/ParticleTest.java	/^public class ParticleTest extends Activity {$/;"	c
Place	actions/instant/Place.java	/^    protected Place(float x, float y) {$/;"	m	class:Place
Place	actions/instant/Place.java	/^public class Place extends InstantAction {$/;"	c
PostSolve	box2d/Test.java	/^    public abstract void PostSolve(BBContact contact, final BBContactImpulse impulse);$/;"	m	class:Test
PreSolve	box2d/Test.java	/^    public abstract void PreSolve(BBContact contact, final BBManifold oldManifold);$/;"	m	class:Test
Primitives	opengl/Primitives.java	/^public class Primitives {$/;"	c
RGBA	transitions/FadeTransition.java	/^    CCColor4B RGBA;$/;"	f	class:FadeTransition
RGBtogreyscale	opengl/TGA.java	/^    public static void RGBtogreyscale(ImageTGA info) {$/;"	m	class:TGA
RIGHT	nodes/Label.java	/^        RIGHT$/;"	e	enum:Label.TextAlignment	file:
Repeat	actions/interval/Repeat.java	/^    protected Repeat(FiniteTimeAction action, int t) {$/;"	m	class:Repeat
Repeat	actions/interval/Repeat.java	/^public class Repeat extends IntervalAction {$/;"	c
RepeatForever	actions/base/RepeatForever.java	/^    protected RepeatForever(IntervalAction action) {$/;"	m	class:RepeatForever
RepeatForever	actions/base/RepeatForever.java	/^public class RepeatForever extends Action {$/;"	c
ReverseActionNotImplementedException	actions/interval/IntervalAction.java	/^        public ReverseActionNotImplementedException(String reason) {$/;"	m	class:IntervalAction.ReverseActionNotImplementedException
ReverseActionNotImplementedException	actions/interval/IntervalAction.java	/^    static class ReverseActionNotImplementedException extends RuntimeException {$/;"	c	class:IntervalAction
ReverseTime	actions/interval/ReverseTime.java	/^    protected ReverseTime(FiniteTimeAction action) {$/;"	m	class:ReverseTime
ReverseTime	actions/interval/ReverseTime.java	/^public class ReverseTime extends IntervalAction {$/;"	c
Ribbon	nodes/Ribbon.java	/^    public Ribbon(float w, String path, float l, CCColor4B color, float fade) {$/;"	m	class:Ribbon
Ribbon	nodes/Ribbon.java	/^public class Ribbon extends CocosNode {$/;"	c
RibbonSegment	nodes/Ribbon.java	/^        public RibbonSegment() {$/;"	m	class:Ribbon.RibbonSegment
RibbonSegment	nodes/Ribbon.java	/^    public static class RibbonSegment {$/;"	c	class:Ribbon
RotateBy	actions/interval/RotateBy.java	/^    protected RotateBy(float t, float a) {$/;"	m	class:RotateBy
RotateBy	actions/interval/RotateBy.java	/^public class RotateBy extends IntervalAction {$/;"	c
RotateTo	actions/interval/RotateTo.java	/^    protected RotateTo(float t, float a) {$/;"	m	class:RotateTo
RotateTo	actions/interval/RotateTo.java	/^public class RotateTo extends IntervalAction {$/;"	c
RotateWorldTest	tests/RotateWorldTest.java	/^public class RotateWorldTest extends Activity {$/;"	c
RotoZoomTransition	transitions/RotoZoomTransition.java	/^    public RotoZoomTransition(float t, Scene s) {$/;"	m	class:RotoZoomTransition
RotoZoomTransition	transitions/RotoZoomTransition.java	/^public class RotoZoomTransition extends TransitionScene {$/;"	c
SayGoodbye	box2d/DestructionListener.java	/^    public void SayGoodbye(BBFixture fixture) {}$/;"	m	class:DestructionListener
SayGoodbye	box2d/DestructionListener.java	/^    public void SayGoodbye(BBJoint joint) {}$/;"	m	class:DestructionListener
ScaleBy	actions/interval/ScaleBy.java	/^    protected ScaleBy(float t, float s) {$/;"	m	class:ScaleBy
ScaleBy	actions/interval/ScaleBy.java	/^    protected ScaleBy(float t, float sx, float sy) {$/;"	m	class:ScaleBy
ScaleBy	actions/interval/ScaleBy.java	/^public class ScaleBy extends ScaleTo {$/;"	c
ScaleTo	actions/interval/ScaleTo.java	/^    protected ScaleTo(float t, float s) {$/;"	m	class:ScaleTo
ScaleTo	actions/interval/ScaleTo.java	/^    protected ScaleTo(float t, float sx, float sy) {$/;"	m	class:ScaleTo
ScaleTo	actions/interval/ScaleTo.java	/^public class ScaleTo extends IntervalAction {$/;"	c
Scene	nodes/Scene.java	/^    protected Scene() {$/;"	m	class:Scene
Scene	nodes/Scene.java	/^public class Scene extends CocosNode {$/;"	c
SceneTest	tests/SceneTest.java	/^public class SceneTest extends Activity {$/;"	c
Scheduler	actions/Scheduler.java	/^    private Scheduler() {$/;"	m	class:Scheduler	file:
Scheduler	actions/Scheduler.java	/^public class Scheduler {$/;"	c
SchedulerTimerAlreadyScheduled	actions/Scheduler.java	/^        public SchedulerTimerAlreadyScheduled(String reason) {$/;"	m	class:Scheduler.SchedulerTimerAlreadyScheduled
SchedulerTimerAlreadyScheduled	actions/Scheduler.java	/^    static class SchedulerTimerAlreadyScheduled extends RuntimeException {$/;"	c	class:Scheduler
SchedulerTimerNotFound	actions/Scheduler.java	/^        public SchedulerTimerNotFound(String reason) {$/;"	m	class:Scheduler.SchedulerTimerNotFound
SchedulerTimerNotFound	actions/Scheduler.java	/^    static class SchedulerTimerNotFound extends RuntimeException {$/;"	c	class:Scheduler
Sequence	actions/interval/Sequence.java	/^    protected Sequence(FiniteTimeAction one, FiniteTimeAction two) {$/;"	m	class:Sequence
Sequence	actions/interval/Sequence.java	/^public class Sequence extends IntervalAction {$/;"	c
SetGravity	box2d/Test.java	/^    public abstract void SetGravity(float x,float y);$/;"	m	class:Test
SetTextLine	box2d/Test.java	/^    public void SetTextLine(int line) {$/;"	m	class:Test
Settings	box2d/Settings.java	/^    public Settings() {$/;"	m	class:Settings
Settings	box2d/Settings.java	/^public class Settings {$/;"	c
ShiftMouseDown	box2d/Test.java	/^    public abstract void ShiftMouseDown(final BBVec2 p);$/;"	m	class:Test
Show	actions/instant/Show.java	/^public class Show extends InstantAction {$/;"	c
ShrinkGrowTransition	transitions/ShrinkGrowTransition.java	/^    public ShrinkGrowTransition(float t, Scene s) {$/;"	m	class:ShrinkGrowTransition
ShrinkGrowTransition	transitions/ShrinkGrowTransition.java	/^public class ShrinkGrowTransition extends TransitionScene {$/;"	c
SlideInBTransition	transitions/SlideInBTransition.java	/^    public SlideInBTransition(float t, Scene s) {$/;"	m	class:SlideInBTransition
SlideInBTransition	transitions/SlideInBTransition.java	/^public class SlideInBTransition extends SlideInLTransition {$/;"	c
SlideInLTransition	transitions/SlideInLTransition.java	/^    public SlideInLTransition(float t, Scene s) {$/;"	m	class:SlideInLTransition
SlideInLTransition	transitions/SlideInLTransition.java	/^public class SlideInLTransition extends TransitionScene {$/;"	c
SlideInRTransition	transitions/SlideInRTransition.java	/^    public SlideInRTransition(float t, Scene s) {$/;"	m	class:SlideInRTransition
SlideInRTransition	transitions/SlideInRTransition.java	/^public class SlideInRTransition extends SlideInLTransition {$/;"	c
SlideInTTransition	transitions/SlideInTTransition.java	/^    public SlideInTTransition(float t, Scene s) {$/;"	m	class:SlideInTTransition
SlideInTTransition	transitions/SlideInTTransition.java	/^public class SlideInTTransition extends SlideInLTransition {$/;"	c
Spawn	actions/interval/Spawn.java	/^    protected Spawn(FiniteTimeAction one_, FiniteTimeAction two_) {$/;"	m	class:Spawn
Spawn	actions/interval/Spawn.java	/^public class Spawn extends IntervalAction {$/;"	c
SpawnBomb	box2d/Test.java	/^    public abstract void SpawnBomb(final BBVec2 worldPt);$/;"	m	class:Test
Speed	actions/base/Speed.java	/^    protected Speed(Action action, float r) {$/;"	m	class:Speed
Speed	actions/base/Speed.java	/^public class Speed extends Action {$/;"	c
SpeedTest	tests/EaseActionsTest.java	/^    static class SpeedTest extends SpriteDemo {$/;"	c	class:EaseActionsTest
SplitColsTransition	transitions/SplitColsTransition.java	/^    public SplitColsTransition(float t, Scene s) {$/;"	m	class:SplitColsTransition
SplitColsTransition	transitions/SplitColsTransition.java	/^public class SplitColsTransition extends TransitionScene {$/;"	c
SplitRowsTransition	transitions/SplitRowsTransition.java	/^    public SplitRowsTransition(float t, Scene s) {$/;"	m	class:SplitRowsTransition
SplitRowsTransition	transitions/SplitRowsTransition.java	/^public class SplitRowsTransition extends SplitColsTransition {$/;"	c
Sprite	nodes/Sprite.java	/^    protected Sprite(Texture2D tex) {$/;"	m	class:Sprite
Sprite	nodes/Sprite.java	/^public class Sprite extends TextureNode implements CocosNode.CocosNodeFrames {$/;"	c
SpriteAnimate	tests/SpritesTest.java	/^    static class SpriteAnimate extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteBezier	tests/SpritesTest.java	/^    static class SpriteBezier extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteBlink	tests/SpritesTest.java	/^    static class SpriteBlink extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteCallFunc	tests/SpritesTest.java	/^    static class SpriteCallFunc extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteDelayTime	tests/SpritesTest.java	/^    static class SpriteDelayTime extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteDemo	tests/EaseActionsTest.java	/^        public SpriteDemo() {$/;"	m	class:EaseActionsTest.SpriteDemo
SpriteDemo	tests/EaseActionsTest.java	/^    static abstract class SpriteDemo extends Layer {$/;"	c	class:EaseActionsTest
SpriteDemo	tests/SpritesTest.java	/^        public SpriteDemo() {$/;"	m	class:SpritesTest.SpriteDemo
SpriteDemo	tests/SpritesTest.java	/^    static abstract class SpriteDemo extends Layer {$/;"	c	class:SpritesTest
SpriteEase	tests/EaseActionsTest.java	/^    static class SpriteEase extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseBack	tests/EaseActionsTest.java	/^    static class SpriteEaseBack extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseBackInOut	tests/EaseActionsTest.java	/^    static class SpriteEaseBackInOut extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseBounce	tests/EaseActionsTest.java	/^    static class SpriteEaseBounce extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseBounceInOut	tests/EaseActionsTest.java	/^    static class SpriteEaseBounceInOut extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseElastic	tests/EaseActionsTest.java	/^    static class SpriteEaseElastic extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseElasticInOut	tests/EaseActionsTest.java	/^    static class SpriteEaseElasticInOut extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseExponential	tests/EaseActionsTest.java	/^    static class SpriteEaseExponential extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseExponentialInOut	tests/EaseActionsTest.java	/^    static class SpriteEaseExponentialInOut extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseInOut	tests/EaseActionsTest.java	/^    static class SpriteEaseInOut extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseSine	tests/EaseActionsTest.java	/^    static class SpriteEaseSine extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteEaseSineInOut	tests/EaseActionsTest.java	/^    static class SpriteEaseSineInOut extends SpriteDemo {$/;"	c	class:EaseActionsTest
SpriteFade	tests/SpritesTest.java	/^    static class SpriteFade extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteJump	tests/SpritesTest.java	/^    static class SpriteJump extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteLayer	tests/RotateWorldTest.java	/^        public SpriteLayer() {$/;"	m	class:RotateWorldTest.SpriteLayer
SpriteLayer	tests/RotateWorldTest.java	/^    static class SpriteLayer extends Layer {$/;"	c	class:RotateWorldTest
SpriteManual	tests/SpritesTest.java	/^    static class SpriteManual extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteMove	tests/SpritesTest.java	/^    static class SpriteMove extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteOrbit	tests/SpritesTest.java	/^    static class SpriteOrbit extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteRepeat	tests/SpritesTest.java	/^    static class SpriteRepeat extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteReverse	tests/SpritesTest.java	/^    static class SpriteReverse extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteReverseSequence	tests/SpritesTest.java	/^    static class SpriteReverseSequence extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteReverseSequence2	tests/SpritesTest.java	/^    static class SpriteReverseSequence2 extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteRotate	tests/SpritesTest.java	/^    static class SpriteRotate extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteScale	tests/SpritesTest.java	/^    static class SpriteScale extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteSequence	tests/SpritesTest.java	/^    static class SpriteSequence extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteSpawn	tests/SpritesTest.java	/^    static class SpriteSpawn extends SpriteDemo {$/;"	c	class:SpritesTest
SpriteTint	tests/SpritesTest.java	/^    static class SpriteTint extends SpriteDemo {$/;"	c	class:SpritesTest
SpritesTest	tests/SpritesTest.java	/^public class SpritesTest extends Activity {$/;"	c
Step	box2d/Test.java	/^    public abstract void Step(Settings settings);$/;"	m	class:Test
TAG	opengl/TextureAtlas.java	/^    private static final String TAG = TextureAtlas.class.getSimpleName();$/;"	f	class:TextureAtlas	file:
TGA	opengl/TGA.java	/^public class TGA {$/;"	c
TGAError	opengl/TGA.java	/^    public enum TGAError {$/;"	g	class:TGA
TGA_ERROR_COMPRESSED_FILE	opengl/TGA.java	/^        TGA_ERROR_COMPRESSED_FILE,$/;"	e	enum:TGA.TGAError	file:
TGA_ERROR_FILE_OPEN	opengl/TGA.java	/^        TGA_ERROR_FILE_OPEN,$/;"	e	enum:TGA.TGAError	file:
TGA_ERROR_INDEXED_COLOR	opengl/TGA.java	/^        TGA_ERROR_INDEXED_COLOR,$/;"	e	enum:TGA.TGAError	file:
TGA_ERROR_MEMORY	opengl/TGA.java	/^        TGA_ERROR_MEMORY,$/;"	e	enum:TGA.TGAError	file:
TGA_ERROR_READING_FILE	opengl/TGA.java	/^        TGA_ERROR_READING_FILE,$/;"	e	enum:TGA.TGAError	file:
TGA_OK	opengl/TGA.java	/^        TGA_OK,$/;"	e	enum:TGA.TGAError	file:
TRANSITION_DURATION	tests/TransitionsTest.java	/^    private static final float TRANSITION_DURATION = 1.2f;$/;"	f	class:TransitionsTest	file:
TYPE_FLIP	types/CCAffineTransform.java	/^    public static final int TYPE_FLIP = 64;$/;"	f	class:CCAffineTransform
TYPE_GENERAL_ROTATION	types/CCAffineTransform.java	/^    public static final int TYPE_GENERAL_ROTATION = 16;$/;"	f	class:CCAffineTransform
TYPE_GENERAL_SCALE	types/CCAffineTransform.java	/^    public static final int TYPE_GENERAL_SCALE = 4;$/;"	f	class:CCAffineTransform
TYPE_GENERAL_TRANSFORM	types/CCAffineTransform.java	/^    public static final int TYPE_GENERAL_TRANSFORM = 32;$/;"	f	class:CCAffineTransform
TYPE_IDENTITY	types/CCAffineTransform.java	/^    public static final int TYPE_IDENTITY = 0;$/;"	f	class:CCAffineTransform
TYPE_MASK_ROTATION	types/CCAffineTransform.java	/^    public static final int TYPE_MASK_ROTATION = TYPE_QUADRANT_ROTATION | TYPE_GENERAL_ROTATION;$/;"	f	class:CCAffineTransform
TYPE_MASK_SCALE	types/CCAffineTransform.java	/^    public static final int TYPE_MASK_SCALE = TYPE_UNIFORM_SCALE | TYPE_GENERAL_SCALE;$/;"	f	class:CCAffineTransform
TYPE_QUADRANT_ROTATION	types/CCAffineTransform.java	/^    public static final int TYPE_QUADRANT_ROTATION = 8;$/;"	f	class:CCAffineTransform
TYPE_TRANSLATION	types/CCAffineTransform.java	/^    public static final int TYPE_TRANSLATION = 1;$/;"	f	class:CCAffineTransform
TYPE_UNIFORM_SCALE	types/CCAffineTransform.java	/^    public static final int TYPE_UNIFORM_SCALE = 2;$/;"	f	class:CCAffineTransform
TYPE_UNKNOWN	types/CCAffineTransform.java	/^    static final int TYPE_UNKNOWN = -1;$/;"	f	class:CCAffineTransform
TagSprites	tests/AtlasTest.java	/^    enum TagSprites {$/;"	g	class:AtlasTest
Test	box2d/Test.java	/^    public Test() {$/;"	m	class:Test
Test	box2d/Test.java	/^public abstract class Test extends BBContactListener {$/;"	c
Test1	tests/CocosNodeTest.java	/^    static class Test1 extends TestDemo {$/;"	c	class:CocosNodeTest
Test1	tests/DrawPrimitivesTest.java	/^    public static class Test1 extends TestDemo {$/;"	c	class:DrawPrimitivesTest
Test1	tests/MotionStreakTest.java	/^    static class Test1 extends TestDemo {$/;"	c	class:MotionStreakTest
Test2	tests/CocosNodeTest.java	/^    static class Test2 extends TestDemo {$/;"	c	class:CocosNodeTest
Test3	tests/CocosNodeTest.java	/^    static class Test3 extends TestDemo {$/;"	c	class:CocosNodeTest
Test4	tests/CocosNodeTest.java	/^        public Test4() {$/;"	m	class:CocosNodeTest.Test4
Test4	tests/CocosNodeTest.java	/^    static class Test4 extends TestDemo {$/;"	c	class:CocosNodeTest
Test5	tests/CocosNodeTest.java	/^        public Test5() {$/;"	m	class:CocosNodeTest.Test5
Test5	tests/CocosNodeTest.java	/^    static class Test5 extends TestDemo {$/;"	c	class:CocosNodeTest
Test6	tests/CocosNodeTest.java	/^        public Test6() {$/;"	m	class:CocosNodeTest.Test6
Test6	tests/CocosNodeTest.java	/^    static class Test6 extends TestDemo {$/;"	c	class:CocosNodeTest
Test7	tests/CocosNodeTest.java	/^        public Test7() {$/;"	m	class:CocosNodeTest.Test7
Test7	tests/CocosNodeTest.java	/^    static class Test7 extends TestDemo {$/;"	c	class:CocosNodeTest
TestCreateFcn	box2d/TestCreateFcn.java	/^    Test TestCreateFcn();$/;"	m	interface:TestCreateFcn
TestCreateFcn	box2d/TestCreateFcn.java	/^public interface TestCreateFcn {$/;"	i
TestDemo	tests/CocosNodeTest.java	/^        public TestDemo() {$/;"	m	class:CocosNodeTest.TestDemo
TestDemo	tests/CocosNodeTest.java	/^    static abstract class TestDemo extends Layer {$/;"	c	class:CocosNodeTest
TestDemo	tests/DrawPrimitivesTest.java	/^        public TestDemo() {$/;"	m	class:DrawPrimitivesTest.TestDemo
TestDemo	tests/DrawPrimitivesTest.java	/^    public static class TestDemo extends Layer {$/;"	c	class:DrawPrimitivesTest
TestDemo	tests/MotionStreakTest.java	/^        public TestDemo() {$/;"	m	class:MotionStreakTest.TestDemo
TestDemo	tests/MotionStreakTest.java	/^    static abstract class TestDemo extends Layer {$/;"	c	class:MotionStreakTest
TestEntry	box2d/TestEntry.java	/^public class TestEntry {$/;"	c
TestLayer1	tests/TransitionsTest.java	/^        public TestLayer1() {$/;"	m	class:TransitionsTest.TestLayer1
TestLayer1	tests/TransitionsTest.java	/^    static class TestLayer1 extends Layer {$/;"	c	class:TransitionsTest
TestLayer2	tests/TransitionsTest.java	/^        public TestLayer2() {$/;"	m	class:TransitionsTest.TestLayer2
TestLayer2	tests/TransitionsTest.java	/^    static class TestLayer2 extends Layer {$/;"	c	class:TransitionsTest
TextAlignment	nodes/Label.java	/^    public enum TextAlignment {$/;"	g	class:Label
Texture2D	opengl/Texture2D.java	/^    public Texture2D(Bitmap image) {$/;"	m	class:Texture2D
Texture2D	opengl/Texture2D.java	/^    public Texture2D(Bitmap image, CCSize imageSize) {$/;"	m	class:Texture2D
Texture2D	opengl/Texture2D.java	/^    public Texture2D(String text, CCSize dimensions, Label.TextAlignment alignment, String fontname, float fontSize) {$/;"	m	class:Texture2D
Texture2D	opengl/Texture2D.java	/^    public Texture2D(String text, String fontname, float fontSize) {$/;"	m	class:Texture2D
Texture2D	opengl/Texture2D.java	/^public class Texture2D {$/;"	c
TextureAtlas	opengl/TextureAtlas.java	/^    public TextureAtlas(String file, int n) {$/;"	m	class:TextureAtlas
TextureAtlas	opengl/TextureAtlas.java	/^    public TextureAtlas(Texture2D tex, int n) {$/;"	m	class:TextureAtlas
TextureAtlas	opengl/TextureAtlas.java	/^public class TextureAtlas {$/;"	c
TextureManager	nodes/TextureManager.java	/^    private TextureManager() {$/;"	m	class:TextureManager	file:
TextureManager	nodes/TextureManager.java	/^public class TextureManager {$/;"	c
TextureNode	nodes/TextureNode.java	/^    public TextureNode() {$/;"	m	class:TextureNode
TextureNode	nodes/TextureNode.java	/^public class TextureNode extends CocosNode implements CocosNode.CocosNodeRGBA, CocosNode.CocosNodeSize {$/;"	c
TileMapAtlas	nodes/TileMapAtlas.java	/^    protected TileMapAtlas(String tile, String map, int w, int h) {$/;"	m	class:TileMapAtlas
TileMapAtlas	nodes/TileMapAtlas.java	/^public class TileMapAtlas extends AtlasNode {$/;"	c
TiledGrid3D	grid/TiledGrid3D.java	/^    public TiledGrid3D(CCGridSize gSize) {$/;"	m	class:TiledGrid3D
TiledGrid3D	grid/TiledGrid3D.java	/^public abstract class TiledGrid3D extends GridBase {$/;"	c
Timer	actions/Scheduler.java	/^        public Timer(Object t, String s) {$/;"	m	class:Scheduler.Timer
Timer	actions/Scheduler.java	/^        public Timer(Object t, String s, float seconds) {$/;"	m	class:Scheduler.Timer
Timer	actions/Scheduler.java	/^    public static class Timer {$/;"	c	class:Scheduler
TintBy	actions/interval/TintBy.java	/^    protected TintBy(float t, int r, int g, int b) {$/;"	m	class:TintBy
TintBy	actions/interval/TintBy.java	/^public class TintBy extends IntervalAction {$/;"	c
TintTo	actions/interval/TintTo.java	/^    protected TintTo(float t, int r, int g, int b) {$/;"	m	class:TintTo
TintTo	actions/interval/TintTo.java	/^public class TintTo extends IntervalAction {$/;"	c
ToggleVisibility	actions/instant/ToggleVisibility.java	/^public class ToggleVisibility extends InstantAction {$/;"	c
TouchDelegate	events/TouchDelegate.java	/^public interface TouchDelegate {$/;"	i
TouchDispatcher	events/TouchDispatcher.java	/^    protected TouchDispatcher()$/;"	m	class:TouchDispatcher
TouchDispatcher	events/TouchDispatcher.java	/^public class TouchDispatcher {$/;"	c
TouchHandler	events/TouchHandler.java	/^    public TouchHandler(TouchDelegate delegate, int priority) {$/;"	m	class:TouchHandler
TouchHandler	events/TouchHandler.java	/^public class TouchHandler implements TouchDelegate {$/;"	c
TransformUtils	utils/TransformUtils.java	/^public class TransformUtils {$/;"	c
TransitionScene	transitions/TransitionScene.java	/^    protected TransitionScene(float t, Scene s) {$/;"	m	class:TransitionScene
TransitionScene	transitions/TransitionScene.java	/^public class TransitionScene extends Scene {$/;"	c
TransitionWithInvalidSceneException	transitions/TransitionScene.java	/^        public TransitionWithInvalidSceneException(String reason) {$/;"	m	class:TransitionScene.TransitionWithInvalidSceneException
TransitionWithInvalidSceneException	transitions/TransitionScene.java	/^    static class TransitionWithInvalidSceneException extends RuntimeException {$/;"	c	class:TransitionScene
TransitionsTest	tests/TransitionsTest.java	/^public class TransitionsTest extends Activity {$/;"	c
TurnOffTilesTransition	transitions/TurnOffTilesTransition.java	/^    public TurnOffTilesTransition(float t, Scene s) {$/;"	m	class:TurnOffTilesTransition
TurnOffTilesTransition	transitions/TurnOffTilesTransition.java	/^public class TurnOffTilesTransition extends TransitionScene {$/;"	c
ZERO	types/CCAffineTransform.java	/^    static final double ZERO = 1E-10;$/;"	f	class:CCAffineTransform
ZoomFlipAngularLeftOverTransition	tests/TransitionsTest.java	/^        public ZoomFlipAngularLeftOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.ZoomFlipAngularLeftOverTransition
ZoomFlipAngularLeftOverTransition	tests/TransitionsTest.java	/^    static class ZoomFlipAngularLeftOverTransition extends ZoomFlipAngularTransition {$/;"	c	class:TransitionsTest
ZoomFlipAngularRightOverTransition	tests/TransitionsTest.java	/^        public ZoomFlipAngularRightOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.ZoomFlipAngularRightOverTransition
ZoomFlipAngularRightOverTransition	tests/TransitionsTest.java	/^    static class ZoomFlipAngularRightOverTransition extends ZoomFlipAngularTransition {$/;"	c	class:TransitionsTest
ZoomFlipAngularTransition	transitions/ZoomFlipAngularTransition.java	/^    public ZoomFlipAngularTransition(float t, Scene s, int orientation) {$/;"	m	class:ZoomFlipAngularTransition
ZoomFlipAngularTransition	transitions/ZoomFlipAngularTransition.java	/^public class ZoomFlipAngularTransition extends OrientedTransitionScene {$/;"	c
ZoomFlipXLeftOverTransition	tests/TransitionsTest.java	/^        public ZoomFlipXLeftOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.ZoomFlipXLeftOverTransition
ZoomFlipXLeftOverTransition	tests/TransitionsTest.java	/^    static class ZoomFlipXLeftOverTransition extends ZoomFlipXTransition {$/;"	c	class:TransitionsTest
ZoomFlipXRightOverTransition	tests/TransitionsTest.java	/^        public ZoomFlipXRightOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.ZoomFlipXRightOverTransition
ZoomFlipXRightOverTransition	tests/TransitionsTest.java	/^    static class ZoomFlipXRightOverTransition extends ZoomFlipXTransition {$/;"	c	class:TransitionsTest
ZoomFlipXTransition	transitions/ZoomFlipXTransition.java	/^    public ZoomFlipXTransition(float t, Scene s, int orientation) {$/;"	m	class:ZoomFlipXTransition
ZoomFlipXTransition	transitions/ZoomFlipXTransition.java	/^public class ZoomFlipXTransition extends OrientedTransitionScene {$/;"	c
ZoomFlipYDownOverTransition	tests/TransitionsTest.java	/^        public ZoomFlipYDownOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.ZoomFlipYDownOverTransition
ZoomFlipYDownOverTransition	tests/TransitionsTest.java	/^    static class ZoomFlipYDownOverTransition extends ZoomFlipYTransition {$/;"	c	class:TransitionsTest
ZoomFlipYTransition	transitions/ZoomFlipYTransition.java	/^    public ZoomFlipYTransition(float t, Scene s, int orientation) {$/;"	m	class:ZoomFlipYTransition
ZoomFlipYTransition	transitions/ZoomFlipYTransition.java	/^public class ZoomFlipYTransition extends OrientedTransitionScene {$/;"	c
ZoomFlipYUpOverTransition	tests/TransitionsTest.java	/^        public ZoomFlipYUpOverTransition(float t, Scene s) {$/;"	m	class:TransitionsTest.ZoomFlipYUpOverTransition
ZoomFlipYUpOverTransition	tests/TransitionsTest.java	/^    static class ZoomFlipYUpOverTransition extends ZoomFlipYTransition {$/;"	c	class:TransitionsTest
_alignment	nodes/Label.java	/^    private TextAlignment _alignment;$/;"	f	class:Label	file:
_dimensions	nodes/Label.java	/^    private CCSize _dimensions;$/;"	f	class:Label	file:
_fontName	menus/MenuItemFont.java	/^    static String _fontName = "DroidSans";$/;"	f	class:MenuItemFont
_fontName	nodes/Label.java	/^    private String _fontName;$/;"	f	class:Label	file:
_fontSize	menus/MenuItem.java	/^    static int _fontSize = kItemSize;$/;"	f	class:MenuItem
_fontSize	menus/MenuItemFont.java	/^    static int _fontSize = kItemSize;$/;"	f	class:MenuItemFont
_fontSize	nodes/Label.java	/^    private float _fontSize;$/;"	f	class:Label	file:
_format	opengl/Texture2D.java	/^    private Bitmap.Config _format;$/;"	f	class:Texture2D	file:
_gTexParams	opengl/Texture2D.java	/^    private static CCTexParams _gTexParams = new CCTexParams(GL_LINEAR, GL_LINEAR, GL_CLAMP_TO_EDGE, GL_CLAMP_TO_EDGE);$/;"	f	class:Texture2D	file:
_maxS	opengl/Texture2D.java	/^    private float _maxS, _maxT;$/;"	f	class:Texture2D	file:
_maxT	opengl/Texture2D.java	/^    private float _maxS, _maxT;$/;"	f	class:Texture2D	file:
_name	opengl/Texture2D.java	/^    private int _name = -1;$/;"	f	class:Texture2D	file:
_sharedDirector	nodes/Director.java	/^    private static Director _sharedDirector;$/;"	f	class:Director	file:
_sharedDispatcher	events/TouchDispatcher.java	/^    private static TouchDispatcher _sharedDispatcher;$/;"	f	class:TouchDispatcher	file:
_sharedManager	actions/ActionManager.java	/^    private static ActionManager _sharedManager = null;$/;"	f	class:ActionManager	file:
_sharedScheduler	actions/Scheduler.java	/^    private static Scheduler _sharedScheduler = null;$/;"	f	class:Scheduler	file:
_sharedTextureMgr	nodes/TextureManager.java	/^    private static TextureManager _sharedTextureMgr;$/;"	f	class:TextureManager	file:
_texParams	opengl/Texture2D.java	/^    private CCTexParams _texParams;$/;"	f	class:Texture2D	file:
_texParamsCopy	opengl/Texture2D.java	/^    private static CCTexParams _texParamsCopy;$/;"	f	class:Texture2D	file:
a	types/CCColor4B.java	/^    public int a;$/;"	f	class:CCColor4B
a	types/CCColorF.java	/^    public float a;$/;"	f	class:CCColorF
absolutePosition	nodes/CocosNode.java	/^    private CCPoint absolutePosition() {$/;"	m	class:CocosNode	file:
absolutePosition	nodes/ParallaxNode.java	/^    private CCPoint absolutePosition()$/;"	m	class:ParallaxNode	file:
accelerometer	layers/Layer.java	/^    protected final Sensor accelerometer;$/;"	f	class:Layer
accelerometerUpdateRate	layers/Layer.java	/^    protected int accelerometerUpdateRate = SensorManager.SENSOR_DELAY_GAME;$/;"	f	class:Layer
accumDt	nodes/Director.java	/^    private float accumDt;$/;"	f	class:Director	file:
action	actions/base/Action.java	/^    public static Action action() {$/;"	m	class:Action
action	actions/base/FiniteTimeAction.java	/^    public static FiniteTimeAction action(float d) {$/;"	m	class:FiniteTimeAction
action	actions/base/RepeatForever.java	/^    public static RepeatForever action(IntervalAction action) {$/;"	m	class:RepeatForever
action	actions/base/Speed.java	/^    public static Speed action(Action action, float r) {$/;"	m	class:Speed
action	actions/camera/OrbitCamera.java	/^    public static OrbitCamera action(float t, float r, float dr, float z, float dz, float x, float dx) {$/;"	m	class:OrbitCamera
action	actions/ease/EaseBackIn.java	/^    public static EaseBackIn action(IntervalAction action) {$/;"	m	class:EaseBackIn
action	actions/ease/EaseBackInOut.java	/^    public static EaseBackInOut action(IntervalAction action) {$/;"	m	class:EaseBackInOut
action	actions/ease/EaseBackOut.java	/^    public static EaseBackOut action(IntervalAction action) {$/;"	m	class:EaseBackOut
action	actions/ease/EaseBounceIn.java	/^    public static EaseBounceIn action(IntervalAction action) {$/;"	m	class:EaseBounceIn
action	actions/ease/EaseBounceInOut.java	/^    public static EaseBounceInOut action(IntervalAction action) {$/;"	m	class:EaseBounceInOut
action	actions/ease/EaseBounceOut.java	/^    public static EaseBounceOut action(IntervalAction action) {$/;"	m	class:EaseBounceOut
action	actions/ease/EaseElasticIn.java	/^    public static EaseElasticIn action(IntervalAction action) {$/;"	m	class:EaseElasticIn
action	actions/ease/EaseElasticIn.java	/^    public static EaseElasticIn action(IntervalAction action, float period) {$/;"	m	class:EaseElasticIn
action	actions/ease/EaseElasticInOut.java	/^    public static EaseElasticInOut action(IntervalAction action) {$/;"	m	class:EaseElasticInOut
action	actions/ease/EaseElasticInOut.java	/^    public static EaseElasticInOut action(IntervalAction action, float period) {$/;"	m	class:EaseElasticInOut
action	actions/ease/EaseElasticOut.java	/^    public static EaseElasticOut action(IntervalAction action) {$/;"	m	class:EaseElasticOut
action	actions/ease/EaseElasticOut.java	/^    public static EaseElasticOut action(IntervalAction action, float period) {$/;"	m	class:EaseElasticOut
action	actions/ease/EaseExponentialIn.java	/^    public static EaseExponentialIn action(IntervalAction action) {$/;"	m	class:EaseExponentialIn
action	actions/ease/EaseExponentialInOut.java	/^    public static EaseExponentialInOut action(IntervalAction action) {$/;"	m	class:EaseExponentialInOut
action	actions/ease/EaseExponentialOut.java	/^    public static EaseExponentialOut action(IntervalAction action) {$/;"	m	class:EaseExponentialOut
action	actions/ease/EaseIn.java	/^    public static EaseIn action(IntervalAction action, float rate) {$/;"	m	class:EaseIn
action	actions/ease/EaseInOut.java	/^    public static EaseInOut action(IntervalAction action, float rate) {$/;"	m	class:EaseInOut
action	actions/ease/EaseOut.java	/^    public static EaseOut action(IntervalAction action, float rate) {$/;"	m	class:EaseOut
action	actions/ease/EaseSineIn.java	/^    public static EaseSineIn action(IntervalAction action) {$/;"	m	class:EaseSineIn
action	actions/ease/EaseSineInOut.java	/^    public static EaseSineInOut action(IntervalAction action) {$/;"	m	class:EaseSineInOut
action	actions/ease/EaseSineOut.java	/^    public static EaseSineOut action(IntervalAction action) {$/;"	m	class:EaseSineOut
action	actions/instant/CallFunc.java	/^    public static CallFunc action(Object target, String selector) {$/;"	m	class:CallFunc
action	actions/instant/CallFuncN.java	/^    public static CallFuncN action(Object t, String s) {$/;"	m	class:CallFuncN
action	actions/instant/CallFuncND.java	/^    public static CallFuncND action(Object t, String s, Object d) {$/;"	m	class:CallFuncND
action	actions/instant/Hide.java	/^    public static Hide action() {$/;"	m	class:Hide
action	actions/instant/Place.java	/^    public static Place action(float x, float y) {$/;"	m	class:Place
action	actions/instant/Show.java	/^    public static Show action() {$/;"	m	class:Show
action	actions/instant/ToggleVisibility.java	/^    public static ToggleVisibility action() {$/;"	m	class:ToggleVisibility
action	actions/interval/Animate.java	/^    public static Animate action(CocosNode.CocosAnimation anim) {$/;"	m	class:Animate
action	actions/interval/Animate.java	/^    public static Animate action(CocosNode.CocosAnimation anim, boolean restore) {$/;"	m	class:Animate
action	actions/interval/BezierBy.java	/^    public static BezierBy action(float t, CCBezierConfig c) {$/;"	m	class:BezierBy
action	actions/interval/Blink.java	/^    public static Blink action(float t, int b) {$/;"	m	class:Blink
action	actions/interval/DelayTime.java	/^    public static DelayTime action(float t) {$/;"	m	class:DelayTime
action	actions/interval/FadeIn.java	/^    public static FadeIn action(float t) {$/;"	m	class:FadeIn
action	actions/interval/FadeOut.java	/^    public static FadeOut action(float t) {$/;"	m	class:FadeOut
action	actions/interval/FadeTo.java	/^    public static FadeTo action(float t, byte a) {$/;"	m	class:FadeTo
action	actions/interval/JumpBy.java	/^    public static JumpBy action(float time, float x, float y, float height, int jumps) {$/;"	m	class:JumpBy
action	actions/interval/JumpTo.java	/^    public static JumpTo action(float time, float x, float y, float height, int jumps) {$/;"	m	class:JumpTo
action	actions/interval/MoveBy.java	/^    public static MoveBy action(float t, float x, float y) {$/;"	m	class:MoveBy
action	actions/interval/MoveTo.java	/^    public static MoveTo action(float t, float x, float y) {$/;"	m	class:MoveTo
action	actions/interval/Repeat.java	/^    public static Repeat action(FiniteTimeAction action, int t) {$/;"	m	class:Repeat
action	actions/interval/ReverseTime.java	/^    public static ReverseTime action(FiniteTimeAction action) {$/;"	m	class:ReverseTime
action	actions/interval/RotateBy.java	/^    public static RotateBy action(float t, float a) {$/;"	m	class:RotateBy
action	actions/interval/RotateTo.java	/^    public static RotateTo action(float t, float a) {$/;"	m	class:RotateTo
action	actions/interval/ScaleBy.java	/^    public static ScaleBy action(float t, float s) {$/;"	m	class:ScaleBy
action	actions/interval/ScaleBy.java	/^    public static ScaleBy action(float t, float sx, float sy) {$/;"	m	class:ScaleBy
action	actions/interval/ScaleTo.java	/^    public static ScaleTo action(float t, float s) {$/;"	m	class:ScaleTo
action	actions/interval/ScaleTo.java	/^    public static ScaleTo action(float t, float sx, float sy) {$/;"	m	class:ScaleTo
action	actions/interval/TintBy.java	/^    public static TintBy action(float t, int r, int g, int b) {$/;"	m	class:TintBy
action	actions/interval/TintTo.java	/^    public static TintTo action(float t, int r, int g, int b) {$/;"	m	class:TintTo
action	transitions/MoveInLTransition.java	/^    protected IntervalAction action() {$/;"	m	class:MoveInLTransition
action	transitions/PageTurnTransition.java	/^    public IntervalAction action(float x, float y)$/;"	m	class:PageTurnTransition
action	transitions/SlideInBTransition.java	/^    protected IntervalAction action() {$/;"	m	class:SlideInBTransition
action	transitions/SlideInLTransition.java	/^    protected IntervalAction action() {$/;"	m	class:SlideInLTransition
action	transitions/SlideInRTransition.java	/^    protected IntervalAction action() {$/;"	m	class:SlideInRTransition
action	transitions/SlideInTTransition.java	/^    protected IntervalAction action() {$/;"	m	class:SlideInTTransition
actionAlloc	actions/ActionManager.java	/^    private void actionAlloc(HashElement element) {$/;"	m	class:ActionManager	file:
actions	actions/ActionManager.java	/^        CopyOnWriteArrayList<Action> actions;$/;"	f	class:ActionManager.HashElement
actions	actions/interval/Sequence.java	/^    private ArrayList<FiniteTimeAction> actions;$/;"	f	class:Sequence	file:
actions	actions/interval/Sequence.java	/^    public static IntervalAction actions(FiniteTimeAction action1, FiniteTimeAction... actions) {$/;"	m	class:Sequence
actions	actions/interval/Spawn.java	/^    public static IntervalAction actions(FiniteTimeAction action1, FiniteTimeAction... params) {$/;"	m	class:Spawn
activate	menus/MenuItem.java	/^    public void activate() {$/;"	m	class:MenuItem
activate	menus/MenuItemLabel.java	/^    public void activate() {$/;"	m	class:MenuItemLabel
activate	menus/MenuItemToggle.java	/^    public void activate() {$/;"	m	class:MenuItemToggle
activateTimers	nodes/CocosNode.java	/^    private void activateTimers() {$/;"	m	class:CocosNode	file:
active	grid/GridBase.java	/^    protected boolean active;$/;"	f	class:GridBase
active	particlesystem/ParticleSystem.java	/^    protected boolean active;$/;"	f	class:ParticleSystem
activityIntent	Cocos2D.java	/^    protected Intent activityIntent(String pkg, String componentName) {$/;"	m	class:Cocos2D
addAction	actions/ActionManager.java	/^    public void addAction(Action action, CocosNode target, boolean paused) {$/;"	m	class:ActionManager
addAndRemove	tests/CocosNodeTest.java	/^        public void addAndRemove(float dt) {$/;"	m	class:CocosNodeTest.Test5
addAndRemove	tests/CocosNodeTest.java	/^        public void addAndRemove(float dt) {$/;"	m	class:CocosNodeTest.Test6
addAnimation	nodes/AtlasSprite.java	/^    public void addAnimation(CocosAnimation anim) {$/;"	m	class:AtlasSprite
addAnimation	nodes/CocosNode.java	/^        public void addAnimation(CocosAnimation animation);$/;"	m	interface:CocosNode.CocosNodeFrames
addAnimation	nodes/Sprite.java	/^    public void addAnimation(CocosAnimation anim) {$/;"	m	class:Sprite
addChild	nodes/AtlasSprite.java	/^    public CocosNode addChild(CocosNode child, int z, int aTag) {$/;"	m	class:AtlasSprite
addChild	nodes/AtlasSpriteManager.java	/^    public CocosNode addChild(CocosNode node, int z, int aTag) {$/;"	m	class:AtlasSpriteManager
addChild	nodes/CocosNode.java	/^    public CocosNode addChild(CocosNode child) {$/;"	m	class:CocosNode
addChild	nodes/CocosNode.java	/^    public CocosNode addChild(CocosNode child, int z) {$/;"	m	class:CocosNode
addChild	nodes/CocosNode.java	/^    public CocosNode addChild(CocosNode child, int z, int tag) {$/;"	m	class:CocosNode
addChild	nodes/ParallaxNode.java	/^    public CocosNode addChild(CocosNode child, int z, float ratioX, float ratioY, float offsetX, float offsetY)$/;"	m	class:ParallaxNode
addChild	nodes/ParallaxNode.java	/^    public CocosNode addChild(CocosNode child, int z, int tag)$/;"	m	class:ParallaxNode
addDelegate	events/TouchDispatcher.java	/^    public void addDelegate(TouchDelegate delegate, int prio) {$/;"	m	class:TouchDispatcher
addFrame	nodes/Animation.java	/^    public void addFrame(Bitmap bitmap) {$/;"	m	class:Animation
addFrame	nodes/Animation.java	/^    public void addFrame(String filename) {$/;"	m	class:Animation
addFrame	nodes/Animation.java	/^    public void addFrame(Texture2D tex) {$/;"	m	class:Animation
addFrame	nodes/AtlasAnimation.java	/^    public void addFrame(CCRect rect) {$/;"	m	class:AtlasAnimation
addHandler	events/TouchDispatcher.java	/^    private void addHandler(TouchHandler handler)$/;"	m	class:TouchDispatcher	file:
addImage	nodes/TextureManager.java	/^    public Texture2D addImage(Bitmap image) {$/;"	m	class:TextureManager
addImage	nodes/TextureManager.java	/^    public Texture2D addImage(String path) {$/;"	m	class:TextureManager
addItem	Cocos2D.java	/^    protected void addItem(List<Map<String,?>> data, String name, Intent intent) {$/;"	m	class:Cocos2D
addNewSprite	tests/AtlasSpriteTest.java	/^        private void addNewSprite(CCPoint pos) {$/;"	m	class:AtlasSpriteTest.Atlas1	file:
addNewSprite	tests/Box2DTest.java	/^        private void addNewSprite(float x, float y)$/;"	m	class:Box2DTest.Box2DTestLayer	file:
addNewSpriteWithCoords	tests/JBox2DTest.java	/^		private void addNewSpriteWithCoords(CCPoint pos) {$/;"	m	class:JBox2DTest.JBox2DTestLayer	file:
addParticle	particlesystem/ParticleSystem.java	/^    public boolean addParticle() {$/;"	m	class:ParticleSystem
addPoint	nodes/Ribbon.java	/^    public void addPoint(CCPoint location, float w) {$/;"	m	class:Ribbon
afterDraw	grid/GridBase.java	/^    public void afterDraw(GL10 gl, Camera camera) {$/;"	m	class:GridBase
alignItemsHorizontally	menus/Menu.java	/^    public void alignItemsHorizontally() {$/;"	m	class:Menu
alignItemsHorizontally	menus/Menu.java	/^    public void alignItemsHorizontally(float padding) {$/;"	m	class:Menu
alignItemsInColumns	menus/Menu.java	/^    public void alignItemsInColumns(int columns[]) {$/;"	m	class:Menu
alignItemsInRows	menus/Menu.java	/^    public void alignItemsInRows(int rows[]) {$/;"	m	class:Menu
alignItemsVertically	menus/Menu.java	/^    public void alignItemsVertically() {$/;"	m	class:Menu
alignItemsVertically	menus/Menu.java	/^    public void alignItemsVertically(float padding) {$/;"	m	class:Menu
alignedH	tests/MenuTest.java	/^        boolean alignedH;$/;"	f	class:MenuTest.Layer2
allocate	utils/FloatBufferProvider.java	/^	public ByteBuffer allocate(int size)$/;"	m	class:FloatBufferProvider
allocateDirect	utils/FloatBufferProvider.java	/^	public static ByteBuffer allocateDirect(int size)$/;"	m	class:FloatBufferProvider
altertime	tests/EaseActionsTest.java	/^        public void altertime(float dt)$/;"	m	class:EaseActionsTest.SpeedTest
anchorPoint_	nodes/CocosNode.java	/^    private PointF anchorPoint_;$/;"	f	class:CocosNode	file:
angle	actions/interval/RotateBy.java	/^    private float angle;$/;"	f	class:RotateBy	file:
angle	actions/interval/RotateTo.java	/^    private float angle;$/;"	f	class:RotateTo	file:
angle	particlesystem/ParticleSystem.java	/^    protected float angle;$/;"	f	class:ParticleSystem
angleVar	particlesystem/ParticleSystem.java	/^    protected float angleVar;$/;"	f	class:ParticleSystem
angleX	actions/camera/OrbitCamera.java	/^    private float angleX;$/;"	f	class:OrbitCamera	file:
angleZ	actions/camera/OrbitCamera.java	/^    private float angleZ;$/;"	f	class:OrbitCamera	file:
animation	actions/interval/Animate.java	/^    private CocosNode.CocosAnimation animation;$/;"	f	class:Animate	file:
animationByName	nodes/AtlasSprite.java	/^    public CocosAnimation animationByName(String animationName) {$/;"	m	class:AtlasSprite
animationByName	nodes/CocosNode.java	/^        public CocosAnimation animationByName(String animationName);$/;"	m	interface:CocosNode.CocosNodeFrames
animationByName	nodes/Sprite.java	/^    public CocosAnimation animationByName(String animationName) {$/;"	m	class:Sprite
animationInterval	nodes/Director.java	/^    private double animationInterval;$/;"	f	class:Director	file:
animationTimer	nodes/Director.java	/^    private Timer animationTimer;$/;"	f	class:Director	file:
animations	nodes/AtlasSprite.java	/^    HashMap<String, AtlasAnimation> animations;$/;"	f	class:AtlasSprite
animations	nodes/Sprite.java	/^    private HashMap<String, CocosAnimation> animations;$/;"	f	class:Sprite	file:
append	types/CCAffineTransform.java	/^    public final HashCode append(Object value) {$/;"	m	class:HashCode
append	types/CCAffineTransform.java	/^    public final HashCode append(boolean value) {$/;"	m	class:HashCode
append	types/CCAffineTransform.java	/^    public final HashCode append(double value) {$/;"	m	class:HashCode
append	types/CCAffineTransform.java	/^    public final HashCode append(float value) {$/;"	m	class:HashCode
append	types/CCAffineTransform.java	/^    public final HashCode append(int value) {$/;"	m	class:HashCode
append	types/CCAffineTransform.java	/^    public final HashCode append(long value) {$/;"	m	class:HashCode
appendWithPrefix	opengl/GLDebugWrapper.java	/^        private static StringBuilder appendWithPrefix(StringBuilder sb, String s) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
applicationDidBecomeActive	tests/SceneTest.java	/^    public void applicationDidBecomeActive(Context context) {$/;"	m	class:SceneTest
applicationDidFinishLaunching	tests/SceneTest.java	/^    public void applicationDidFinishLaunching(Context context, View view) {$/;"	m	class:SceneTest
applicationDidReceiveMemoryWarning	tests/SceneTest.java	/^    public void applicationDidReceiveMemoryWarning(Context context) {$/;"	m	class:SceneTest
applicationSignificantTimeChange	tests/SceneTest.java	/^    public void applicationSignificantTimeChange(Context context) {$/;"	m	class:SceneTest
applicationWillResignActive	tests/SceneTest.java	/^    public void applicationWillResignActive(Context context) {$/;"	m	class:SceneTest
applyAffineTransform	types/CCPoint.java	/^    public static CCPoint applyAffineTransform(CCPoint aPoint, CCAffineTransform aTransform) {$/;"	m	class:CCPoint
applyLandscape	grid/GridBase.java	/^    public void applyLandscape(GL10 gl) {$/;"	m	class:GridBase
applyLandscape	nodes/Director.java	/^    private void applyLandscape(GL10 gl) {$/;"	m	class:Director	file:
applyTexParameters	opengl/Texture2D.java	/^    public void applyTexParameters(GL10 gl) {$/;"	m	class:Texture2D
arraycopyColor	opengl/TextureAtlas.java	/^    private void arraycopyColor(ByteBuffer src, int srcPos, ByteBuffer dst, int dstPos, int length) {$/;"	m	class:TextureAtlas	file:
arraycopyTexture	opengl/TextureAtlas.java	/^    private void arraycopyTexture(FloatBuffer src, int srcPos, FloatBuffer dst, int dstPos, int length) {$/;"	m	class:TextureAtlas	file:
arraycopyVertex	opengl/TextureAtlas.java	/^    private void arraycopyVertex(FloatBuffer src, int srcPos, FloatBuffer dst, int dstPos, int length) {$/;"	m	class:TextureAtlas	file:
atlas	nodes/AtlasSpriteManager.java	/^    public TextureAtlas atlas() {$/;"	m	class:AtlasSpriteManager
atlas	tests/AtlasTest.java	/^        TextureAtlas atlas;$/;"	f	class:AtlasTest.AtlasDemo
atlas	tests/ParallaxTest.java	/^        TextureAtlas atlas;$/;"	f	class:ParallaxTest.ParallaxDemo
atlas	tests/ParticleTest.java	/^        TextureAtlas atlas;$/;"	f	class:ParticleTest.ParticleDemo
atlasIndex	nodes/AtlasSprite.java	/^    public int atlasIndex() {$/;"	m	class:AtlasSprite
atlasIndex_	nodes/AtlasSprite.java	/^    int atlasIndex_;$/;"	f	class:AtlasSprite
attachInView	nodes/Director.java	/^    public boolean attachInView(View view) {$/;"	m	class:Director
attachInView	nodes/Director.java	/^    public boolean attachInView(View view, CCRect rect) {$/;"	m	class:Director
attachInWindow	nodes/Director.java	/^    public boolean attachInWindow(View window) {$/;"	m	class:Director
b	types/CCColor3B.java	/^    public int b;$/;"	f	class:CCColor3B
b	types/CCColor4B.java	/^    public int b;$/;"	f	class:CCColor4B
b	types/CCColorF.java	/^    public float b;$/;"	f	class:CCColorF
b	types/CCRGBB.java	/^    public byte b;$/;"	f	class:CCRGBB
backAction	tests/AtlasSpriteTest.java	/^    static Layer backAction() {$/;"	m	class:AtlasSpriteTest
backAction	tests/AtlasTest.java	/^    static Layer backAction() {$/;"	m	class:AtlasTest
backAction	tests/CocosNodeTest.java	/^    static Layer backAction() {$/;"	m	class:CocosNodeTest
backAction	tests/DrawPrimitivesTest.java	/^    public static Layer backAction() {$/;"	m	class:DrawPrimitivesTest
backAction	tests/EaseActionsTest.java	/^    static Layer backAction() {$/;"	m	class:EaseActionsTest
backAction	tests/MotionStreakTest.java	/^    static Layer backAction() {$/;"	m	class:MotionStreakTest
backAction	tests/ParallaxTest.java	/^    static Layer backAction() {$/;"	m	class:ParallaxTest
backAction	tests/ParticleTest.java	/^    static Layer backAction() {$/;"	m	class:ParticleTest
backAction	tests/SpritesTest.java	/^    static Layer backAction() {$/;"	m	class:SpritesTest
backCallback	tests/AtlasSpriteTest.java	/^        public void backCallback() {$/;"	m	class:AtlasSpriteTest.AtlasSpriteDemo
backCallback	tests/AtlasTest.java	/^        public void backCallback() {$/;"	m	class:AtlasTest.AtlasDemo
backCallback	tests/CocosNodeTest.java	/^        public void backCallback() {$/;"	m	class:CocosNodeTest.TestDemo
backCallback	tests/DrawPrimitivesTest.java	/^        public void backCallback() {$/;"	m	class:DrawPrimitivesTest.TestDemo
backCallback	tests/EaseActionsTest.java	/^        public void backCallback() {$/;"	m	class:EaseActionsTest.SpriteDemo
backCallback	tests/MotionStreakTest.java	/^        public void backCallback() {$/;"	m	class:MotionStreakTest.TestDemo
backCallback	tests/ParallaxTest.java	/^        public void backCallback() {$/;"	m	class:ParallaxTest.ParallaxDemo
backCallback	tests/ParticleTest.java	/^        public void backCallback() {$/;"	m	class:ParticleTest.ParticleDemo
backCallback	tests/SpritesTest.java	/^        public void backCallback() {$/;"	m	class:SpritesTest.SpriteDemo
backCallback	tests/TransitionsTest.java	/^        public void backCallback() {$/;"	m	class:TransitionsTest.TestLayer1
backCallback	tests/TransitionsTest.java	/^        public void backCallback() {$/;"	m	class:TransitionsTest.TestLayer2
backTransition	tests/TransitionsTest.java	/^    static TransitionScene backTransition(float d, Scene s) {$/;"	m	class:TransitionsTest
back_	transitions/PageTurnTransition.java	/^    private boolean back_;$/;"	f	class:PageTurnTransition	file:
background	tests/ParticleTest.java	/^        Sprite background;$/;"	f	class:ParticleTest.ParticleDemo
beforeDraw	grid/GridBase.java	/^    public void beforeDraw(GL10 gl) {$/;"	m	class:GridBase
begin	nodes/Ribbon.java	/^        int begin;$/;"	f	class:Ribbon.RibbonSegment
beginContact	box2d/Test.java	/^    public abstract void beginContact(BBContact contact);$/;"	m	class:Test
bezierat	actions/interval/BezierBy.java	/^    private static float bezierat(float a, float b, float c, float d, float t) {$/;"	m	class:BezierBy	file:
bl_x	types/CCQuad2.java	/^    public float bl_x, bl_y;$/;"	f	class:CCQuad2
bl_x	types/CCQuad3.java	/^    public float bl_x, bl_y, bl_z;$/;"	f	class:CCQuad3
bl_y	types/CCQuad2.java	/^    public float bl_x, bl_y;$/;"	f	class:CCQuad2
bl_y	types/CCQuad3.java	/^    public float bl_x, bl_y, bl_z;$/;"	f	class:CCQuad3
bl_z	types/CCQuad3.java	/^    public float bl_x, bl_y, bl_z;$/;"	f	class:CCQuad3
blendAdditive	particlesystem/ParticleSystem.java	/^    protected boolean blendAdditive;$/;"	f	class:ParticleSystem
blendFunc	nodes/MotionStreak.java	/^    public CCBlendFunc blendFunc() {$/;"	m	class:MotionStreak
blendFunc	nodes/Ribbon.java	/^    public CCBlendFunc blendFunc() {$/;"	m	class:Ribbon
blendFunc_	nodes/AtlasNode.java	/^    CCBlendFunc blendFunc_;$/;"	f	class:AtlasNode
blendFunc_	nodes/AtlasSpriteManager.java	/^    private CCBlendFunc blendFunc_;$/;"	f	class:AtlasSpriteManager	file:
blendFunc_	nodes/Ribbon.java	/^    CCBlendFunc blendFunc_;$/;"	f	class:Ribbon
blendFunc_	nodes/TextureNode.java	/^    private CCBlendFunc blendFunc_;$/;"	f	class:TextureNode	file:
blit	grid/Grid3D.java	/^    public void blit(GL10 gl) {$/;"	m	class:Grid3D
blit	grid/GridBase.java	/^    public abstract void blit(GL10 gl);$/;"	m	class:GridBase
blit	grid/TiledGrid3D.java	/^    public void blit(GL10 gl) {$/;"	m	class:TiledGrid3D
bounceTime	actions/ease/EaseBounce.java	/^    protected float bounceTime(float t) {$/;"	m	class:EaseBounce
br_x	types/CCQuad2.java	/^    public float br_x, br_y;$/;"	f	class:CCQuad2
br_x	types/CCQuad3.java	/^    public float br_x, br_y, br_z;$/;"	f	class:CCQuad3
br_y	types/CCQuad2.java	/^    public float br_x, br_y;$/;"	f	class:CCQuad2
br_y	types/CCQuad3.java	/^    public float br_x, br_y, br_z;$/;"	f	class:CCQuad3
br_z	types/CCQuad3.java	/^    public float br_x, br_y, br_z;$/;"	f	class:CCQuad3
browserIntent	Cocos2D.java	/^    protected Intent browserIntent(String path) {$/;"	m	class:Cocos2D
bxWorld	tests/JBox2DTest.java	/^        protected final World bxWorld;$/;"	f	class:JBox2DTest.JBox2DTestLayer
calculateDeltaTime	nodes/Director.java	/^    private void calculateDeltaTime() {$/;"	m	class:Director	file:
calculateItemsToRender	nodes/TileMapAtlas.java	/^    private void calculateItemsToRender() {$/;"	m	class:TileMapAtlas	file:
calculateMaxItems	nodes/AtlasNode.java	/^    private void calculateMaxItems() {$/;"	m	class:AtlasNode	file:
calculateTexCoordsSteps	nodes/AtlasNode.java	/^    private void calculateTexCoordsSteps() {$/;"	m	class:AtlasNode	file:
calculateTextSize	opengl/Texture2D.java	/^    private static CCSize calculateTextSize(String text, String fontname, float fontSize) {$/;"	m	class:Texture2D	file:
calculateVertexPoints	grid/Grid3D.java	/^    private void calculateVertexPoints() {$/;"	m	class:Grid3D	file:
calculateVertexPoints	grid/TiledGrid3D.java	/^    public void calculateVertexPoints() {$/;"	m	class:TiledGrid3D
callback	tests/SpritesTest.java	/^        public void callback() {$/;"	m	class:SpritesTest.SpriteCallFunc
camera_	nodes/CocosNode.java	/^    private Camera camera_;$/;"	f	class:CocosNode	file:
capacity	opengl/TextureAtlas.java	/^    public int capacity() {$/;"	m	class:TextureAtlas
capacity_	opengl/TextureAtlas.java	/^    private int capacity_;$/;"	f	class:TextureAtlas	file:
ccAccelerometerChanged	layers/Layer.java	/^    public void ccAccelerometerChanged(float accelX, float accelY, float accelZ) {$/;"	m	class:Layer
ccAccelerometerChanged	tests/Box2DTest.java	/^	    public void ccAccelerometerChanged(float accelX, float accelY, float accelZ) {$/;"	m	class:Box2DTest.Box2DTestLayer
ccAccelerometerChanged	tests/JBox2DTest.java	/^	    public void ccAccelerometerChanged(float accelX, float accelY, float accelZ) {$/;"	m	class:JBox2DTest.JBox2DTestLayer
ccColor3B	types/CCColor3B.java	/^    public byte[] ccColor3B() {$/;"	m	class:CCColor3B
ccColor4B	types/CCColor4B.java	/^    public byte[] ccColor4B() {$/;"	m	class:CCColor4B
ccColorF	types/CCColorF.java	/^    public float[] ccColorF() {$/;"	m	class:CCColorF
ccQuad2	types/CCQuad2.java	/^    public float[] ccQuad2() {$/;"	m	class:CCQuad2
ccQuad3	types/CCQuad3.java	/^    public float[] ccQuad3() {$/;"	m	class:CCQuad3
ccRGBB	types/CCRGBB.java	/^    public byte[] ccRGBB() {$/;"	m	class:CCRGBB
ccTouchesBegan	events/TouchDelegate.java	/^    public boolean ccTouchesBegan(MotionEvent event);$/;"	m	interface:TouchDelegate
ccTouchesBegan	events/TouchHandler.java	/^    public boolean ccTouchesBegan(MotionEvent event)$/;"	m	class:TouchHandler
ccTouchesBegan	layers/Layer.java	/^    public boolean ccTouchesBegan(MotionEvent event) {$/;"	m	class:Layer
ccTouchesBegan	menus/Menu.java	/^    public boolean ccTouchesBegan(MotionEvent event) {$/;"	m	class:Menu
ccTouchesBegan	tests/AtlasSpriteTest.java	/^        public boolean ccTouchesBegan(MotionEvent event) {$/;"	m	class:AtlasSpriteTest.Atlas1
ccTouchesBegan	tests/ClickAndMoveTest.java	/^        public boolean ccTouchesBegan(MotionEvent event) {$/;"	m	class:ClickAndMoveTest.MainLayer
ccTouchesBegan	tests/JBox2DTest.java	/^        public boolean ccTouchesBegan(MotionEvent event) {$/;"	m	class:JBox2DTest.JBox2DTestLayer
ccTouchesBegan	tests/ParallaxTest.java	/^        public boolean ccTouchesBegan(MotionEvent event)$/;"	m	class:ParallaxTest.Parallax2
ccTouchesCancelled	events/TouchDelegate.java	/^    public boolean ccTouchesCancelled(MotionEvent event);$/;"	m	interface:TouchDelegate
ccTouchesCancelled	events/TouchHandler.java	/^    public boolean ccTouchesCancelled(MotionEvent event)$/;"	m	class:TouchHandler
ccTouchesCancelled	layers/Layer.java	/^    public boolean ccTouchesCancelled(MotionEvent event) {$/;"	m	class:Layer
ccTouchesCancelled	menus/Menu.java	/^    public boolean ccTouchesCancelled(MotionEvent event) {$/;"	m	class:Menu
ccTouchesCancelled	tests/ParallaxTest.java	/^        public boolean ccTouchesCancelled(MotionEvent event)$/;"	m	class:ParallaxTest.Parallax2
ccTouchesEnded	events/TouchDelegate.java	/^    public boolean ccTouchesEnded(MotionEvent event);$/;"	m	interface:TouchDelegate
ccTouchesEnded	events/TouchHandler.java	/^    public boolean ccTouchesEnded(MotionEvent event)$/;"	m	class:TouchHandler
ccTouchesEnded	layers/Layer.java	/^    public boolean ccTouchesEnded(MotionEvent event) {$/;"	m	class:Layer
ccTouchesEnded	menus/Menu.java	/^    public boolean ccTouchesEnded(MotionEvent event) {$/;"	m	class:Menu
ccTouchesEnded	tests/Box2DTest.java	/^        public boolean ccTouchesEnded(MotionEvent event)$/;"	m	class:Box2DTest.Box2DTestLayer
ccTouchesEnded	tests/ParallaxTest.java	/^        public boolean ccTouchesEnded(MotionEvent event)$/;"	m	class:ParallaxTest.Parallax2
ccTouchesEnded	tests/SceneTest.java	/^        public boolean ccTouchesEnded(MotionEvent event) {$/;"	m	class:SceneTest.Layer3
ccTouchesMoved	events/TouchDelegate.java	/^    public boolean ccTouchesMoved(MotionEvent event);$/;"	m	interface:TouchDelegate
ccTouchesMoved	events/TouchHandler.java	/^    public boolean ccTouchesMoved(MotionEvent event)$/;"	m	class:TouchHandler
ccTouchesMoved	layers/Layer.java	/^    public boolean ccTouchesMoved(MotionEvent event) {$/;"	m	class:Layer
ccTouchesMoved	menus/Menu.java	/^    public boolean ccTouchesMoved(MotionEvent event) {$/;"	m	class:Menu
ccTouchesMoved	tests/ParallaxTest.java	/^        public boolean ccTouchesMoved(MotionEvent event)$/;"	m	class:ParallaxTest.Parallax2
ccg	types/CCGridSize.java	/^    public static CCGridSize ccg(final int x, final int y) {$/;"	m	class:CCGridSize
ccp	types/CCPoint.java	/^    public static CCPoint ccp(float x, float y) {$/;"	m	class:CCPoint
ccpAdd	types/CCPoint.java	/^    public static CCPoint ccpAdd(final CCPoint v1, final CCPoint v2) {$/;"	m	class:CCPoint
ccpCross	types/CCPoint.java	/^    public static float ccpCross(final CCPoint v1, final CCPoint v2) {$/;"	m	class:CCPoint
ccpDistance	types/CCPoint.java	/^    public static float ccpDistance(final CCPoint v1, final CCPoint v2) {$/;"	m	class:CCPoint
ccpDot	types/CCPoint.java	/^    public static float ccpDot(final CCPoint v1, final CCPoint v2) {$/;"	m	class:CCPoint
ccpForAngle	types/CCPoint.java	/^    public static CCPoint ccpForAngle(final float a) {$/;"	m	class:CCPoint
ccpLength	types/CCPoint.java	/^    public static float ccpLength(final CCPoint v) {$/;"	m	class:CCPoint
ccpLengthSQ	types/CCPoint.java	/^    public static float ccpLengthSQ(final CCPoint v) {$/;"	m	class:CCPoint
ccpMidpoint	types/CCPoint.java	/^    public static CCPoint ccpMidpoint(final CCPoint v1, final CCPoint v2) {$/;"	m	class:CCPoint
ccpMult	types/CCPoint.java	/^    public static CCPoint ccpMult(final CCPoint v, final float s) {$/;"	m	class:CCPoint
ccpNeg	types/CCPoint.java	/^    public static CCPoint ccpNeg(final CCPoint v) {$/;"	m	class:CCPoint
ccpNormalize	types/CCPoint.java	/^    public static CCPoint ccpNormalize(final CCPoint v) {$/;"	m	class:CCPoint
ccpPerp	types/CCPoint.java	/^    public static CCPoint ccpPerp(final CCPoint v) {$/;"	m	class:CCPoint
ccpProject	types/CCPoint.java	/^    public static CCPoint ccpProject(final CCPoint v1, final CCPoint v2) {$/;"	m	class:CCPoint
ccpRPerp	types/CCPoint.java	/^    public static CCPoint ccpRPerp(final CCPoint v) {$/;"	m	class:CCPoint
ccpRotate	types/CCPoint.java	/^    public static CCPoint ccpRotate(final CCPoint v1, final CCPoint v2) {$/;"	m	class:CCPoint
ccpSub	types/CCPoint.java	/^    public static CCPoint ccpSub(final CCPoint v1, final CCPoint v2) {$/;"	m	class:CCPoint
ccpToAngle	types/CCPoint.java	/^    public static float ccpToAngle(final CCPoint v) {$/;"	m	class:CCPoint
ccpUnrotate	types/CCPoint.java	/^    public static CCPoint ccpUnrotate(final CCPoint v1, final CCPoint v2) {$/;"	m	class:CCPoint
centerSprites	tests/SpritesTest.java	/^        protected void centerSprites() {$/;"	m	class:SpritesTest.SpriteDemo
centerX	opengl/Camera.java	/^    private float centerX;$/;"	f	class:Camera	file:
centerXOrig	actions/camera/CameraAction.java	/^    protected float centerXOrig;$/;"	f	class:CameraAction
centerY	opengl/Camera.java	/^    private float centerY;$/;"	f	class:Camera	file:
centerYOrig	actions/camera/CameraAction.java	/^    protected float centerYOrig;$/;"	f	class:CameraAction
centerZ	opengl/Camera.java	/^    private float centerZ;$/;"	f	class:Camera	file:
centerZOrig	actions/camera/CameraAction.java	/^    protected float centerZOrig;$/;"	f	class:CameraAction
centeredMenu	tests/MenuTest.java	/^        CCPoint centeredMenu;$/;"	f	class:MenuTest.Layer2
changeHeight	layers/ColorLayer.java	/^    public void changeHeight(float h) {$/;"	m	class:ColorLayer
changeWidth	layers/ColorLayer.java	/^    public void changeWidth(float w) {$/;"	m	class:ColorLayer
changeWidthAndHeight	layers/ColorLayer.java	/^    public void changeWidthAndHeight(float w, float h) {$/;"	m	class:ColorLayer
changeZOrder	tests/CocosNodeTest.java	/^        public void changeZOrder(float dt) {$/;"	m	class:CocosNodeTest.Test3
child_	nodes/ParallaxNode.java	/^        private CocosNode child_;$/;"	f	class:ParallaxNode.CCPointObject	file:
children	nodes/CocosNode.java	/^    protected ArrayList<CocosNode> children;$/;"	f	class:CocosNode
childrenAlloc	nodes/CocosNode.java	/^    private void childrenAlloc() {$/;"	m	class:CocosNode	file:
cleanup	nodes/CocosNode.java	/^    public void cleanup() {$/;"	m	class:CocosNode
clone	types/CCAffineTransform.java	/^    public Object clone() {$/;"	m	class:CCAffineTransform
color	particlesystem/ParticleSystem.java	/^        CCColorF color = new CCColorF();$/;"	f	class:ParticleSystem.Particle
colorBackup	menus/MenuItemLabel.java	/^    private CCColor3B colorBackup;$/;"	f	class:MenuItemLabel	file:
colorModulate	particlesystem/ParticleSystem.java	/^    protected boolean colorModulate;$/;"	f	class:ParticleSystem
color_	layers/ColorLayer.java	/^    protected CCColor3B color_;$/;"	f	class:ColorLayer
color_	menus/MenuItemToggle.java	/^    CCColor3B color_;$/;"	f	class:MenuItemToggle
color_	nodes/AtlasNode.java	/^    CCColor3B color_;$/;"	f	class:AtlasNode
color_	nodes/AtlasSprite.java	/^    private CCColor3B color_;$/;"	f	class:AtlasSprite	file:
color_	nodes/Ribbon.java	/^    CCColor4B color_;$/;"	f	class:Ribbon
color_	nodes/TextureNode.java	/^    private CCColor3B color_;$/;"	f	class:TextureNode	file:
colors	nodes/Ribbon.java	/^        byte[] colors = new byte[COUNT * 4 * 2];$/;"	f	class:Ribbon.RibbonSegment
colors	opengl/TextureAtlas.java	/^    private ByteBuffer colors;$/;"	f	class:TextureAtlas	file:
colors	types/CCPointSprite.java	/^    public CCColorF colors = new CCColorF();$/;"	f	class:CCPointSprite
colorsID	particlesystem/ParticleSystem.java	/^    protected int colorsID;$/;"	f	class:ParticleSystem
concatenate	types/CCAffineTransform.java	/^    public void concatenate(CCAffineTransform t) {$/;"	m	class:CCAffineTransform
config	actions/interval/BezierBy.java	/^    private CCBezierConfig config;$/;"	f	class:BezierBy	file:
contains	types/CCRect.java	/^    public boolean contains(float x, float y) {$/;"	m	class:CCRect
containsPoint	types/CCRect.java	/^    public static boolean containsPoint(final CCRect aRect, final CCPoint aPoint) {$/;"	m	class:CCRect
containsRect	types/CCRect.java	/^    public static boolean containsRect(final CCRect aRect, final CCRect bRect) {$/;"	m	class:CCRect
contentSize_	nodes/CocosNode.java	/^    private CCSize contentSize_;$/;"	f	class:CocosNode	file:
controlPoint_1	types/CCBezierConfig.java	/^    public CCPoint controlPoint_1;$/;"	f	class:CCBezierConfig
controlPoint_2	types/CCBezierConfig.java	/^    public CCPoint controlPoint_2;$/;"	f	class:CCBezierConfig
convertCoordinate	nodes/Director.java	/^    public CCPoint convertCoordinate(float x, float y) {$/;"	m	class:Director
convertRectUsingMatrix	nodes/CocosNode.java	/^    private static CCRect convertRectUsingMatrix(CCRect aRect, CCAffineTransform matrix)$/;"	m	class:CocosNode	file:
convertToGL	nodes/Director.java	/^    public CCPoint convertToGL(float uiPointX, float uiPointY) {$/;"	m	class:Director
convertToNodeSpace	nodes/CocosNode.java	/^    public CCPoint convertToNodeSpace(float x, float y) {$/;"	m	class:CocosNode
convertToNodeSpaceAR	nodes/CocosNode.java	/^    public CCPoint convertToNodeSpaceAR(float x, float y) {$/;"	m	class:CocosNode
convertToUI	nodes/Director.java	/^    CCPoint convertToUI(float glPointX, float glPointY) {$/;"	m	class:Director
convertToWorldSpace	nodes/CocosNode.java	/^    public CCPoint convertToWorldSpace(float x, float y) {$/;"	m	class:CocosNode
convertToWorldSpaceAR	nodes/CocosNode.java	/^    public CCPoint convertToWorldSpaceAR(float x, float y) {$/;"	m	class:CocosNode
convertTouchToNodeSpace	nodes/CocosNode.java	/^    public CCPoint convertTouchToNodeSpace(MotionEvent event) {$/;"	m	class:CocosNode
convertTouchToNodeSpaceAR	nodes/CocosNode.java	/^    public CCPoint convertTouchToNodeSpaceAR(MotionEvent event) {$/;"	m	class:CocosNode
coords	nodes/Ribbon.java	/^        float[] coords = new float[COUNT * 2 * 2];$/;"	f	class:Ribbon.RibbonSegment
copy	actions/base/Action.java	/^    public Action copy() {$/;"	m	class:Action
copy	actions/base/FiniteTimeAction.java	/^    public FiniteTimeAction copy() {$/;"	m	class:FiniteTimeAction
copy	actions/base/RepeatForever.java	/^    public Action copy() {$/;"	m	class:RepeatForever
copy	actions/base/Speed.java	/^    public Speed copy() {$/;"	m	class:Speed
copy	actions/camera/OrbitCamera.java	/^    public IntervalAction copy() {$/;"	m	class:OrbitCamera
copy	actions/ease/EaseAction.java	/^    public EaseAction copy() {$/;"	m	class:EaseAction
copy	actions/ease/EaseBackIn.java	/^    public EaseAction copy() {$/;"	m	class:EaseBackIn
copy	actions/ease/EaseBackInOut.java	/^    public EaseAction copy() {$/;"	m	class:EaseBackInOut
copy	actions/ease/EaseBackOut.java	/^    public EaseAction copy() {$/;"	m	class:EaseBackOut
copy	actions/ease/EaseBounceIn.java	/^    public EaseAction copy() {$/;"	m	class:EaseBounceIn
copy	actions/ease/EaseBounceInOut.java	/^    public EaseAction copy() {$/;"	m	class:EaseBounceInOut
copy	actions/ease/EaseBounceOut.java	/^    public EaseAction copy() {$/;"	m	class:EaseBounceOut
copy	actions/ease/EaseElastic.java	/^    public abstract EaseAction copy();$/;"	m	class:EaseElastic
copy	actions/ease/EaseElasticIn.java	/^    public EaseAction copy() {$/;"	m	class:EaseElasticIn
copy	actions/ease/EaseElasticInOut.java	/^    public EaseAction copy() {$/;"	m	class:EaseElasticInOut
copy	actions/ease/EaseElasticOut.java	/^    public EaseAction copy() {$/;"	m	class:EaseElasticOut
copy	actions/ease/EaseRateAction.java	/^    public EaseRateAction copy() {$/;"	m	class:EaseRateAction
copy	actions/instant/CallFunc.java	/^    public CallFunc copy() {$/;"	m	class:CallFunc
copy	actions/instant/InstantAction.java	/^    public InstantAction copy() {$/;"	m	class:InstantAction
copy	actions/instant/Place.java	/^    public Place copy() {$/;"	m	class:Place
copy	actions/interval/Animate.java	/^    public IntervalAction copy() {$/;"	m	class:Animate
copy	actions/interval/BezierBy.java	/^    public IntervalAction copy() {$/;"	m	class:BezierBy
copy	actions/interval/Blink.java	/^    public IntervalAction copy() {$/;"	m	class:Blink
copy	actions/interval/FadeTo.java	/^    public IntervalAction copy() {$/;"	m	class:FadeTo
copy	actions/interval/IntervalAction.java	/^    public IntervalAction copy() {$/;"	m	class:IntervalAction
copy	actions/interval/JumpBy.java	/^    public IntervalAction copy() {$/;"	m	class:JumpBy
copy	actions/interval/JumpTo.java	/^    public IntervalAction copy() {$/;"	m	class:JumpTo
copy	actions/interval/MoveBy.java	/^    public IntervalAction copy() {$/;"	m	class:MoveBy
copy	actions/interval/MoveTo.java	/^    public IntervalAction copy() {$/;"	m	class:MoveTo
copy	actions/interval/Repeat.java	/^    public IntervalAction copy() {$/;"	m	class:Repeat
copy	actions/interval/ReverseTime.java	/^    public IntervalAction copy() {$/;"	m	class:ReverseTime
copy	actions/interval/RotateBy.java	/^    public IntervalAction copy() {$/;"	m	class:RotateBy
copy	actions/interval/RotateTo.java	/^    public IntervalAction copy() {$/;"	m	class:RotateTo
copy	actions/interval/ScaleBy.java	/^    public IntervalAction copy() {$/;"	m	class:ScaleBy
copy	actions/interval/ScaleTo.java	/^    public IntervalAction copy() {$/;"	m	class:ScaleTo
copy	actions/interval/Sequence.java	/^    public IntervalAction copy() {$/;"	m	class:Sequence
copy	actions/interval/Spawn.java	/^    public IntervalAction copy() {$/;"	m	class:Spawn
copy	actions/interval/TintBy.java	/^    public IntervalAction copy() {$/;"	m	class:TintBy
copy	actions/interval/TintTo.java	/^    public IntervalAction copy() {$/;"	m	class:TintTo
copy	types/CCTexParams.java	/^    public CCTexParams copy() {$/;"	m	class:CCTexParams
copy	types/Copyable.java	/^    public Object copy();$/;"	m	interface:Copyable
createFcn	box2d/TestEntry.java	/^    TestCreateFcn createFcn;$/;"	f	class:TestEntry
createFloatBuffer	utils/FloatBufferProvider.java	/^    public static FloatBuffer createFloatBuffer(int arrayElementCount) {$/;"	m	class:FloatBufferProvider
createInverse	types/CCAffineTransform.java	/^    public CCAffineTransform createInverse() \/*throws NoninvertibleTransformException*\/ {$/;"	m	class:CCAffineTransform
createTextureFromBitmap	nodes/TextureManager.java	/^    public static Texture2D createTextureFromBitmap(Bitmap bmp) {$/;"	m	class:TextureManager
createTextureFromFilePath	nodes/TextureManager.java	/^    public static Texture2D createTextureFromFilePath(String path) {$/;"	m	class:TextureManager
creationTime	nodes/Ribbon.java	/^        float[] creationTime = new float[COUNT];$/;"	f	class:Ribbon.RibbonSegment
currentBuffer	utils/FloatBufferProvider.java	/^	private ByteBuffer currentBuffer = null;$/;"	f	class:FloatBufferProvider	file:
dSegments	nodes/Ribbon.java	/^    ArrayList<RibbonSegment> dSegments;$/;"	f	class:Ribbon
data	actions/instant/CallFuncND.java	/^    protected Object data;$/;"	f	class:CallFuncND
deactivateTimers	nodes/CocosNode.java	/^    private void deactivateTimers() {$/;"	m	class:CocosNode	file:
defaultCapacity	nodes/AtlasSpriteManager.java	/^    public static final int defaultCapacity = 29;$/;"	f	class:AtlasSpriteManager
delay	nodes/Animation.java	/^    private float delay;$/;"	f	class:Animation	file:
delay	nodes/Animation.java	/^    public float delay() {$/;"	m	class:Animation
delay	nodes/AtlasAnimation.java	/^    float delay;$/;"	f	class:AtlasAnimation
delay	nodes/AtlasAnimation.java	/^    public float delay() {$/;"	m	class:AtlasAnimation
delay	nodes/CocosNode.java	/^        public float delay();$/;"	m	interface:CocosNode.CocosAnimation
delay2	tests/CocosNodeTest.java	/^        public void delay2(float dt) {$/;"	m	class:CocosNodeTest.Test4
delay4	tests/CocosNodeTest.java	/^        public void delay4(float dt) {$/;"	m	class:CocosNodeTest.Test4
delegate_	events/TouchHandler.java	/^    private TouchDelegate delegate_;$/;"	f	class:TouchHandler	file:
deleteHashElement	actions/ActionManager.java	/^    private void deleteHashElement(HashElement element) {$/;"	m	class:ActionManager	file:
delta	actions/interval/JumpBy.java	/^    protected PointF delta;$/;"	f	class:JumpBy
deltaAngleX	actions/camera/OrbitCamera.java	/^    private float deltaAngleX;$/;"	f	class:OrbitCamera	file:
deltaAngleZ	actions/camera/OrbitCamera.java	/^    private float deltaAngleZ;$/;"	f	class:OrbitCamera	file:
deltaB	actions/interval/TintBy.java	/^    protected int deltaR, deltaG, deltaB;$/;"	f	class:TintBy
deltaColor	particlesystem/ParticleSystem.java	/^        CCColorF deltaColor = new CCColorF();$/;"	f	class:ParticleSystem.Particle
deltaG	actions/interval/TintBy.java	/^    protected int deltaR, deltaG, deltaB;$/;"	f	class:TintBy
deltaR	actions/interval/TintBy.java	/^    protected int deltaR, deltaG, deltaB;$/;"	f	class:TintBy
deltaRadius	actions/camera/OrbitCamera.java	/^    private float deltaRadius;$/;"	f	class:OrbitCamera	file:
deltaTransform	types/CCAffineTransform.java	/^    public CCPoint deltaTransform(CCPoint src, CCPoint dst) {$/;"	m	class:CCAffineTransform
deltaTransform	types/CCAffineTransform.java	/^    public void deltaTransform(double[] src, int srcOff, double[] dst, int dstOff, int length) {$/;"	m	class:CCAffineTransform
deltaX	actions/interval/MoveTo.java	/^    protected float deltaX;$/;"	f	class:MoveTo
deltaX	actions/interval/ScaleTo.java	/^    protected float deltaX;$/;"	f	class:ScaleTo
deltaY	actions/interval/MoveTo.java	/^    protected float deltaY;$/;"	f	class:MoveTo
deltaY	actions/interval/ScaleTo.java	/^    protected float deltaY;$/;"	f	class:ScaleTo
destroy	opengl/TGA.java	/^    public static void destroy(ImageTGA info) {$/;"	m	class:TGA
detach	nodes/Director.java	/^    private boolean detach() {$/;"	m	class:Director	file:
detachChild	nodes/CocosNode.java	/^    private void detachChild(CocosNode child, boolean doCleanup) {$/;"	m	class:CocosNode	file:
deviceOrientation_	nodes/Director.java	/^    int	deviceOrientation_;$/;"	f	class:Director
dir	particlesystem/ParticleSystem.java	/^        CCPoint dir = new CCPoint();$/;"	f	class:ParticleSystem.Particle
dir	tests/AtlasSpriteTest.java	/^        int dir;$/;"	f	class:AtlasSpriteTest.Atlas4
dirty	opengl/Camera.java	/^    private boolean dirty;$/;"	f	class:Camera	file:
dirty_	nodes/AtlasSprite.java	/^    private boolean dirty_;$/;"	f	class:AtlasSprite	file:
disabledColor_	menus/MenuItemLabel.java	/^    private CCColor3B disabledColor_;$/;"	f	class:MenuItemLabel	file:
disabledImage_	menus/MenuItemSprite.java	/^    protected CocosNode disabledImage_;$/;"	f	class:MenuItemSprite
disabledItem	tests/MenuTest.java	/^        MenuItem disabledItem;$/;"	f	class:MenuTest.Layer1
disabledItem	tests/MenuTest.java	/^        MenuItem disabledItem;$/;"	f	class:MenuTest.Layer3
dispatchEvents	events/TouchDispatcher.java	/^    private boolean dispatchEvents;$/;"	f	class:TouchDispatcher	file:
displayFPS	nodes/Director.java	/^    private boolean displayFPS;$/;"	f	class:Director	file:
displayFrame	nodes/AtlasSprite.java	/^    public AtlasSpriteFrame displayFrame() {$/;"	m	class:AtlasSprite
displayFrame	nodes/CocosNode.java	/^        public Object displayFrame();$/;"	m	interface:CocosNode.CocosNodeFrames
displayFrame	nodes/Sprite.java	/^    public Object displayFrame() {$/;"	m	class:Sprite
displaySize	nodes/Director.java	/^    public CCSize displaySize() {$/;"	m	class:Director
divideRect	types/CCRect.java	/^    public static void divideRect(final CCRect aRect, CCRect[] slice, CCRect[] remainder, float amount, CCRect.Edge edge) {$/;"	m	class:CCRect
draw	layers/ColorLayer.java	/^    public void draw(GL10 gl) {$/;"	m	class:ColorLayer
draw	menus/MenuItemAtlasSprite.java	/^    public void draw(GL10 gl) {$/;"	m	class:MenuItemAtlasSprite
draw	menus/MenuItemLabel.java	/^    public void draw(GL10 gl) {$/;"	m	class:MenuItemLabel
draw	menus/MenuItemSprite.java	/^    public void draw(GL10 gl) {$/;"	m	class:MenuItemSprite
draw	nodes/AtlasNode.java	/^    public void draw(GL10 gl) {$/;"	m	class:AtlasNode
draw	nodes/AtlasSpriteManager.java	/^    public void draw(GL10 gl) {$/;"	m	class:AtlasSpriteManager
draw	nodes/CocosNode.java	/^    public void draw(GL10 gl) {$/;"	m	class:CocosNode
draw	nodes/LabelAtlas.java	/^    public void draw(GL10 gl) {$/;"	m	class:LabelAtlas
draw	nodes/Ribbon.java	/^        public void draw(GL10 gl, float curTime, float fadeTime, CCColor4B color) {$/;"	m	class:Ribbon.RibbonSegment
draw	nodes/Ribbon.java	/^    public void draw(GL10 gl) {$/;"	m	class:Ribbon
draw	nodes/TextureNode.java	/^    public void draw(GL10 gl) {$/;"	m	class:TextureNode
draw	opengl/TextureAtlas.java	/^    public void draw(GL10 gl, int n) {$/;"	m	class:TextureAtlas
draw	particlesystem/ParticleSystem.java	/^    public void draw(GL10 gl) {$/;"	m	class:ParticleSystem
draw	tests/AtlasTest.java	/^        public void draw(GL10 gl) {$/;"	m	class:AtlasTest.Atlas1
draw	tests/Box2DTest.java	/^        public void draw(GL10 gl) {$/;"	m	class:Box2DTest.Box2DTestLayer
draw	tests/DrawPrimitivesTest.java	/^        public void draw(GL10 gl) {$/;"	m	class:DrawPrimitivesTest.Test1
draw	transitions/TransitionScene.java	/^    public void draw(GL10 gl)$/;"	m	class:TransitionScene
drawAABBs	box2d/Settings.java	/^    public int drawAABBs;$/;"	f	class:Settings
drawAtPoint	opengl/Texture2D.java	/^    public void drawAtPoint(GL10 gl, CCPoint point) {$/;"	m	class:Texture2D
drawCOMs	box2d/Settings.java	/^    public int drawCOMs;$/;"	f	class:Settings
drawCircle	box2d/GLESDebugDraw.java	/^    public void drawCircle(GL10 gl, final BBVec2 center, float radius, final BBColor color) {$/;"	m	class:GLESDebugDraw
drawCircle	opengl/Primitives.java	/^    public static void drawCircle(GL10 gl, float centerX, float centerY, float r, float a, int segments, boolean drawLineToCenter) {$/;"	m	class:Primitives
drawContactForces	box2d/Settings.java	/^    public int drawContactForces;$/;"	f	class:Settings
drawContactNormals	box2d/Settings.java	/^    public int drawContactNormals;$/;"	f	class:Settings
drawContactPoints	box2d/Settings.java	/^    public int drawContactPoints;$/;"	f	class:Settings
drawCubicBezier	opengl/Primitives.java	/^    public static void drawCubicBezier(GL10 gl, float originX, float originY, float control1X, float control1Y, float control2X, float control2Y, float destinationX, float destinationY, int segments)$/;"	m	class:Primitives
drawFrictionForces	box2d/Settings.java	/^    public int drawFrictionForces;$/;"	f	class:Settings
drawJoints	box2d/Settings.java	/^    public int drawJoints;$/;"	f	class:Settings
drawLine	opengl/Primitives.java	/^    public static void drawLine(GL10 gl, CCPoint origin, CCPoint destination) {$/;"	m	class:Primitives
drawPairs	box2d/Settings.java	/^    public int drawPairs;$/;"	f	class:Settings
drawPoint	opengl/Primitives.java	/^    public static void drawPoint(GL10 gl, float x, float y) {$/;"	m	class:Primitives
drawPoints	opengl/Primitives.java	/^    public static void drawPoints(GL10 gl, CCPoint points[], int numberOfPoints) {$/;"	m	class:Primitives
drawPoly	opengl/Primitives.java	/^    public static void drawPoly(GL10 gl, CCPoint poli[], int numberOfPoints, boolean closePolygon) {$/;"	m	class:Primitives
drawPolygon	box2d/GLESDebugDraw.java	/^    public void drawPolygon(GL10 gl, final BBVec2[] old_vertices, int vertexCount, final BBColor color) {$/;"	m	class:GLESDebugDraw
drawQuadBezier	opengl/Primitives.java	/^    public static void drawQuadBezier(GL10 gl,float originX, float originY, float controlX, float controlY, float destinationX, float destinationY, int segments)$/;"	m	class:Primitives
drawQuads	opengl/TextureAtlas.java	/^    public void drawQuads(GL10 gl) {$/;"	m	class:TextureAtlas
drawQuads	utils/FloatBufferProvider.java	/^    public static void drawQuads(GL10 gl, FloatBuffer fbVert, FloatBuffer fbCoord) {$/;"	m	class:FloatBufferProvider
drawRect	opengl/Primitives.java	/^    public static void drawRect(GL10 gl, CCRect rect) {$/;"	m	class:Primitives
drawSegment	box2d/GLESDebugDraw.java	/^    public void drawSegment(GL10 gl, final BBVec2 p1, final BBVec2 p2, final BBColor color) {$/;"	m	class:GLESDebugDraw
drawShapes	box2d/Settings.java	/^    public int drawShapes;$/;"	f	class:Settings
drawSolidCircle	box2d/GLESDebugDraw.java	/^    public void drawSolidCircle(GL10 gl, final BBVec2 center, float radius, final BBVec2 axis, final BBColor color) {$/;"	m	class:GLESDebugDraw
drawSolidPolygon	box2d/GLESDebugDraw.java	/^    public void drawSolidPolygon(GL10 gl, final BBVec2[] old_vertices, int vertexCount, final BBColor color) {$/;"	m	class:GLESDebugDraw
drawStats	box2d/Settings.java	/^    public int drawStats;$/;"	f	class:Settings
drawTitle	box2d/Test.java	/^    public void drawTitle(int x, int y, String string) {$/;"	m	class:Test
drawXForm	box2d/GLESDebugDraw.java	/^    public void drawXForm(GL10 gl, final BBTransform xf) {}$/;"	m	class:GLESDebugDraw
dst	types/CCBlendFunc.java	/^    public int dst;$/;"	f	class:CCBlendFunc
dt	nodes/Director.java	/^    private float dt;$/;"	f	class:Director	file:
duration	actions/base/FiniteTimeAction.java	/^    protected float duration;$/;"	f	class:FiniteTimeAction
duration	particlesystem/ParticleSystem.java	/^    protected float duration;$/;"	f	class:ParticleSystem
duration	transitions/TransitionScene.java	/^    protected float duration;$/;"	f	class:TransitionScene
easeAction	transitions/MoveInLTransition.java	/^    protected IntervalAction easeAction(IntervalAction action) {$/;"	m	class:MoveInLTransition
easeAction	transitions/ShrinkGrowTransition.java	/^    protected IntervalAction easeAction(IntervalAction action) {$/;"	m	class:ShrinkGrowTransition
easeAction	transitions/SlideInLTransition.java	/^    protected IntervalAction easeAction(IntervalAction action) {$/;"	m	class:SlideInLTransition
easeAction	transitions/TurnOffTilesTransition.java	/^    protected IntervalAction easeAction(IntervalAction action) {$/;"	m	class:TurnOffTilesTransition
elapsed	actions/Scheduler.java	/^        float elapsed;$/;"	f	class:Scheduler.Timer
elapsed	actions/interval/IntervalAction.java	/^    protected float elapsed;$/;"	f	class:IntervalAction
elapsed	particlesystem/ParticleSystem.java	/^    protected float elapsed;$/;"	f	class:ParticleSystem
emissionRate	particlesystem/ParticleSystem.java	/^    protected float emissionRate;$/;"	f	class:ParticleSystem
emitCounter	particlesystem/ParticleSystem.java	/^    protected float emitCounter;$/;"	f	class:ParticleSystem
emitter	tests/ParticleTest.java	/^        ParticleSystem	emitter;$/;"	f	class:ParticleTest.ParticleDemo
enableContinuous	box2d/Settings.java	/^    public int enableContinuous;$/;"	f	class:Settings
enableWarmStarting	box2d/Settings.java	/^    public int enableWarmStarting;$/;"	f	class:Settings
enabledLayer	layers/MultiplexLayer.java	/^    private int enabledLayer;$/;"	f	class:MultiplexLayer	file:
end	nodes/Director.java	/^    public void end() {$/;"	m	class:Director
end	nodes/Ribbon.java	/^        int end;$/;"	f	class:Ribbon.RibbonSegment
endColor	particlesystem/ParticleSystem.java	/^    protected CCColorF endColor = new CCColorF();$/;"	f	class:ParticleSystem
endColorVar	particlesystem/ParticleSystem.java	/^    protected CCColorF endColorVar = new CCColorF();$/;"	f	class:ParticleSystem
endContact	box2d/Test.java	/^    public abstract void endContact(BBContact contact);$/;"	m	class:Test
endPosition	types/CCBezierConfig.java	/^    public CCPoint endPosition;$/;"	f	class:CCBezierConfig
endPositionX	actions/interval/MoveTo.java	/^    private float endPositionX;$/;"	f	class:MoveTo	file:
endPositionY	actions/interval/MoveTo.java	/^    private float endPositionY;$/;"	f	class:MoveTo	file:
endScaleX	actions/interval/ScaleTo.java	/^    protected float endScaleX;$/;"	f	class:ScaleTo
endScaleY	actions/interval/ScaleTo.java	/^    protected float endScaleY;$/;"	f	class:ScaleTo
entryID	box2d/Box2DView.java	/^    int		entryID;$/;"	f	class:Box2DView
equalToPoint	types/CCPoint.java	/^    public static boolean equalToPoint(CCPoint p1, CCPoint p2) {$/;"	m	class:CCPoint
equalToRect	types/CCRect.java	/^    public static boolean equalToRect(final CCRect r1, final CCRect r2) {$/;"	m	class:CCRect
equalToSize	types/CCSize.java	/^    public static boolean equalToSize(CCSize s1, CCSize s2) {$/;"	m	class:CCSize
equals	types/CCAffineTransform.java	/^    public boolean equals(Object obj) {$/;"	m	class:CCAffineTransform
execute	actions/instant/CallFunc.java	/^    public void execute() {$/;"	m	class:CallFunc
execute	actions/instant/CallFuncN.java	/^    public void execute() {$/;"	m	class:CallFuncN
execute	actions/instant/CallFuncND.java	/^    public void execute() {$/;"	m	class:CallFuncND
eyeX	opengl/Camera.java	/^    private float eyeX;$/;"	f	class:Camera	file:
eyeXOrig	actions/camera/CameraAction.java	/^    protected float eyeXOrig;$/;"	f	class:CameraAction
eyeY	opengl/Camera.java	/^    private float eyeY;$/;"	f	class:Camera	file:
eyeYOrig	actions/camera/CameraAction.java	/^    protected float eyeYOrig;$/;"	f	class:CameraAction
eyeZ	opengl/Camera.java	/^    private float eyeZ;$/;"	f	class:Camera	file:
eyeZOrig	actions/camera/CameraAction.java	/^    protected float eyeZOrig;$/;"	f	class:CameraAction
fillFloatBuffer	utils/FloatBufferProvider.java	/^    public static void fillFloatBuffer(FloatBuffer fb, float[] arr) {$/;"	m	class:FloatBufferProvider
finish	transitions/TransitionScene.java	/^    public void finish() {$/;"	m	class:TransitionScene
finished	nodes/Ribbon.java	/^        boolean finished;$/;"	f	class:Ribbon.RibbonSegment
fire	actions/Scheduler.java	/^        public void fire(float dt) {$/;"	m	class:Scheduler.Timer
firstTick	actions/interval/IntervalAction.java	/^    private boolean firstTick;$/;"	f	class:IntervalAction	file:
fixedM	opengl/GLU.java	/^    private static FloatBuffer fixedM;$/;"	f	class:GLU	file:
fixtureA	box2d/ContactPoint.java	/^    BBFixture fixtureA;$/;"	f	class:ContactPoint
fixtureB	box2d/ContactPoint.java	/^    BBFixture fixtureB;$/;"	f	class:ContactPoint
flipImage	opengl/TGA.java	/^    private static void flipImage(ImageTGA info) {$/;"	m	class:TGA	file:
flipX_	nodes/AtlasSprite.java	/^    private boolean flipX_;$/;"	f	class:AtlasSprite	file:
flipY_	nodes/AtlasSprite.java	/^    private	boolean flipY_;$/;"	f	class:AtlasSprite	file:
flipped	opengl/TGA.java	/^        int flipped;$/;"	f	class:TGA.ImageTGA
fontName	menus/MenuItem.java	/^    static String fontName = "DroidSans";$/;"	f	class:MenuItem
fontName	menus/MenuItemFont.java	/^    public static String fontName() {$/;"	m	class:MenuItemFont
fontSize	menus/MenuItemFont.java	/^    public static int fontSize() {$/;"	m	class:MenuItemFont
format	utils/CCFormatter.java	/^    public String format(java.lang.String s, java.lang.Object... objects) {$/;"	m	class:CCFormatter
formatter	utils/CCFormatter.java	/^    private java.util.Formatter formatter;$/;"	f	class:CCFormatter	file:
fpsLabel	nodes/Director.java	/^    LabelAtlas fpsLabel;$/;"	f	class:Director
frame	opengl/CCGLSurfaceView.java	/^    public Display frame;$/;"	f	class:CCGLSurfaceView
frameRate	nodes/Director.java	/^    private float frameRate;$/;"	f	class:Director	file:
frames	nodes/Animation.java	/^    ArrayList<Object> frames;$/;"	f	class:Animation
frames	nodes/Animation.java	/^    public ArrayList<Object> frames() {$/;"	m	class:Animation
frames	nodes/AtlasAnimation.java	/^    ArrayList<Object> frames;$/;"	f	class:AtlasAnimation
frames	nodes/AtlasAnimation.java	/^    public ArrayList<Object> frames() {$/;"	m	class:AtlasAnimation
frames	nodes/CocosNode.java	/^        public ArrayList<Object> frames();$/;"	m	interface:CocosNode.CocosAnimation
frames	nodes/Director.java	/^    private int frames;$/;"	f	class:Director	file:
fromB	actions/interval/TintBy.java	/^    protected int fromR, fromG, fromB;$/;"	f	class:TintBy
fromB	actions/interval/TintTo.java	/^    protected int fromR, fromG, fromB;$/;"	f	class:TintTo
fromG	actions/interval/TintBy.java	/^    protected int fromR, fromG, fromB;$/;"	f	class:TintBy
fromG	actions/interval/TintTo.java	/^    protected int fromR, fromG, fromB;$/;"	f	class:TintTo
fromOpacity	actions/interval/FadeTo.java	/^    byte toOpacity, fromOpacity;$/;"	f	class:FadeTo
fromR	actions/interval/TintBy.java	/^    protected int fromR, fromG, fromB;$/;"	f	class:TintBy
fromR	actions/interval/TintTo.java	/^    protected int fromR, fromG, fromB;$/;"	f	class:TintTo
g	types/CCColor3B.java	/^    public int g;$/;"	f	class:CCColor3B
g	types/CCColor4B.java	/^    public int g;$/;"	f	class:CCColor4B
g	types/CCColorF.java	/^    public float g;$/;"	f	class:CCColorF
g	types/CCRGBB.java	/^    public byte g;$/;"	f	class:CCRGBB
getAction	actions/ActionManager.java	/^    public Action getAction(int tag, CocosNode target) {$/;"	m	class:ActionManager
getAction	nodes/CocosNode.java	/^    public Action getAction(int tag) {$/;"	m	class:CocosNode
getActive	particlesystem/ParticleSystem.java	/^    public boolean getActive() {$/;"	m	class:ParticleSystem
getActivity	nodes/Director.java	/^    public Activity getActivity() {$/;"	m	class:Director
getAnchorPointX	nodes/CocosNode.java	/^    public float getAnchorPointX() {$/;"	m	class:CocosNode
getAnchorPointY	nodes/CocosNode.java	/^    public float getAnchorPointY() {$/;"	m	class:CocosNode
getAnimationInterval	nodes/Director.java	/^    public void getAnimationInterval(double interval) {$/;"	m	class:Director
getBindTextureTargetString	opengl/GLDebugWrapper.java	/^        private static String getBindTextureTargetString(int target) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getBlendFuncDFactorString	opengl/GLDebugWrapper.java	/^        private static String getBlendFuncDFactorString(int dfactor) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getBlendFuncSFactorString	opengl/GLDebugWrapper.java	/^        private static String getBlendFuncSFactorString(int sfactor) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getBooleanString	opengl/GLDebugWrapper.java	/^        private static String getBooleanString(boolean state) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getBoundingBox	nodes/CocosNode.java	/^    public CCRect getBoundingBox()$/;"	m	class:CocosNode
getCamera	nodes/CocosNode.java	/^    public Camera getCamera() {$/;"	m	class:CocosNode
getCenter	opengl/Camera.java	/^    public void getCenter(float x[], float y[], float z[]) {$/;"	m	class:Camera
getChild	nodes/CocosNode.java	/^    public CocosNode getChild(int tag) {$/;"	m	class:CocosNode
getChild	nodes/ParallaxNode.java	/^        public CocosNode getChild() {$/;"	m	class:ParallaxNode.CCPointObject
getChildren	nodes/CocosNode.java	/^    public ArrayList<CocosNode> getChildren() {$/;"	m	class:CocosNode
getClearMaskString	opengl/GLDebugWrapper.java	/^        private static String getClearMaskString(int mask) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getClientStateArrayString	opengl/GLDebugWrapper.java	/^        private static String getClientStateArrayString(int array) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getColor	layers/ColorLayer.java	/^    public CCColor3B getColor() {$/;"	m	class:ColorLayer
getColor	menus/MenuItemLabel.java	/^    public CCColor3B getColor() {$/;"	m	class:MenuItemLabel
getColor	menus/MenuItemSprite.java	/^    public CCColor3B getColor() {$/;"	m	class:MenuItemSprite
getColor	nodes/AtlasNode.java	/^    public CCColor3B getColor() {$/;"	m	class:AtlasNode
getColor	nodes/AtlasSprite.java	/^    public CCColor3B getColor() {$/;"	m	class:AtlasSprite
getColor	nodes/CocosNode.java	/^        public CCColor3B getColor();$/;"	m	interface:CocosNode.CocosNodeRGBA
getColor	nodes/TextureNode.java	/^    public CCColor3B getColor() {$/;"	m	class:TextureNode
getColor	opengl/TextureAtlas.java	/^    private byte[] getColor(ByteBuffer src, int index) {$/;"	m	class:TextureAtlas	file:
getColorPointerTypeString	opengl/GLDebugWrapper.java	/^        private static String getColorPointerTypeString(int type) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getConfigSpec	nodes/Director.java	/^    public int[] getConfigSpec() {$/;"	m	class:Director
getCullFaceModeString	opengl/GLDebugWrapper.java	/^        private static String getCullFaceModeString(int mode) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getData	Cocos2D.java	/^    protected List<?> getData(String prefix) {$/;"	m	class:Cocos2D
getDelegate	events/TouchHandler.java	/^    public TouchDelegate getDelegate() {$/;"	m	class:TouchHandler
getDeterminant	types/CCAffineTransform.java	/^    public double getDeterminant() {$/;"	m	class:CCAffineTransform
getDeviceOrientation	nodes/Director.java	/^    public int getDeviceOrientation() {$/;"	m	class:Director
getDisabledColor	menus/MenuItemLabel.java	/^    public CCColor3B getDisabledColor() {$/;"	m	class:MenuItemLabel
getDispatchEvents	events/TouchDispatcher.java	/^    public boolean getDispatchEvents() {$/;"	m	class:TouchDispatcher
getDrawArraysModeString	opengl/GLDebugWrapper.java	/^        private static String getDrawArraysModeString(int array) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getDst	types/CCBlendFunc.java	/^    public int getDst() {$/;"	m	class:CCBlendFunc
getDuration	actions/base/FiniteTimeAction.java	/^    public float getDuration() {$/;"	m	class:FiniteTimeAction
getDuration	particlesystem/ParticleSystem.java	/^    public float getDuration() {$/;"	m	class:ParticleSystem
getElapsed	actions/interval/IntervalAction.java	/^    public float getElapsed() {$/;"	m	class:IntervalAction
getEnableDisableCapString	opengl/GLDebugWrapper.java	/^        private static String getEnableDisableCapString(int cap) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getEye	opengl/Camera.java	/^    public void getEye(float x[], float y[], float z[]) {$/;"	m	class:Camera
getFlipX	nodes/AtlasSprite.java	/^    public boolean getFlipX()$/;"	m	class:AtlasSprite
getFlipY	nodes/AtlasSprite.java	/^    public boolean getFlipY()$/;"	m	class:AtlasSprite
getGravity	particlesystem/ParticleSystem.java	/^    public CCPoint getGravity() {$/;"	m	class:ParticleSystem
getGrid	nodes/CocosNode.java	/^    public GridBase getGrid() {$/;"	m	class:CocosNode
getGridHeight	grid/GridBase.java	/^    public int getGridHeight() {$/;"	m	class:GridBase
getGridWidth	grid/GridBase.java	/^    public int getGridWidth() {$/;"	m	class:GridBase
getHeight	layers/ColorLayer.java	/^    public float getHeight() {$/;"	m	class:ColorLayer
getHeight	nodes/CocosNode.java	/^        public float getHeight();$/;"	m	interface:CocosNode.CocosNodeSize
getHeight	nodes/CocosNode.java	/^    public float getHeight() {$/;"	m	class:CocosNode
getHeight	nodes/LabelAtlas.java	/^    public float getHeight() {$/;"	m	class:LabelAtlas
getHeight	nodes/TextureNode.java	/^    public float getHeight() {$/;"	m	class:TextureNode
getHeight	opengl/Texture2D.java	/^    public float getHeight() {$/;"	m	class:Texture2D
getHeight	types/CCSize.java	/^    public float getHeight() {$/;"	m	class:CCSize
getHintModeString	opengl/GLDebugWrapper.java	/^        private static String getHintModeString(int target) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getHintTargetString	opengl/GLDebugWrapper.java	/^        private static String getHintTargetString(int target) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getInterval	actions/Scheduler.java	/^        public float getInterval() {$/;"	m	class:Scheduler.Timer
getLabel	menus/MenuItemLabel.java	/^    public CocosNodeLabel getLabel() {$/;"	m	class:MenuItemLabel
getLandscape	nodes/Director.java	/^    public boolean getLandscape() {$/;"	m	class:Director
getLife	particlesystem/ParticleSystem.java	/^    public float getLife() {$/;"	m	class:ParticleSystem
getLogicOpOpcodeString	opengl/GLDebugWrapper.java	/^        private static String getLogicOpOpcodeString(int cap) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getMatrix	types/CCAffineTransform.java	/^    public void getMatrix(double[] matrix) {$/;"	m	class:CCAffineTransform
getMatrixModeString	opengl/GLDebugWrapper.java	/^        private static String getMatrixModeString(int mode) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getOffsetX	nodes/ParallaxNode.java	/^        public float getOffsetX() {$/;"	m	class:ParallaxNode.CCPointObject
getOffsetY	nodes/ParallaxNode.java	/^        public float getOffsetY() {$/;"	m	class:ParallaxNode.CCPointObject
getOpacity	layers/ColorLayer.java	/^    public int getOpacity() {$/;"	m	class:ColorLayer
getOpacity	menus/MenuItemLabel.java	/^    public int getOpacity() {$/;"	m	class:MenuItemLabel
getOpacity	menus/MenuItemSprite.java	/^    public int getOpacity() {$/;"	m	class:MenuItemSprite
getOpacity	nodes/AtlasNode.java	/^    public int getOpacity() {$/;"	m	class:AtlasNode
getOpacity	nodes/AtlasSprite.java	/^    public int getOpacity() {$/;"	m	class:AtlasSprite
getOpacity	nodes/CocosNode.java	/^        public int getOpacity();$/;"	m	interface:CocosNode.CocosNodeRGBA
getOpacity	nodes/TextureNode.java	/^    public int getOpacity() {$/;"	m	class:TextureNode
getOpenGLView	nodes/Director.java	/^    private GLSurfaceView getOpenGLView() {$/;"	m	class:Director	file:
getOriginalTarget	actions/base/Action.java	/^    public CocosNode getOriginalTarget() {$/;"	m	class:Action
getParent	nodes/CocosNode.java	/^    public CocosNode getParent() {$/;"	m	class:CocosNode
getParticleCount	particlesystem/ParticleSystem.java	/^    public int getParticleCount() {$/;"	m	class:ParticleSystem
getPosVar	particlesystem/ParticleSystem.java	/^    public CCPoint getPosVar() {$/;"	m	class:ParticleSystem
getPositionType	particlesystem/ParticleSystem.java	/^    public int getPositionType() {$/;"	m	class:ParticleSystem
getPositionX	nodes/CocosNode.java	/^    public float getPositionX() {$/;"	m	class:CocosNode
getPositionY	nodes/CocosNode.java	/^    public float getPositionY() {$/;"	m	class:CocosNode
getPriority	events/TouchHandler.java	/^    public int getPriority() {$/;"	m	class:TouchHandler
getProjection	nodes/Director.java	/^    public int getProjection() {$/;"	m	class:Director
getRatioX	nodes/ParallaxNode.java	/^        public float getRatioX() {$/;"	m	class:ParallaxNode.CCPointObject
getRatioY	nodes/ParallaxNode.java	/^        public float getRatioY() {$/;"	m	class:ParallaxNode.CCPointObject
getRibbon	nodes/MotionStreak.java	/^    public Ribbon getRibbon() {$/;"	m	class:MotionStreak
getRotateInstance	types/CCAffineTransform.java	/^    public static CCAffineTransform getRotateInstance(double angle) {$/;"	m	class:CCAffineTransform
getRotateInstance	types/CCAffineTransform.java	/^    public static CCAffineTransform getRotateInstance(double angle, double x, double y) {$/;"	m	class:CCAffineTransform
getRotation	nodes/CocosNode.java	/^    public float getRotation() {$/;"	m	class:CocosNode
getScaleInstance	types/CCAffineTransform.java	/^    public static CCAffineTransform getScaleInstance(double scx, double scY) {$/;"	m	class:CCAffineTransform
getScaleX	nodes/CocosNode.java	/^    public float getScaleX() {$/;"	m	class:CocosNode
getScaleX	types/CCAffineTransform.java	/^    public double getScaleX() {$/;"	m	class:CCAffineTransform
getScaleY	nodes/CocosNode.java	/^    public float getScaleY() {$/;"	m	class:CocosNode
getScaleY	types/CCAffineTransform.java	/^    public double getScaleY() {$/;"	m	class:CCAffineTransform
getSelectedItem	menus/Menu.java	/^    public MenuItem getSelectedItem() {$/;"	m	class:Menu
getShadeModelString	opengl/GLDebugWrapper.java	/^        private String getShadeModelString(int mode) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getShearInstance	types/CCAffineTransform.java	/^    public static CCAffineTransform getShearInstance(double shx, double shy) {$/;"	m	class:CCAffineTransform
getShearX	types/CCAffineTransform.java	/^    public double getShearX() {$/;"	m	class:CCAffineTransform
getShearY	types/CCAffineTransform.java	/^    public double getShearY() {$/;"	m	class:CCAffineTransform
getSource	particlesystem/ParticleSystem.java	/^    public CCPoint getSource() {$/;"	m	class:ParticleSystem
getSpeed	actions/base/Speed.java	/^    public float getSpeed() {$/;"	m	class:Speed
getSrc	types/CCBlendFunc.java	/^    public int getSrc() {$/;"	m	class:CCBlendFunc
getTag	actions/base/Action.java	/^    public int getTag() {$/;"	m	class:Action
getTag	nodes/CocosNode.java	/^    public int getTag() {$/;"	m	class:CocosNode
getTarget	actions/base/Action.java	/^    public CocosNode getTarget() {$/;"	m	class:Action
getTexCoordPointerTypeString	opengl/GLDebugWrapper.java	/^        private static String getTexCoordPointerTypeString(int type) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTexCoords	opengl/TextureAtlas.java	/^    private float[] getTexCoords(FloatBuffer src, int index) {$/;"	m	class:TextureAtlas	file:
getTexEnvParam	opengl/GLDebugWrapper.java	/^        private static String getTexEnvParam(int param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTexEnvTargetString	opengl/GLDebugWrapper.java	/^        private static String getTexEnvTargetString(int target) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTexImage2DFormatString	opengl/GLDebugWrapper.java	/^        private static String getTexImage2DFormatString(int format) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTexImage2DInternalFormatString	opengl/GLDebugWrapper.java	/^        private static String getTexImage2DInternalFormatString(int internalformat) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTexImage2DTargetString	opengl/GLDebugWrapper.java	/^        private static String getTexImage2DTargetString(int target) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTexParameterNameString	opengl/GLDebugWrapper.java	/^        private static String getTexParameterNameString(int pname) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTexParameterParamString	opengl/GLDebugWrapper.java	/^        private static String getTexParameterParamString(int param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTexParameterTargetString	opengl/GLDebugWrapper.java	/^        private static String getTexParameterTargetString(int target) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTextEnvNameString	opengl/GLDebugWrapper.java	/^        private static String getTextEnvNameString(int pname) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTextEnvTargetString	opengl/GLDebugWrapper.java	/^        private static String getTextEnvTargetString(int target) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getTexture	nodes/AtlasNode.java	/^    public Texture2D getTexture() {$/;"	m	class:AtlasNode
getTexture	nodes/CocosNode.java	/^        public Texture2D getTexture();$/;"	m	interface:CocosNode.CocosNodeTexture
getTexture	nodes/TextureNode.java	/^    public Texture2D getTexture() {$/;"	m	class:TextureNode
getTexture	opengl/TextureAtlas.java	/^    public Texture2D getTexture() {$/;"	m	class:TextureAtlas
getTexture	particlesystem/ParticleSystem.java	/^    public Texture2D getTexture() {$/;"	m	class:ParticleSystem
getTextureRect	nodes/AtlasSprite.java	/^    public CCRect getTextureRect() {$/;"	m	class:AtlasSprite
getTimeScale	actions/Scheduler.java	/^    public float getTimeScale() {$/;"	m	class:Scheduler
getTotalQuads	opengl/TextureAtlas.java	/^    public int getTotalQuads() {$/;"	m	class:TextureAtlas
getTransformAnchorX	nodes/CocosNode.java	/^    public float getTransformAnchorX() {$/;"	m	class:CocosNode
getTransformAnchorY	nodes/CocosNode.java	/^    public float getTransformAnchorY() {$/;"	m	class:CocosNode
getTranslateInstance	types/CCAffineTransform.java	/^    public static CCAffineTransform getTranslateInstance(double mx, double my) {$/;"	m	class:CCAffineTransform
getTranslateX	types/CCAffineTransform.java	/^    public double getTranslateX() {$/;"	m	class:CCAffineTransform
getTranslateY	types/CCAffineTransform.java	/^    public double getTranslateY() {$/;"	m	class:CCAffineTransform
getType	types/CCAffineTransform.java	/^    public int getType() {$/;"	m	class:CCAffineTransform
getUp	opengl/Camera.java	/^    public void getUp(float x[], float y[], float z[]) {$/;"	m	class:Camera
getUserData	nodes/CocosNode.java	/^    public Object getUserData() {$/;"	m	class:CocosNode
getVertex	opengl/TextureAtlas.java	/^    private float[] getVertex(FloatBuffer src, int index) {$/;"	m	class:TextureAtlas	file:
getVertexPointerTypeString	opengl/GLDebugWrapper.java	/^        private static String getVertexPointerTypeString(int type) {$/;"	m	class:GLDebugWrapper.MyGLImplementation	file:
getVertexZ	nodes/CocosNode.java	/^    public float getVertexZ() {$/;"	m	class:CocosNode
getWidth	layers/ColorLayer.java	/^    public float getWidth() {$/;"	m	class:ColorLayer
getWidth	nodes/CocosNode.java	/^        public float getWidth();$/;"	m	interface:CocosNode.CocosNodeSize
getWidth	nodes/CocosNode.java	/^    public float getWidth() {$/;"	m	class:CocosNode
getWidth	nodes/LabelAtlas.java	/^    public float getWidth() {$/;"	m	class:LabelAtlas
getWidth	nodes/TextureNode.java	/^    public float getWidth() {$/;"	m	class:TextureNode
getWidth	opengl/Texture2D.java	/^    public float getWidth() {$/;"	m	class:Texture2D
getWidth	types/CCSize.java	/^    public float getWidth() {$/;"	m	class:CCSize
getZEye	opengl/Camera.java	/^    public static float getZEye() {$/;"	m	class:Camera
getZOrder	nodes/CocosNode.java	/^    public int getZOrder() {$/;"	m	class:CocosNode
gl	opengl/GLDebugWrapper.java	/^        private GL10 gl;$/;"	f	class:GLDebugWrapper.MyGLImplementation	file:
glActiveTexture	opengl/GLDebugWrapper.java	/^        public void glActiveTexture(int texture) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glAlphaFunc	opengl/GLDebugWrapper.java	/^        public void glAlphaFunc(int func, float ref) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glAlphaFuncx	opengl/GLDebugWrapper.java	/^        public void glAlphaFuncx(int func, int ref) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glBindTexture	opengl/GLDebugWrapper.java	/^        public void glBindTexture(int target, int texture) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glBlendFunc	opengl/GLDebugWrapper.java	/^        public void glBlendFunc(int sfactor, int dfactor) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glClear	opengl/GLDebugWrapper.java	/^        public void glClear(int mask) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glClearColor	opengl/GLDebugWrapper.java	/^        public void glClearColor(float red, float green, float blue, float alpha) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glClearColorx	opengl/GLDebugWrapper.java	/^        public void glClearColorx(int red, int green, int blue, int alpha) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glClearDepthf	opengl/GLDebugWrapper.java	/^        public void glClearDepthf(float depth) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glClearDepthx	opengl/GLDebugWrapper.java	/^        public void glClearDepthx(int depth) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glClearStencil	opengl/GLDebugWrapper.java	/^        public void glClearStencil(int s) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glClientActiveTexture	opengl/GLDebugWrapper.java	/^        public void glClientActiveTexture(int texture) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glColor4f	opengl/GLDebugWrapper.java	/^        public void glColor4f(float red, float green, float blue, float alpha) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glColor4x	opengl/GLDebugWrapper.java	/^        public void glColor4x(int red, int green, int blue, int alpha) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glColorMask	opengl/GLDebugWrapper.java	/^        public void glColorMask(boolean red, boolean green, boolean blue, boolean alpha) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glColorPointer	opengl/GLDebugWrapper.java	/^        public void glColorPointer(int size, int type, int stride, Buffer pointer) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glCompressedTexImage2D	opengl/GLDebugWrapper.java	/^        public void glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, Buffer data) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glCompressedTexSubImage2D	opengl/GLDebugWrapper.java	/^        public void glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, Buffer data) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glCopyTexImage2D	opengl/GLDebugWrapper.java	/^        public void glCopyTexImage2D(int target, int level, int internalformat, int x, int y, int width, int height, int border) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glCopyTexSubImage2D	opengl/GLDebugWrapper.java	/^        public void glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glCullFace	opengl/GLDebugWrapper.java	/^        public void glCullFace(int mode) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDeleteTextures	opengl/GLDebugWrapper.java	/^        public void glDeleteTextures(int n, IntBuffer textures) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDeleteTextures	opengl/GLDebugWrapper.java	/^        public void glDeleteTextures(int n, int[] textures, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDepthFunc	opengl/GLDebugWrapper.java	/^        public void glDepthFunc(int func) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDepthMask	opengl/GLDebugWrapper.java	/^        public void glDepthMask(boolean flag) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDepthRangef	opengl/GLDebugWrapper.java	/^        public void glDepthRangef(float zNear, float zFar) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDepthRangex	opengl/GLDebugWrapper.java	/^        public void glDepthRangex(int zNear, int zFar) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDisable	opengl/GLDebugWrapper.java	/^        public void glDisable(int cap) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDisableClientState	opengl/GLDebugWrapper.java	/^        public void glDisableClientState(int array) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDrawArrays	opengl/GLDebugWrapper.java	/^        public void glDrawArrays(int mode, int first, int count) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glDrawElements	opengl/GLDebugWrapper.java	/^        public void glDrawElements(int mode, int count, int type, Buffer indices) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glEnable	opengl/GLDebugWrapper.java	/^        public void glEnable(int cap) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glEnableClientState	opengl/GLDebugWrapper.java	/^        public void glEnableClientState(int array) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFinish	opengl/GLDebugWrapper.java	/^        public void glFinish() {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFlush	opengl/GLDebugWrapper.java	/^        public void glFlush() {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFogf	opengl/GLDebugWrapper.java	/^        public void glFogf(int pname, float param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFogfv	opengl/GLDebugWrapper.java	/^        public void glFogfv(int pname, FloatBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFogfv	opengl/GLDebugWrapper.java	/^        public void glFogfv(int pname, float[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFogx	opengl/GLDebugWrapper.java	/^        public void glFogx(int pname, int param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFogxv	opengl/GLDebugWrapper.java	/^        public void glFogxv(int pname, IntBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFogxv	opengl/GLDebugWrapper.java	/^        public void glFogxv(int pname, int[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFrontFace	opengl/GLDebugWrapper.java	/^        public void glFrontFace(int mode) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFrustumf	opengl/GLDebugWrapper.java	/^        public void glFrustumf(float left, float right, float bottom, float top, float zNear, float zFar) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glFrustumx	opengl/GLDebugWrapper.java	/^        public void glFrustumx(int left, int right, int bottom, int top, int zNear, int zFar) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glGenTextures	opengl/GLDebugWrapper.java	/^        public void glGenTextures(int n, IntBuffer textures) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glGenTextures	opengl/GLDebugWrapper.java	/^        public void glGenTextures(int n, int[] textures, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glGetError	opengl/GLDebugWrapper.java	/^        public int glGetError() {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glGetIntegerv	opengl/GLDebugWrapper.java	/^        public void glGetIntegerv(int pname, IntBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glGetIntegerv	opengl/GLDebugWrapper.java	/^        public void glGetIntegerv(int pname, int[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glGetString	opengl/GLDebugWrapper.java	/^        public String glGetString(int name) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glHint	opengl/GLDebugWrapper.java	/^        public void glHint(int target, int mode) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightModelf	opengl/GLDebugWrapper.java	/^        public void glLightModelf(int pname, float param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightModelfv	opengl/GLDebugWrapper.java	/^        public void glLightModelfv(int pname, FloatBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightModelfv	opengl/GLDebugWrapper.java	/^        public void glLightModelfv(int pname, float[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightModelx	opengl/GLDebugWrapper.java	/^        public void glLightModelx(int pname, int param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightModelxv	opengl/GLDebugWrapper.java	/^        public void glLightModelxv(int pname, IntBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightModelxv	opengl/GLDebugWrapper.java	/^        public void glLightModelxv(int pname, int[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightf	opengl/GLDebugWrapper.java	/^        public void glLightf(int light, int pname, float param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightfv	opengl/GLDebugWrapper.java	/^        public void glLightfv(int light, int pname, FloatBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightfv	opengl/GLDebugWrapper.java	/^        public void glLightfv(int light, int pname, float[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightx	opengl/GLDebugWrapper.java	/^        public void glLightx(int light, int pname, int param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightxv	opengl/GLDebugWrapper.java	/^        public void glLightxv(int light, int pname, IntBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLightxv	opengl/GLDebugWrapper.java	/^        public void glLightxv(int light, int pname, int[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLineWidth	opengl/GLDebugWrapper.java	/^        public void glLineWidth(float width) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLineWidthx	opengl/GLDebugWrapper.java	/^        public void glLineWidthx(int width) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLoadIdentity	opengl/GLDebugWrapper.java	/^        public void glLoadIdentity() {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLoadMatrixf	opengl/GLDebugWrapper.java	/^        public void glLoadMatrixf(FloatBuffer m) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLoadMatrixf	opengl/GLDebugWrapper.java	/^        public void glLoadMatrixf(float[] m, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLoadMatrixx	opengl/GLDebugWrapper.java	/^        public void glLoadMatrixx(IntBuffer m) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLoadMatrixx	opengl/GLDebugWrapper.java	/^        public void glLoadMatrixx(int[] m, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glLogicOp	opengl/GLDebugWrapper.java	/^        public void glLogicOp(int opcode) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMaterialf	opengl/GLDebugWrapper.java	/^        public void glMaterialf(int face, int pname, float param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMaterialfv	opengl/GLDebugWrapper.java	/^        public void glMaterialfv(int face, int pname, FloatBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMaterialfv	opengl/GLDebugWrapper.java	/^        public void glMaterialfv(int face, int pname, float[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMaterialx	opengl/GLDebugWrapper.java	/^        public void glMaterialx(int face, int pname, int param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMaterialxv	opengl/GLDebugWrapper.java	/^        public void glMaterialxv(int face, int pname, IntBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMaterialxv	opengl/GLDebugWrapper.java	/^        public void glMaterialxv(int face, int pname, int[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMatrixMode	opengl/GLDebugWrapper.java	/^        public void glMatrixMode(int mode) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMultMatrixf	opengl/GLDebugWrapper.java	/^        public void glMultMatrixf(FloatBuffer m) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMultMatrixf	opengl/GLDebugWrapper.java	/^        public void glMultMatrixf(float[] m, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMultMatrixx	opengl/GLDebugWrapper.java	/^        public void glMultMatrixx(IntBuffer m) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMultMatrixx	opengl/GLDebugWrapper.java	/^        public void glMultMatrixx(int[] m, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMultiTexCoord4f	opengl/GLDebugWrapper.java	/^        public void glMultiTexCoord4f(int target, float s, float t, float r, float q) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glMultiTexCoord4x	opengl/GLDebugWrapper.java	/^        public void glMultiTexCoord4x(int target, int s, int t, int r, int q) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glNormal3f	opengl/GLDebugWrapper.java	/^        public void glNormal3f(float nx, float ny, float nz) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glNormal3x	opengl/GLDebugWrapper.java	/^        public void glNormal3x(int nx, int ny, int nz) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glNormalPointer	opengl/GLDebugWrapper.java	/^        public void glNormalPointer(int type, int stride, Buffer pointer) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glOrthof	opengl/GLDebugWrapper.java	/^        public void glOrthof(float left, float right, float bottom, float top, float zNear, float zFar) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glOrthox	opengl/GLDebugWrapper.java	/^        public void glOrthox(int left, int right, int bottom, int top, int zNear, int zFar) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glPixelStorei	opengl/GLDebugWrapper.java	/^        public void glPixelStorei(int pname, int param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glPointSize	opengl/GLDebugWrapper.java	/^        public void glPointSize(float size) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glPointSizex	opengl/GLDebugWrapper.java	/^        public void glPointSizex(int size) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glPolygonOffset	opengl/GLDebugWrapper.java	/^        public void glPolygonOffset(float factor, float units) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glPolygonOffsetx	opengl/GLDebugWrapper.java	/^        public void glPolygonOffsetx(int factor, int units) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glPopMatrix	opengl/GLDebugWrapper.java	/^        public void glPopMatrix() {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glPushMatrix	opengl/GLDebugWrapper.java	/^        public void glPushMatrix() {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glReadPixels	opengl/GLDebugWrapper.java	/^        public void glReadPixels(int x, int y, int width, int height, int format, int type, Buffer pixels) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glRotatef	opengl/GLDebugWrapper.java	/^        public void glRotatef(float angle, float x, float y, float z) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glRotatex	opengl/GLDebugWrapper.java	/^        public void glRotatex(int angle, int x, int y, int z) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glSampleCoverage	opengl/GLDebugWrapper.java	/^        public void glSampleCoverage(float value, boolean invert) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glSampleCoveragex	opengl/GLDebugWrapper.java	/^        public void glSampleCoveragex(int value, boolean invert) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glScalef	opengl/GLDebugWrapper.java	/^        public void glScalef(float x, float y, float z) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glScalex	opengl/GLDebugWrapper.java	/^        public void glScalex(int x, int y, int z) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glScissor	opengl/GLDebugWrapper.java	/^        public void glScissor(int x, int y, int width, int height) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glShadeModel	opengl/GLDebugWrapper.java	/^        public void glShadeModel(int mode) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glStencilFunc	opengl/GLDebugWrapper.java	/^        public void glStencilFunc(int func, int ref, int mask) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glStencilMask	opengl/GLDebugWrapper.java	/^        public void glStencilMask(int mask) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glStencilOp	opengl/GLDebugWrapper.java	/^        public void glStencilOp(int fail, int zfail, int zpass) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexCoordPointer	opengl/GLDebugWrapper.java	/^        public void glTexCoordPointer(int size, int type, int stride, Buffer pointer) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexEnvf	opengl/GLDebugWrapper.java	/^        public void glTexEnvf(int target, int pname, float param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexEnvfv	opengl/GLDebugWrapper.java	/^        public void glTexEnvfv(int target, int pname, FloatBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexEnvfv	opengl/GLDebugWrapper.java	/^        public void glTexEnvfv(int target, int pname, float[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexEnvx	opengl/GLDebugWrapper.java	/^        public void glTexEnvx(int target, int pname, int param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexEnvxv	opengl/GLDebugWrapper.java	/^        public void glTexEnvxv(int target, int pname, IntBuffer params) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexEnvxv	opengl/GLDebugWrapper.java	/^        public void glTexEnvxv(int target, int pname, int[] params, int offset) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexImage2D	opengl/GLDebugWrapper.java	/^        public void glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format, int type, Buffer pixels) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexParameterf	opengl/GLDebugWrapper.java	/^        public void glTexParameterf(int target, int pname, float param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexParameterx	opengl/GLDebugWrapper.java	/^        public void glTexParameterx(int target, int pname, int param) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTexSubImage2D	opengl/GLDebugWrapper.java	/^        public void glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, Buffer pixels) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTranslatef	opengl/GLDebugWrapper.java	/^        public void glTranslatef(float x, float y, float z) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glTranslatex	opengl/GLDebugWrapper.java	/^        public void glTranslatex(int x, int y, int z) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glVertexPointer	opengl/GLDebugWrapper.java	/^        public void glVertexPointer(int size, int type, int stride, Buffer pointer) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
glViewport	opengl/GLDebugWrapper.java	/^        public void glViewport(int x, int y, int width, int height) {$/;"	m	class:GLDebugWrapper.MyGLImplementation
global_synced	utils/FloatBufferProvider.java	/^	private static FloatBufferProvider global_synced = new FloatBufferProvider();$/;"	f	class:FloatBufferProvider	file:
gluLookAt	opengl/GLU.java	/^    public static void gluLookAt(GL10 gl,$/;"	m	class:GLU
gluPerspective	opengl/GLU.java	/^    public static void gluPerspective(GL10 gl, float fovy, float aspect, float zNear, float zFar)$/;"	m	class:GLU
gravity	particlesystem/ParticleSystem.java	/^    protected CCPoint gravity = CCPoint.zero();$/;"	f	class:ParticleSystem
grid	actions/grid/Grid3DAction.java	/^    public GridBase grid() {$/;"	m	class:Grid3DAction
grid	actions/grid/GridAction.java	/^    public abstract GridBase grid();$/;"	m	class:GridAction
gridSize	actions/grid/GridAction.java	/^    CCGridSize gridSize;$/;"	f	class:GridAction
gridSize	grid/GridBase.java	/^    protected CCGridSize gridSize;$/;"	f	class:GridBase
grid_	nodes/CocosNode.java	/^    private GridBase grid_;$/;"	f	class:CocosNode	file:
grossini	tests/EaseActionsTest.java	/^        Sprite grossini;$/;"	f	class:EaseActionsTest.SpriteDemo
grossini	tests/SpritesTest.java	/^        Sprite grossini;$/;"	f	class:SpritesTest.SpriteDemo
hasPremultipliedAlpha	opengl/Texture2D.java	/^    public boolean hasPremultipliedAlpha() {$/;"	m	class:Texture2D
hashCode	types/CCAffineTransform.java	/^    private final HashCode hashCode = new HashCode();$/;"	f	class:HashCode	file:
hashCode	types/CCAffineTransform.java	/^    public final int hashCode() {$/;"	m	class:HashCode
hashCode	types/CCAffineTransform.java	/^    public int hashCode() {$/;"	m	class:CCAffineTransform
height	actions/interval/JumpBy.java	/^    protected float height;$/;"	f	class:JumpBy
height	opengl/TGA.java	/^        public int height;$/;"	f	class:TGA.ImageTGA
height	types/CCRect.java	/^    public static float height(final CCRect aRect) {$/;"	m	class:CCRect
height	types/CCSize.java	/^    public float width, height;$/;"	f	class:CCSize
height_	nodes/Director.java	/^    private int width_, height_;$/;"	f	class:Director	file:
hideOutShowIn	transitions/TransitionScene.java	/^    public void hideOutShowIn() {$/;"	m	class:TransitionScene
hz	box2d/Settings.java	/^    public float hz;$/;"	f	class:Settings
id	particlesystem/ParticleSystem.java	/^    protected int id;$/;"	f	class:ParticleSystem
identity	types/CCAffineTransform.java	/^    public static CCAffineTransform identity() {$/;"	m	class:CCAffineTransform
imageData	opengl/TGA.java	/^        public byte[] imageData;$/;"	f	class:TGA.ImageTGA
inScene	transitions/TransitionScene.java	/^    protected Scene inScene;$/;"	f	class:TransitionScene
inSceneOnTop	transitions/TransitionScene.java	/^    protected boolean inSceneOnTop;$/;"	f	class:TransitionScene
indexForNewChild	nodes/AtlasSpriteManager.java	/^    private int indexForNewChild(int z) {$/;"	m	class:AtlasSpriteManager	file:
indices	grid/Grid3D.java	/^    ShortBuffer indices;$/;"	f	class:Grid3D
indices	grid/TiledGrid3D.java	/^    ShortBuffer indices;$/;"	f	class:TiledGrid3D
indices	opengl/TextureAtlas.java	/^    private ShortBuffer indices;$/;"	f	class:TextureAtlas	file:
init	opengl/Texture2D.java	/^    private void init(Bitmap image, CCSize imageSize) {$/;"	m	class:Texture2D	file:
initAnimationDictionary	nodes/AtlasSprite.java	/^    private void initAnimationDictionary() {$/;"	m	class:AtlasSprite	file:
initAnimationDictionary	nodes/Sprite.java	/^    private void initAnimationDictionary() {$/;"	m	class:Sprite	file:
initColorArray	opengl/TextureAtlas.java	/^    public void initColorArray() {$/;"	m	class:TextureAtlas
initGLDefaultValues	nodes/Director.java	/^    private void initGLDefaultValues(GL10 gl) {$/;"	m	class:Director	file:
initIndices	opengl/TextureAtlas.java	/^    public void initIndices() {$/;"	m	class:TextureAtlas
initOpenGLViewWithView	nodes/Director.java	/^    private boolean initOpenGLViewWithView(View view, CCRect rect) {$/;"	m	class:Director	file:
initParticle	particlesystem/ParticleSystem.java	/^    private void initParticle(Particle particle) {$/;"	m	class:ParticleSystem	file:
initScenes	transitions/MoveInBTransition.java	/^    protected void initScenes() {$/;"	m	class:MoveInBTransition
initScenes	transitions/MoveInLTransition.java	/^    protected void initScenes() {$/;"	m	class:MoveInLTransition
initScenes	transitions/MoveInRTransition.java	/^    protected void initScenes() {$/;"	m	class:MoveInRTransition
initScenes	transitions/MoveInTTransition.java	/^    protected void initScenes() {$/;"	m	class:MoveInTTransition
initScenes	transitions/SlideInBTransition.java	/^    protected void initScenes() {$/;"	m	class:SlideInBTransition
initScenes	transitions/SlideInLTransition.java	/^    protected void initScenes() {$/;"	m	class:SlideInLTransition
initScenes	transitions/SlideInRTransition.java	/^    protected void initScenes() {$/;"	m	class:SlideInRTransition
initScenes	transitions/SlideInTTransition.java	/^    protected void initScenes() {$/;"	m	class:SlideInTTransition
insertChild	nodes/CocosNode.java	/^    private void insertChild(CocosNode node, int z) {$/;"	m	class:CocosNode	file:
insertInAtlas	nodes/AtlasSprite.java	/^    public void insertInAtlas(int index) {$/;"	m	class:AtlasSprite
insertQuad	opengl/TextureAtlas.java	/^    public void insertQuad(CCQuad2 texCoords, CCQuad3 vertexCoords, int index) {$/;"	m	class:TextureAtlas
insertQuad	opengl/TextureAtlas.java	/^    public void insertQuad(int from, int to) {$/;"	m	class:TextureAtlas
interval	actions/Scheduler.java	/^        public float interval;$/;"	f	class:Scheduler.Timer
inverseTransform	types/CCAffineTransform.java	/^    public CCPoint inverseTransform(CCPoint src, CCPoint dst)$/;"	m	class:CCAffineTransform
inverseTransform	types/CCAffineTransform.java	/^    public void inverseTransform(double[] src, int srcOff, double[] dst, int dstOff, int length)$/;"	m	class:CCAffineTransform
inverse_	nodes/CocosNode.java	/^    private CCAffineTransform transform_, inverse_;$/;"	f	class:CocosNode	file:
invocation	actions/Scheduler.java	/^        private Method invocation;$/;"	f	class:Scheduler.Timer	file:
invocation	actions/instant/CallFunc.java	/^    protected Method invocation;$/;"	f	class:CallFunc
invocation	menus/MenuItem.java	/^    private Method invocation;$/;"	f	class:MenuItem	file:
isAccelerometerEnabled	layers/Layer.java	/^    public boolean isAccelerometerEnabled()$/;"	m	class:Layer
isAccelerometerEnabled_	layers/Layer.java	/^    protected boolean isAccelerometerEnabled_;$/;"	f	class:Layer
isActive	grid/GridBase.java	/^    public boolean isActive() {$/;"	m	class:GridBase
isDirty	nodes/AtlasSprite.java	/^    public boolean isDirty() {$/;"	m	class:AtlasSprite
isDirty	opengl/Camera.java	/^    public boolean isDirty() {$/;"	m	class:Camera
isDone	actions/base/Action.java	/^    public boolean isDone() {$/;"	m	class:Action
isDone	actions/base/RepeatForever.java	/^    public boolean isDone() {$/;"	m	class:RepeatForever
isDone	actions/base/Speed.java	/^    public boolean isDone() {$/;"	m	class:Speed
isDone	actions/instant/InstantAction.java	/^    public boolean isDone() {$/;"	m	class:InstantAction
isDone	actions/interval/IntervalAction.java	/^    public boolean isDone() {$/;"	m	class:IntervalAction
isDone	actions/interval/Repeat.java	/^    public boolean isDone() {$/;"	m	class:Repeat
isEmptyRect	types/CCRect.java	/^    public static boolean isEmptyRect(CCRect aRect) {$/;"	m	class:CCRect
isEnabled	menus/MenuItem.java	/^    public boolean isEnabled() {$/;"	m	class:MenuItem
isEnabled_	menus/MenuItem.java	/^    protected boolean isEnabled_;$/;"	f	class:MenuItem
isFrameDisplayed	nodes/AtlasSprite.java	/^    public boolean isFrameDisplayed(Object frame) {$/;"	m	class:AtlasSprite
isFrameDisplayed	nodes/CocosNode.java	/^        public boolean isFrameDisplayed(Object frame);$/;"	m	interface:CocosNode.CocosNodeFrames
isFrameDisplayed	nodes/Sprite.java	/^    public boolean isFrameDisplayed(Object frame) {$/;"	m	class:Sprite
isFull	particlesystem/ParticleSystem.java	/^    public boolean isFull() {$/;"	m	class:ParticleSystem
isIdentity	types/CCAffineTransform.java	/^    public boolean isIdentity() {$/;"	m	class:CCAffineTransform
isInverseDirty_	nodes/CocosNode.java	/^    private boolean isTransformDirty_, isInverseDirty_;$/;"	f	class:CocosNode	file:
isOpenGLAttached	nodes/Director.java	/^    public boolean isOpenGLAttached() {$/;"	m	class:Director
isRunning	nodes/CocosNode.java	/^    public boolean isRunning() {$/;"	m	class:CocosNode
isRunning_	nodes/CocosNode.java	/^    private boolean isRunning_;$/;"	f	class:CocosNode	file:
isSelected_	menus/MenuItem.java	/^    protected boolean isSelected_;$/;"	f	class:MenuItem
isTouchEnabled	layers/Layer.java	/^    public boolean isTouchEnabled()$/;"	m	class:Layer
isTouchEnabled_	layers/Layer.java	/^    protected boolean isTouchEnabled_;$/;"	f	class:Layer
isTransformDirty_	nodes/CocosNode.java	/^    private boolean isTransformDirty_, isInverseDirty_;$/;"	f	class:CocosNode	file:
isVisible	nodes/CocosNode.java	/^    public boolean isVisible() {$/;"	m	class:CocosNode
item	menus/MenuItemAtlasFont.java	/^    public static MenuItemAtlasFont item(String value, String charMapFile, int itemWidth, int itemHeight, char startCharMap) {$/;"	m	class:MenuItemAtlasFont
item	menus/MenuItemAtlasFont.java	/^    public static MenuItemAtlasFont item(String value, String charMapFile, int itemWidth, int itemHeight, char startCharMap, CocosNode rec, String cb) {$/;"	m	class:MenuItemAtlasFont
item	menus/MenuItemAtlasSprite.java	/^    public static MenuItemAtlasSprite item(AtlasSprite normalSprite, AtlasSprite selectedSprite, AtlasSprite disabledSprite, CocosNode target, String selector) {$/;"	m	class:MenuItemAtlasSprite
item	menus/MenuItemFont.java	/^    public static MenuItemFont item(String value) {$/;"	m	class:MenuItemFont
item	menus/MenuItemFont.java	/^    public static MenuItemFont item(String value, CocosNode rec, String cb) {$/;"	m	class:MenuItemFont
item	menus/MenuItemImage.java	/^    public static MenuItemImage item(String normalI, String selectedI, String disabledI, CocosNode t, String sel) {$/;"	m	class:MenuItemImage
item	menus/MenuItemImage.java	/^    public static MenuItemImage item(String value, String value2) {$/;"	m	class:MenuItemImage
item	menus/MenuItemImage.java	/^    public static MenuItemImage item(String value, String value2, CocosNode t, String s) {$/;"	m	class:MenuItemImage
item	menus/MenuItemImage.java	/^    public static MenuItemImage item(String value, String value2, String value3) {$/;"	m	class:MenuItemImage
item	menus/MenuItemLabel.java	/^    public static MenuItemLabel item(CocosNodeLabel label, CocosNode target, String selector) {$/;"	m	class:MenuItemLabel
item	menus/MenuItemSprite.java	/^    public static MenuItemSprite item(CocosNode normalSprite, CocosNode selectedSprite, CocosNode disabledSprite) {$/;"	m	class:MenuItemSprite
item	menus/MenuItemSprite.java	/^    public static MenuItemSprite item(CocosNode normalSprite, CocosNode selectedSprite, CocosNode disabledSprite, CocosNode target, String selector) {$/;"	m	class:MenuItemSprite
item	menus/MenuItemToggle.java	/^    public static MenuItemToggle item(CocosNode target, String selector, MenuItem... items) {$/;"	m	class:MenuItemToggle
itemForTouch	menus/Menu.java	/^    private MenuItem itemForTouch(MotionEvent event) {$/;"	m	class:Menu	file:
itemHeight	nodes/AtlasNode.java	/^    protected int itemHeight;$/;"	f	class:AtlasNode
itemWidth	nodes/AtlasNode.java	/^    protected int itemWidth;$/;"	f	class:AtlasNode
itemsPerColumn	nodes/AtlasNode.java	/^    protected int itemsPerColumn;$/;"	f	class:AtlasNode
itemsPerRow	nodes/AtlasNode.java	/^    protected int itemsPerRow;$/;"	f	class:AtlasNode
itemsToRender	nodes/TileMapAtlas.java	/^    private int itemsToRender;$/;"	f	class:TileMapAtlas	file:
jumps	actions/interval/JumpBy.java	/^    protected int jumps;$/;"	f	class:JumpBy
kActionTagInvalid	actions/base/Action.java	/^        public final int kActionTagInvalid = -1;$/;"	f	interface:Action.CocosActionTag
kCurrentItem	menus/MenuItem.java	/^    public static final int kCurrentItem = 0xc0c05001;$/;"	f	class:MenuItem
kDefaultFPS	nodes/Director.java	/^    private static final double kDefaultFPS = 60.0f;    \/\/ 60 frames per second$/;"	f	class:Director	file:
kDefaultPadding	menus/Menu.java	/^    public static final int kDefaultPadding = 5;$/;"	f	class:Menu
kEventHandled	events/TouchDispatcher.java	/^    public static final boolean kEventHandled = true;$/;"	f	class:TouchDispatcher
kEventIgnored	events/TouchDispatcher.java	/^    public static final boolean kEventIgnored = false;$/;"	f	class:TouchDispatcher
kIndexNotInitialized	nodes/AtlasSprite.java	/^    public static final int kIndexNotInitialized = -1;$/;"	f	class:AtlasSprite
kItemSize	menus/MenuItem.java	/^    public static final int kItemSize = 32;$/;"	f	class:MenuItem
kMaxTextureSize	opengl/Texture2D.java	/^    public static final int kMaxTextureSize = 1024;$/;"	f	class:Texture2D
kMenuStateTrackingTouch	menus/Menu.java	/^        kMenuStateTrackingTouch$/;"	e	enum:Menu.MenuState	file:
kMenuStateWaiting	menus/Menu.java	/^        kMenuStateWaiting,$/;"	e	enum:Menu.MenuState	file:
kOrientationDownOver	transitions/TransitionScene.java	/^        public static int kOrientationDownOver = 1;$/;"	f	interface:TransitionScene.Orientation
kOrientationLeftOver	transitions/TransitionScene.java	/^        public static int kOrientationLeftOver = 0;$/;"	f	interface:TransitionScene.Orientation
kOrientationRightOver	transitions/TransitionScene.java	/^        public static int kOrientationRightOver = 1;$/;"	f	interface:TransitionScene.Orientation
kOrientationUpOver	transitions/TransitionScene.java	/^        public static int kOrientationUpOver = 0;$/;"	f	interface:TransitionScene.Orientation
kPositionTypeFree	particlesystem/ParticleSystem.java	/^    public static final int kPositionTypeFree = 1;$/;"	f	class:ParticleSystem
kPositionTypeGrouped	particlesystem/ParticleSystem.java	/^    public static final int kPositionTypeGrouped = 2;$/;"	f	class:ParticleSystem
kSceneFade	transitions/TransitionScene.java	/^    protected static final int kSceneFade = 0xFADEFADE;$/;"	f	class:TransitionScene
kTagAction1	tests/EaseActionsTest.java	/^    static final int kTagAction1 = 1;$/;"	f	class:EaseActionsTest
kTagAction2	tests/EaseActionsTest.java	/^    static final int kTagAction2 = 2;$/;"	f	class:EaseActionsTest
kTagAnimation1	tests/AtlasSpriteTest.java	/^        public static final int kTagAnimation1 = 1;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagAnimation1	tests/AtlasTest.java	/^    public static final int kTagAnimation1 = 1;$/;"	f	class:AtlasTest
kTagAnimation1	tests/Box2DTest.java	/^            static final int kTagAnimation1 = 1;$/;"	f	class:Box2DTest.Box2DTestLayer
kTagAnimationDance	tests/SpritesTest.java	/^    public static final int kTagAnimationDance = 1;$/;"	f	class:SpritesTest
kTagEmitter	tests/ParticleTest.java	/^        static final int kTagEmitter = 2;$/;"	f	class:ParticleTest.DemoExplosion
kTagEmitter	tests/ParticleTest.java	/^        static final int kTagEmitter = 2;$/;"	f	class:ParticleTest.DemoFire
kTagEmitter	tests/ParticleTest.java	/^        static final int kTagEmitter = 2;$/;"	f	class:ParticleTest.DemoFirework
kTagGrossini	tests/ParallaxTest.java	/^        static final int kTagGrossini = 2;$/;"	f	class:ParallaxTest.ParallaxDemo
kTagLabel	tests/MotionStreakTest.java	/^    public static final int kTagLabel = 1;$/;"	f	class:MotionStreakTest
kTagLabelAtlas	tests/ParticleTest.java	/^        static final int kTagLabelAtlas = 1;$/;"	f	class:ParticleTest.DemoExplosion
kTagLabelAtlas	tests/ParticleTest.java	/^        static final int kTagLabelAtlas = 1;$/;"	f	class:ParticleTest.DemoFire
kTagLabelAtlas	tests/ParticleTest.java	/^        static final int kTagLabelAtlas = 1;$/;"	f	class:ParticleTest.DemoFirework
kTagLabelAtlas	tests/ParticleTest.java	/^        static final int kTagLabelAtlas = 1;$/;"	f	class:ParticleTest.ParticleDemo
kTagMenu	tests/MenuTest.java	/^    public static final int kTagMenu = 1;$/;"	f	class:MenuTest
kTagMenu0	tests/MenuTest.java	/^    public static final int kTagMenu0 = 0;$/;"	f	class:MenuTest
kTagMenu1	tests/MenuTest.java	/^    public static final int kTagMenu1 = 1;$/;"	f	class:MenuTest
kTagNode	tests/ParallaxTest.java	/^        static final int kTagNode = 1;$/;"	f	class:ParallaxTest.ParallaxDemo
kTagSlider	tests/EaseActionsTest.java	/^    static final int kTagSlider = 3;$/;"	f	class:EaseActionsTest
kTagSprite	tests/ClickAndMoveTest.java	/^        static final int kTagSprite = 1;$/;"	f	class:ClickAndMoveTest.MainLayer
kTagSprite1	tests/AtlasSpriteTest.java	/^        public static final int kTagSprite1 = 1;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagSprite1	tests/AtlasTest.java	/^        kTagSprite1,$/;"	e	enum:AtlasTest.TagSprites	file:
kTagSprite1	tests/CocosNodeTest.java	/^    public static final int kTagSprite1 = 1;$/;"	f	class:CocosNodeTest
kTagSprite1	tests/MotionStreakTest.java	/^    public static final int kTagSprite1 = 1;$/;"	f	class:MotionStreakTest
kTagSprite2	tests/AtlasSpriteTest.java	/^        public static final int kTagSprite2 = 2;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagSprite2	tests/AtlasTest.java	/^        kTagSprite2,$/;"	e	enum:AtlasTest.TagSprites	file:
kTagSprite2	tests/CocosNodeTest.java	/^    public static final int kTagSprite2 = 2;$/;"	f	class:CocosNodeTest
kTagSprite2	tests/MotionStreakTest.java	/^    public static final int kTagSprite2 = 2;$/;"	f	class:MotionStreakTest
kTagSprite3	tests/AtlasSpriteTest.java	/^        public static final int kTagSprite3 = 3;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagSprite3	tests/AtlasTest.java	/^        kTagSprite3,$/;"	e	enum:AtlasTest.TagSprites	file:
kTagSprite3	tests/CocosNodeTest.java	/^    public static final int kTagSprite3 = 3;$/;"	f	class:CocosNodeTest
kTagSprite4	tests/AtlasSpriteTest.java	/^        public static final int kTagSprite4 = 4;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagSprite4	tests/AtlasTest.java	/^        kTagSprite4,$/;"	e	enum:AtlasTest.TagSprites	file:
kTagSprite5	tests/AtlasSpriteTest.java	/^        public static final int kTagSprite5 = 5;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagSprite5	tests/AtlasTest.java	/^        kTagSprite5,$/;"	e	enum:AtlasTest.TagSprites	file:
kTagSprite6	tests/AtlasSpriteTest.java	/^        public static final int kTagSprite6 = 6;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagSprite6	tests/AtlasTest.java	/^        kTagSprite6,$/;"	e	enum:AtlasTest.TagSprites	file:
kTagSprite7	tests/AtlasSpriteTest.java	/^        public static final int kTagSprite7 = 7;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagSprite7	tests/AtlasTest.java	/^        kTagSprite7,$/;"	e	enum:AtlasTest.TagSprites	file:
kTagSprite8	tests/AtlasSpriteTest.java	/^        public static final int kTagSprite8 = 8;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagSprite8	tests/AtlasTest.java	/^        kTagSprite8,$/;"	e	enum:AtlasTest.TagSprites	file:
kTagSpriteManager	tests/AtlasSpriteTest.java	/^        public static final int kTagSpriteManager = 1;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagSpriteManager	tests/AtlasTest.java	/^    public static final int kTagSpriteManager = 1;$/;"	f	class:AtlasTest
kTagSpriteManager	tests/Box2DTest.java	/^            static final int kTagSpriteManager = 1;$/;"	f	class:Box2DTest.Box2DTestLayer
kTagSpriteManager	tests/JBox2DTest.java	/^        public static final int kTagSpriteManager = 1;$/;"	f	class:JBox2DTest.JBox2DTestLayer
kTagSpriteManager	tests/MenuTest.java	/^    public static final int kTagSpriteManager = 1;$/;"	f	class:MenuTest
kTagTileMap	tests/AtlasSpriteTest.java	/^        public static final int kTagTileMap = 1;$/;"	f	class:AtlasSpriteTest.AtlasSpriteDemo
kTagTileMap	tests/AtlasTest.java	/^    public static final int kTagTileMap = 1;$/;"	f	class:AtlasTest
kTagTileMap	tests/Box2DTest.java	/^            static final int kTagTileMap = 1;$/;"	f	class:Box2DTest.Box2DTestLayer
kTextureSize	grid/GridBase.java	/^    public static final int kTextureSize = 512;$/;"	f	class:GridBase
kZoomActionTag	menus/MenuItem.java	/^    public static final int kZoomActionTag = 0xc0c05002;$/;"	f	class:MenuItem
k_maxContactPoints	box2d/Test.java	/^    public static final int k_maxContactPoints = 2048;$/;"	f	class:Test
kathia	tests/EaseActionsTest.java	/^        Sprite kathia;$/;"	f	class:EaseActionsTest.SpriteDemo
label	nodes/Label.java	/^    public static Label label(String string, String fontname, float fontsize) {$/;"	m	class:Label
label	nodes/LabelAtlas.java	/^    public static LabelAtlas label(String theString, String charmapfile, int w, int h, char c) {$/;"	m	class:LabelAtlas
label	tests/AtlasTest.java	/^        LabelAtlas label;$/;"	f	class:AtlasTest.Atlas2
label_	menus/MenuItemFont.java	/^    private Label label_;$/;"	f	class:MenuItemFont	file:
label_	menus/MenuItemLabel.java	/^    private CocosNodeLabel label_;$/;"	f	class:MenuItemLabel	file:
last	actions/interval/Sequence.java	/^    private int last;$/;"	f	class:Sequence	file:
lastPosition	nodes/ParallaxNode.java	/^	private CCPoint lastPosition;$/;"	f	class:ParallaxNode	file:
lastUpdate	nodes/Director.java	/^    private long lastUpdate;$/;"	f	class:Director	file:
layer	tests/SpritesTest.java	/^        public static Layer layer() {$/;"	m	class:SpritesTest.SpriteReverse
layer	tests/SpritesTest.java	/^        public static Layer layer() {$/;"	m	class:SpritesTest.SpriteSequence
layers	layers/MultiplexLayer.java	/^    private ArrayList<Layer> layers;$/;"	f	class:MultiplexLayer	file:
life	particlesystem/ParticleSystem.java	/^        float life;$/;"	f	class:ParticleSystem.Particle
life	particlesystem/ParticleSystem.java	/^    protected float life;$/;"	f	class:ParticleSystem
lifeVar	particlesystem/ParticleSystem.java	/^    protected float lifeVar;$/;"	f	class:ParticleSystem
load	opengl/TGA.java	/^    public static ImageTGA load(InputStream is) throws IOException {$/;"	m	class:TGA
loadHeader	opengl/TGA.java	/^    private static void loadHeader(InputStream f, ImageTGA info) throws IOException {$/;"	m	class:TGA	file:
loadImageData	opengl/TGA.java	/^    private static void loadImageData(InputStream f, ImageTGA info) throws IOException {$/;"	m	class:TGA	file:
loadRLEImageData	opengl/TGA.java	/^    private static void loadRLEImageData(InputStream f, ImageTGA info) throws IOException {$/;"	m	class:TGA	file:
loadTGAfile	nodes/TileMapAtlas.java	/^    private void loadTGAfile(String file) {$/;"	m	class:TileMapAtlas	file:
loadTexture	opengl/Texture2D.java	/^    public void loadTexture(GL10 gl) {$/;"	m	class:Texture2D
locate	opengl/Camera.java	/^    public void locate(GL10 gl) {$/;"	m	class:Camera
m00	types/CCAffineTransform.java	/^    public double m00;$/;"	f	class:CCAffineTransform
m01	types/CCAffineTransform.java	/^    public double m01;$/;"	f	class:CCAffineTransform
m02	types/CCAffineTransform.java	/^    public double m02;$/;"	f	class:CCAffineTransform
m10	types/CCAffineTransform.java	/^    public double m10;$/;"	f	class:CCAffineTransform
m11	types/CCAffineTransform.java	/^    public double m11;$/;"	f	class:CCAffineTransform
m12	types/CCAffineTransform.java	/^    public double m12;$/;"	f	class:CCAffineTransform
mBitmap	opengl/Texture2D.java	/^    private Bitmap mBitmap;$/;"	f	class:Texture2D	file:
mColors	nodes/Ribbon.java	/^        ByteBuffer mColors;$/;"	f	class:Ribbon.RibbonSegment
mColors	particlesystem/ParticleSystem.java	/^    private FloatBuffer mColors;$/;"	f	class:ParticleSystem	file:
mCoordinates	nodes/Ribbon.java	/^        FloatBuffer mCoordinates;$/;"	f	class:Ribbon.RibbonSegment
mCoordinates	opengl/Texture2D.java	/^    private FloatBuffer mCoordinates;$/;"	f	class:Texture2D	file:
mCurTime	nodes/Ribbon.java	/^    float mCurTime;$/;"	f	class:Ribbon
mDelta	nodes/Ribbon.java	/^    float mDelta;$/;"	f	class:Ribbon
mDispatcher	opengl/CCGLSurfaceView.java	/^    private TouchDispatcher mDispatcher;$/;"	f	class:CCGLSurfaceView	file:
mFadeTime	nodes/Ribbon.java	/^    float mFadeTime;$/;"	f	class:Ribbon
mGLSurfaceView	tests/AtlasSpriteTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:AtlasSpriteTest	file:
mGLSurfaceView	tests/AtlasTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:AtlasTest	file:
mGLSurfaceView	tests/Box2DTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:Box2DTest	file:
mGLSurfaceView	tests/ClickAndMoveTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:ClickAndMoveTest	file:
mGLSurfaceView	tests/CocosNodeTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:CocosNodeTest	file:
mGLSurfaceView	tests/DrawPrimitivesTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:DrawPrimitivesTest	file:
mGLSurfaceView	tests/EaseActionsTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:EaseActionsTest	file:
mGLSurfaceView	tests/JBox2DTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:JBox2DTest	file:
mGLSurfaceView	tests/MenuTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:MenuTest	file:
mGLSurfaceView	tests/MotionStreakTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:MotionStreakTest	file:
mGLSurfaceView	tests/ParallaxTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:ParallaxTest	file:
mGLSurfaceView	tests/ParticleTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:ParticleTest	file:
mGLSurfaceView	tests/RotateWorldTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:RotateWorldTest	file:
mGLSurfaceView	tests/SceneTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:SceneTest	file:
mGLSurfaceView	tests/SpritesTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:SpritesTest	file:
mGLSurfaceView	tests/TransitionsTest.java	/^    private CCGLSurfaceView mGLSurfaceView;$/;"	f	class:TransitionsTest	file:
mHeight	opengl/Texture2D.java	/^    private int mWidth, mHeight;$/;"	f	class:Texture2D	file:
mLastLocation	nodes/MotionStreak.java	/^    CCPoint mLastLocation;$/;"	f	class:MotionStreak
mLastLocation	nodes/Ribbon.java	/^    CCPoint mLastLocation;$/;"	f	class:Ribbon
mLastPoint1	nodes/Ribbon.java	/^    CCPoint mLastPoint1;$/;"	f	class:Ribbon
mLastPoint2	nodes/Ribbon.java	/^    CCPoint mLastPoint2;$/;"	f	class:Ribbon
mLastSign	nodes/Ribbon.java	/^    float mLastSign;$/;"	f	class:Ribbon
mLastWidth	nodes/Ribbon.java	/^    float mLastWidth;$/;"	f	class:Ribbon
mPastFirstPoint	nodes/Ribbon.java	/^    boolean mPastFirstPoint;$/;"	f	class:Ribbon
mPointSizes	particlesystem/ParticleSystem.java	/^    private FloatBuffer mPointSizes;$/;"	f	class:ParticleSystem	file:
mRatio	box2d/GLESDebugDraw.java	/^    float mRatio;$/;"	f	class:GLESDebugDraw
mRenderer	opengl/CCGLSurfaceView.java	/^    private Director mRenderer;$/;"	f	class:CCGLSurfaceView	file:
mSegThreshold	nodes/MotionStreak.java	/^    float mSegThreshold;$/;"	f	class:MotionStreak
mSegments	nodes/Ribbon.java	/^    ArrayList<RibbonSegment> mSegments;$/;"	f	class:Ribbon
mSize	opengl/Texture2D.java	/^    private CCSize mSize;$/;"	f	class:Texture2D	file:
mTexVPos	nodes/Ribbon.java	/^    float mTexVPos;$/;"	f	class:Ribbon
mTranslucentBackground	nodes/Director.java	/^    private boolean mTranslucentBackground = false;$/;"	f	class:Director	file:
mVertCount	nodes/Ribbon.java	/^    int mVertCount;$/;"	f	class:Ribbon
mVertices	nodes/Ribbon.java	/^        FloatBuffer mVertices;$/;"	f	class:Ribbon.RibbonSegment
mVertices	opengl/Texture2D.java	/^    private FloatBuffer mVertices;$/;"	f	class:Texture2D	file:
mVertices	particlesystem/ParticleSystem.java	/^    private FloatBuffer mVertices;$/;"	f	class:ParticleSystem	file:
mWidth	nodes/MotionStreak.java	/^    float mWidth;$/;"	f	class:MotionStreak
mWidth	opengl/Texture2D.java	/^    private int mWidth, mHeight;$/;"	f	class:Texture2D	file:
m_bomb	box2d/Test.java	/^    protected BBBody m_bomb;$/;"	f	class:Test
m_bombSpawnPoint	box2d/Test.java	/^    protected BBVec2 m_bombSpawnPoint;$/;"	f	class:Test
m_bombSpawning	box2d/Test.java	/^    protected boolean m_bombSpawning;$/;"	f	class:Test
m_debugDraw	box2d/Test.java	/^    protected GLESDebugDraw m_debugDraw;$/;"	f	class:Test
m_debugDraw	tests/Box2DTest.java	/^        GLESDebugDraw m_debugDraw;$/;"	f	class:Box2DTest.Box2DTestLayer
m_destructionListener	box2d/Test.java	/^    protected DestructionListener m_destructionListener;$/;"	f	class:Test
m_groundBody	box2d/Test.java	/^    protected BBBody m_groundBody;$/;"	f	class:Test
m_mouseJoint	box2d/Test.java	/^    public BBMouseJoint m_mouseJoint;$/;"	f	class:Test
m_mouseWorld	box2d/Test.java	/^    protected BBVec2 m_mouseWorld;$/;"	f	class:Test
m_pointCount	box2d/Test.java	/^    protected int m_pointCount;$/;"	f	class:Test
m_points	box2d/Test.java	/^    protected ContactPoint[] m_points = new ContactPoint[k_maxContactPoints];$/;"	f	class:Test
m_stepCount	box2d/Test.java	/^    protected int m_stepCount;$/;"	f	class:Test
m_textLine	box2d/Test.java	/^    protected int m_textLine;$/;"	f	class:Test
m_world	box2d/Test.java	/^    public BBWorld m_world;$/;"	f	class:Test
m_worldAABB	box2d/Test.java	/^    protected BBAABB m_worldAABB;$/;"	f	class:Test
magFilter	types/CCTexParams.java	/^    public int magFilter;$/;"	f	class:CCTexParams
make	types/CCPoint.java	/^    public static CCPoint make(float x, float y) {$/;"	m	class:CCPoint
make	types/CCRect.java	/^    public static CCRect make(final CCPoint origin, final CCSize size) {$/;"	m	class:CCRect
make	types/CCRect.java	/^    public static CCRect make(float x, float y, float w, float h) {$/;"	m	class:CCRect
make	types/CCSize.java	/^    public static CCSize make(float w, float h) {$/;"	m	class:CCSize
makeFloatBuffer	utils/FloatBufferProvider.java	/^    public static FloatBuffer makeFloatBuffer(float[] arr) {$/;"	m	class:FloatBufferProvider
mapStartChar	nodes/LabelAtlas.java	/^    char mapStartChar;$/;"	f	class:LabelAtlas
maxS	opengl/Texture2D.java	/^    public float maxS() {$/;"	m	class:Texture2D
maxT	opengl/Texture2D.java	/^    public float maxT() {$/;"	m	class:Texture2D
maxX	types/CCRect.java	/^    public static float maxX(final CCRect aRect) {$/;"	m	class:CCRect
maxY	types/CCRect.java	/^    public static float maxY(final CCRect aRect) {$/;"	m	class:CCRect
me	nodes/Director.java	/^    public static Activity me = null;$/;"	f	class:Director
memcopyByte	opengl/TextureAtlas.java	/^    private void memcopyByte(ByteBuffer src, int from, ByteBuffer dst, int to, int size) {$/;"	m	class:TextureAtlas	file:
memcopyFloat	opengl/TextureAtlas.java	/^    private void memcopyFloat(FloatBuffer src, int from, FloatBuffer dst, int to, int size) {$/;"	m	class:TextureAtlas	file:
memcpy	opengl/TGA.java	/^    private static void memcpy(byte[] dst, int to, byte[] src, int from, int len) {$/;"	m	class:TGA	file:
memmoveByte	opengl/TextureAtlas.java	/^    private void memmoveByte(ByteBuffer src, int from, ByteBuffer dst, int to, int size) {$/;"	m	class:TextureAtlas	file:
memmoveFloat	opengl/TextureAtlas.java	/^    private void memmoveFloat(FloatBuffer src, int from, FloatBuffer dst, int to, int size) {$/;"	m	class:TextureAtlas	file:
menu	menus/Menu.java	/^    public static Menu menu(MenuItem... items) {$/;"	m	class:Menu
menuCallback	tests/MenuTest.java	/^        public void menuCallback() {$/;"	m	class:MenuTest.Layer1
menuCallback	tests/MenuTest.java	/^        public void menuCallback() {$/;"	m	class:MenuTest.Layer3
menuCallback2	tests/MenuTest.java	/^        public void menuCallback2() {$/;"	m	class:MenuTest.Layer1
menuCallback2	tests/MenuTest.java	/^        public void menuCallback2() {$/;"	m	class:MenuTest.Layer3
menuCallbackAlign	tests/MenuTest.java	/^        public void menuCallbackAlign() {$/;"	m	class:MenuTest.Layer2
menuCallbackBack	tests/MenuTest.java	/^        public void menuCallbackBack() {$/;"	m	class:MenuTest.Layer2
menuCallbackDisabled	tests/MenuTest.java	/^        public void menuCallbackDisabled() {$/;"	m	class:MenuTest.Layer1
menuCallbackEnable	tests/MenuTest.java	/^        public void menuCallbackEnable() {$/;"	m	class:MenuTest.Layer1
menuCallbackOpacity	tests/MenuTest.java	/^        public void menuCallbackOpacity() {$/;"	m	class:MenuTest.Layer2
methodsToAdd	actions/Scheduler.java	/^    ArrayList<Timer> methodsToAdd;$/;"	f	class:Scheduler
methodsToRemove	actions/Scheduler.java	/^    ArrayList<Timer> methodsToRemove;$/;"	f	class:Scheduler
midX	types/CCRect.java	/^    public static float midX(CCRect aRect) {$/;"	m	class:CCRect
midY	types/CCRect.java	/^    public static float midY(final CCRect aRect) {$/;"	m	class:CCRect
minFilter	types/CCTexParams.java	/^    public int minFilter;$/;"	f	class:CCTexParams
minX	types/CCRect.java	/^    public static float minX(final CCRect aRect) {$/;"	m	class:CCRect
minY	types/CCRect.java	/^    public static float minY(final CCRect aRect) {$/;"	m	class:CCRect
multiply	types/CCAffineTransform.java	/^    CCAffineTransform multiply(CCAffineTransform t1, CCAffineTransform t2) {$/;"	m	class:CCAffineTransform
name	box2d/TestEntry.java	/^    String name;$/;"	f	class:TestEntry
name	nodes/Animation.java	/^    private String name;$/;"	f	class:Animation	file:
name	nodes/Animation.java	/^    public String name() {$/;"	m	class:Animation
name	nodes/AtlasAnimation.java	/^    String name;$/;"	f	class:AtlasAnimation
name	nodes/AtlasAnimation.java	/^    public String name() {$/;"	m	class:AtlasAnimation
name	nodes/CocosNode.java	/^        public String name();$/;"	m	interface:CocosNode.CocosAnimation
name	opengl/Texture2D.java	/^    public int name() {$/;"	m	class:Texture2D
nextAction	tests/AtlasSpriteTest.java	/^    static Layer nextAction() {$/;"	m	class:AtlasSpriteTest
nextAction	tests/AtlasTest.java	/^    static Layer nextAction() {$/;"	m	class:AtlasTest
nextAction	tests/CocosNodeTest.java	/^    static Layer nextAction() {$/;"	m	class:CocosNodeTest
nextAction	tests/DrawPrimitivesTest.java	/^    public static Layer nextAction() {$/;"	m	class:DrawPrimitivesTest
nextAction	tests/EaseActionsTest.java	/^    static Layer nextAction() {$/;"	m	class:EaseActionsTest
nextAction	tests/MotionStreakTest.java	/^    static Layer nextAction() {$/;"	m	class:MotionStreakTest
nextAction	tests/ParallaxTest.java	/^    static Layer nextAction() {$/;"	m	class:ParallaxTest
nextAction	tests/ParticleTest.java	/^    static Layer nextAction() {$/;"	m	class:ParticleTest
nextAction	tests/SpritesTest.java	/^    static Layer nextAction() {$/;"	m	class:SpritesTest
nextCallback	tests/AtlasSpriteTest.java	/^        public void nextCallback() {$/;"	m	class:AtlasSpriteTest.AtlasSpriteDemo
nextCallback	tests/AtlasTest.java	/^        public void nextCallback() {$/;"	m	class:AtlasTest.AtlasDemo
nextCallback	tests/CocosNodeTest.java	/^        public void nextCallback() {$/;"	m	class:CocosNodeTest.TestDemo
nextCallback	tests/DrawPrimitivesTest.java	/^        public void nextCallback() {$/;"	m	class:DrawPrimitivesTest.TestDemo
nextCallback	tests/EaseActionsTest.java	/^        public void nextCallback() {$/;"	m	class:EaseActionsTest.SpriteDemo
nextCallback	tests/MotionStreakTest.java	/^        public void nextCallback() {$/;"	m	class:MotionStreakTest.TestDemo
nextCallback	tests/ParallaxTest.java	/^        public void nextCallback() {$/;"	m	class:ParallaxTest.ParallaxDemo
nextCallback	tests/ParticleTest.java	/^        public void nextCallback() {$/;"	m	class:ParticleTest.ParticleDemo
nextCallback	tests/SpritesTest.java	/^        public void nextCallback() {$/;"	m	class:SpritesTest.SpriteDemo
nextCallback	tests/TransitionsTest.java	/^        public void nextCallback() {$/;"	m	class:TransitionsTest.TestLayer1
nextCallback	tests/TransitionsTest.java	/^        public void nextCallback() {$/;"	m	class:TransitionsTest.TestLayer2
nextDeltaTimeZero_	nodes/Director.java	/^    private boolean nextDeltaTimeZero_;$/;"	f	class:Director	file:
nextScene	nodes/Director.java	/^    private Scene nextScene;$/;"	f	class:Director	file:
nextTransition	tests/TransitionsTest.java	/^    static TransitionScene nextTransition(float d, Scene s) {$/;"	m	class:TransitionsTest
node	layers/ColorLayer.java	/^    public static ColorLayer node(CCColor4B color) {$/;"	m	class:ColorLayer
node	layers/ColorLayer.java	/^    public static ColorLayer node(CCColor4B color, float w, float h) {$/;"	m	class:ColorLayer
node	layers/Layer.java	/^    public static Layer node() {$/;"	m	class:Layer
node	layers/MultiplexLayer.java	/^    public MultiplexLayer node(Layer... params) {$/;"	m	class:MultiplexLayer
node	nodes/CocosNode.java	/^    public static CocosNode node() {$/;"	m	class:CocosNode
node	nodes/Label.java	/^    public static Label node(String string, float w, float h, TextAlignment alignment, String name, float size) {$/;"	m	class:Label
node	nodes/ParallaxNode.java	/^    public static ParallaxNode node() {$/;"	m	class:ParallaxNode
node	nodes/Scene.java	/^    public static Scene node() {$/;"	m	class:Scene
node	particlesystem/ParticleExplosion.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleExplosion
node	particlesystem/ParticleFire.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleFire
node	particlesystem/ParticleFireworks.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleFireworks
node	particlesystem/ParticleFlower.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleFlower
node	particlesystem/ParticleGalaxy.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleGalaxy
node	particlesystem/ParticleMeteor.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleMeteor
node	particlesystem/ParticleRain.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleRain
node	particlesystem/ParticleSmoke.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleSmoke
node	particlesystem/ParticleSnow.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleSnow
node	particlesystem/ParticleSpiral.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleSpiral
node	particlesystem/ParticleSun.java	/^    public static ParticleSystem node() {$/;"	m	class:ParticleSun
node	tests/DrawPrimitivesTest.java	/^        public static Layer node() {$/;"	m	class:DrawPrimitivesTest.Test1
nodeToParentTransform	nodes/CocosNode.java	/^    private CCAffineTransform nodeToParentTransform() {$/;"	m	class:CocosNode	file:
nodeToWorldTransform	nodes/CocosNode.java	/^    private CCAffineTransform nodeToWorldTransform() {$/;"	m	class:CocosNode	file:
normal	box2d/ContactPoint.java	/^    BBVec2 normal;$/;"	f	class:ContactPoint
normalImage_	menus/MenuItemSprite.java	/^    protected CocosNode normalImage_;$/;"	f	class:MenuItemSprite
numberOfRunningActions	actions/ActionManager.java	/^    public int numberOfRunningActions(CocosNode target) {$/;"	m	class:ActionManager
numberOfRunningActions	nodes/CocosNode.java	/^    public int numberOfRunningActions() {$/;"	m	class:CocosNode
offsetX_	nodes/ParallaxNode.java	/^        private float offsetX_;$/;"	f	class:ParallaxNode.CCPointObject	file:
offsetY_	nodes/ParallaxNode.java	/^        private float offsetY_;$/;"	f	class:ParallaxNode.CCPointObject	file:
oldAnimationInterval	nodes/Director.java	/^    private double oldAnimationInterval;$/;"	f	class:Director	file:
onAccuracyChanged	layers/Layer.java	/^	public void onAccuracyChanged(Sensor sensor, int accuracy) {$/;"	m	class:Layer
onConfigurationChanged	tests/MenuTest.java	/^    public void onConfigurationChanged(Configuration newConfig) {$/;"	m	class:MenuTest
onCreate	Cocos2D.java	/^    public void onCreate(Bundle savedInstanceState) {$/;"	m	class:Cocos2D
onCreate	tests/AtlasSpriteTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:AtlasSpriteTest
onCreate	tests/AtlasTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:AtlasTest
onCreate	tests/Box2DTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:Box2DTest
onCreate	tests/ClickAndMoveTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:ClickAndMoveTest
onCreate	tests/CocosNodeTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:CocosNodeTest
onCreate	tests/DrawPrimitivesTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:DrawPrimitivesTest
onCreate	tests/EaseActionsTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:EaseActionsTest
onCreate	tests/JBox2DTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:JBox2DTest
onCreate	tests/MenuTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:MenuTest
onCreate	tests/MotionStreakTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:MotionStreakTest
onCreate	tests/ParallaxTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:ParallaxTest
onCreate	tests/ParticleTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:ParticleTest
onCreate	tests/RotateWorldTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:RotateWorldTest
onCreate	tests/SceneTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:SceneTest
onCreate	tests/SpritesTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:SpritesTest
onCreate	tests/TransitionsTest.java	/^    protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:TransitionsTest
onDestroy	tests/AtlasSpriteTest.java	/^    public void onDestroy() {$/;"	m	class:AtlasSpriteTest
onDestroy	tests/AtlasTest.java	/^    public void onDestroy() {$/;"	m	class:AtlasTest
onDestroy	tests/Box2DTest.java	/^    public void onDestroy() {$/;"	m	class:Box2DTest
onDestroy	tests/ClickAndMoveTest.java	/^    public void onDestroy() {$/;"	m	class:ClickAndMoveTest
onDestroy	tests/CocosNodeTest.java	/^    public void onDestroy() {$/;"	m	class:CocosNodeTest
onDestroy	tests/DrawPrimitivesTest.java	/^    public void onDestroy() {$/;"	m	class:DrawPrimitivesTest
onDestroy	tests/EaseActionsTest.java	/^    public void onDestroy() {$/;"	m	class:EaseActionsTest
onDestroy	tests/JBox2DTest.java	/^    public void onDestroy() {$/;"	m	class:JBox2DTest
onDestroy	tests/MenuTest.java	/^    public void onDestroy() {$/;"	m	class:MenuTest
onDestroy	tests/MotionStreakTest.java	/^    public void onDestroy() {$/;"	m	class:MotionStreakTest
onDestroy	tests/ParallaxTest.java	/^    public void onDestroy() {$/;"	m	class:ParallaxTest
onDestroy	tests/ParticleTest.java	/^    public void onDestroy() {$/;"	m	class:ParticleTest
onDestroy	tests/RotateWorldTest.java	/^    public void onDestroy() {$/;"	m	class:RotateWorldTest
onDestroy	tests/SpritesTest.java	/^    public void onDestroy() {$/;"	m	class:SpritesTest
onDestroy	tests/TransitionsTest.java	/^    public void onDestroy() {$/;"	m	class:TransitionsTest
onDrawFrame	nodes/Director.java	/^    public void onDrawFrame(GL10 gl) {$/;"	m	class:Director
onEnter	layers/Layer.java	/^    public void onEnter() {$/;"	m	class:Layer
onEnter	nodes/CocosNode.java	/^    public void onEnter() {$/;"	m	class:CocosNode
onEnter	tests/CocosNodeTest.java	/^        public void onEnter() {$/;"	m	class:CocosNodeTest.Test1
onEnter	tests/CocosNodeTest.java	/^        public void onEnter() {$/;"	m	class:CocosNodeTest.Test2
onEnter	tests/CocosNodeTest.java	/^        public void onEnter() {$/;"	m	class:CocosNodeTest.Test3
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpeedTest
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEase
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseBack
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseBackInOut
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseBounce
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseBounceInOut
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseElastic
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseElasticInOut
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseExponential
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseExponentialInOut
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseInOut
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseSine
onEnter	tests/EaseActionsTest.java	/^        public void onEnter()$/;"	m	class:EaseActionsTest.SpriteEaseSineInOut
onEnter	tests/JBox2DTest.java	/^		public void onEnter() {$/;"	m	class:JBox2DTest.JBox2DTestLayer
onEnter	tests/MotionStreakTest.java	/^        public void onEnter() {$/;"	m	class:MotionStreakTest.Test1
onEnter	tests/ParticleTest.java	/^        public void onEnter() {$/;"	m	class:ParticleTest.DemoExplosion
onEnter	tests/ParticleTest.java	/^        public void onEnter() {$/;"	m	class:ParticleTest.DemoFire
onEnter	tests/ParticleTest.java	/^        public void onEnter() {$/;"	m	class:ParticleTest.DemoFirework
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteAnimate
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteBezier
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteBlink
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteCallFunc
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteDelayTime
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteFade
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteJump
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteManual
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteMove
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteOrbit
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteRepeat
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteReverse
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteReverseSequence
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteReverseSequence2
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteRotate
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteScale
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteSequence
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteSpawn
onEnter	tests/SpritesTest.java	/^        public void onEnter() {$/;"	m	class:SpritesTest.SpriteTint
onEnter	transitions/FadeTRTransition.java	/^    public void onEnter() {$/;"	m	class:FadeTRTransition
onEnter	transitions/FadeTransition.java	/^    public void onEnter() {$/;"	m	class:FadeTransition
onEnter	transitions/FlipAngularTransition.java	/^    public void onEnter() {$/;"	m	class:FlipAngularTransition
onEnter	transitions/FlipXTransition.java	/^    public void onEnter() {$/;"	m	class:FlipXTransition
onEnter	transitions/FlipYTransition.java	/^    public void onEnter() {$/;"	m	class:FlipYTransition
onEnter	transitions/JumpZoomTransition.java	/^    public void onEnter() {$/;"	m	class:JumpZoomTransition
onEnter	transitions/MoveInLTransition.java	/^    public void onEnter() {$/;"	m	class:MoveInLTransition
onEnter	transitions/PageTurnTransition.java	/^    public void onEnter()$/;"	m	class:PageTurnTransition
onEnter	transitions/RotoZoomTransition.java	/^    public void onEnter() {$/;"	m	class:RotoZoomTransition
onEnter	transitions/ShrinkGrowTransition.java	/^    public void onEnter() {$/;"	m	class:ShrinkGrowTransition
onEnter	transitions/SlideInLTransition.java	/^    public void onEnter() {$/;"	m	class:SlideInLTransition
onEnter	transitions/TransitionScene.java	/^    public void onEnter() {$/;"	m	class:TransitionScene
onEnter	transitions/TurnOffTilesTransition.java	/^    public void onEnter() {$/;"	m	class:TurnOffTilesTransition
onEnter	transitions/ZoomFlipAngularTransition.java	/^    public void onEnter() {$/;"	m	class:ZoomFlipAngularTransition
onEnter	transitions/ZoomFlipXTransition.java	/^    public void onEnter() {$/;"	m	class:ZoomFlipXTransition
onEnter	transitions/ZoomFlipYTransition.java	/^    public void onEnter() {$/;"	m	class:ZoomFlipYTransition
onEnterTransitionDidFinish	nodes/CocosNode.java	/^    public void onEnterTransitionDidFinish() {$/;"	m	class:CocosNode
onEnterTransitionDidFinish	transitions/TransitionScene.java	/^    public void onEnterTransitionDidFinish() {$/;"	m	class:TransitionScene
onExit	layers/Layer.java	/^    public void onExit() {$/;"	m	class:Layer
onExit	nodes/CocosNode.java	/^    public void onExit() {$/;"	m	class:CocosNode
onExit	tests/JBox2DTest.java	/^		public void onExit() {$/;"	m	class:JBox2DTest.JBox2DTestLayer
onExit	transitions/FadeTransition.java	/^    public void onExit() {$/;"	m	class:FadeTransition
onExit	transitions/TransitionScene.java	/^    public void onExit() {$/;"	m	class:TransitionScene
onGoBack	tests/SceneTest.java	/^        public void onGoBack() {$/;"	m	class:SceneTest.Layer2
onListItemClick	Cocos2D.java	/^    protected void onListItemClick(ListView l, View v, int position, long id) {$/;"	m	class:Cocos2D
onPause	tests/AtlasSpriteTest.java	/^    public void onPause() {$/;"	m	class:AtlasSpriteTest
onPause	tests/AtlasTest.java	/^    public void onPause() {$/;"	m	class:AtlasTest
onPause	tests/Box2DTest.java	/^    public void onPause() {$/;"	m	class:Box2DTest
onPause	tests/ClickAndMoveTest.java	/^    public void onPause() {$/;"	m	class:ClickAndMoveTest
onPause	tests/CocosNodeTest.java	/^    public void onPause() {$/;"	m	class:CocosNodeTest
onPause	tests/DrawPrimitivesTest.java	/^    public void onPause() {$/;"	m	class:DrawPrimitivesTest
onPause	tests/EaseActionsTest.java	/^    public void onPause() {$/;"	m	class:EaseActionsTest
onPause	tests/JBox2DTest.java	/^    public void onPause() {$/;"	m	class:JBox2DTest
onPause	tests/MenuTest.java	/^    public void onPause() {$/;"	m	class:MenuTest
onPause	tests/MotionStreakTest.java	/^    public void onPause() {$/;"	m	class:MotionStreakTest
onPause	tests/ParallaxTest.java	/^    public void onPause() {$/;"	m	class:ParallaxTest
onPause	tests/ParticleTest.java	/^    public void onPause() {$/;"	m	class:ParticleTest
onPause	tests/RotateWorldTest.java	/^    public void onPause() {$/;"	m	class:RotateWorldTest
onPause	tests/SpritesTest.java	/^    public void onPause() {$/;"	m	class:SpritesTest
onPause	tests/TransitionsTest.java	/^    public void onPause() {$/;"	m	class:TransitionsTest
onPushScene	tests/SceneTest.java	/^        public void onPushScene() {$/;"	m	class:SceneTest.Layer1
onPushSceneTran	tests/SceneTest.java	/^        public void onPushSceneTran() {$/;"	m	class:SceneTest.Layer1
onQuit	tests/MenuTest.java	/^        public void onQuit() {$/;"	m	class:MenuTest.Layer1
onQuit	tests/SceneTest.java	/^        public void onQuit() {$/;"	m	class:SceneTest.Layer1
onReplaceScene	tests/SceneTest.java	/^        public void onReplaceScene() {$/;"	m	class:SceneTest.Layer2
onReplaceSceneTransition	tests/SceneTest.java	/^        public void onReplaceSceneTransition() {$/;"	m	class:SceneTest.Layer2
onResume	tests/AtlasSpriteTest.java	/^    public void onResume() {$/;"	m	class:AtlasSpriteTest
onResume	tests/AtlasTest.java	/^    public void onResume() {$/;"	m	class:AtlasTest
onResume	tests/Box2DTest.java	/^    public void onResume() {$/;"	m	class:Box2DTest
onResume	tests/ClickAndMoveTest.java	/^    public void onResume() {$/;"	m	class:ClickAndMoveTest
onResume	tests/CocosNodeTest.java	/^    public void onResume() {$/;"	m	class:CocosNodeTest
onResume	tests/DrawPrimitivesTest.java	/^    public void onResume() {$/;"	m	class:DrawPrimitivesTest
onResume	tests/EaseActionsTest.java	/^    public void onResume() {$/;"	m	class:EaseActionsTest
onResume	tests/JBox2DTest.java	/^    public void onResume() {$/;"	m	class:JBox2DTest
onResume	tests/MenuTest.java	/^    public void onResume() {$/;"	m	class:MenuTest
onResume	tests/MotionStreakTest.java	/^    public void onResume() {$/;"	m	class:MotionStreakTest
onResume	tests/ParallaxTest.java	/^    public void onResume() {$/;"	m	class:ParallaxTest
onResume	tests/ParticleTest.java	/^    public void onResume() {$/;"	m	class:ParticleTest
onResume	tests/RotateWorldTest.java	/^    public void onResume() {$/;"	m	class:RotateWorldTest
onResume	tests/SpritesTest.java	/^    public void onResume() {$/;"	m	class:SpritesTest
onResume	tests/TransitionsTest.java	/^    public void onResume() {$/;"	m	class:TransitionsTest
onSensorChanged	layers/Layer.java	/^	public void onSensorChanged(SensorEvent event) {$/;"	m	class:Layer
onStart	tests/AtlasSpriteTest.java	/^    public void onStart() {$/;"	m	class:AtlasSpriteTest
onStart	tests/AtlasTest.java	/^    public void onStart() {$/;"	m	class:AtlasTest
onStart	tests/Box2DTest.java	/^    public void onStart() {$/;"	m	class:Box2DTest
onStart	tests/ClickAndMoveTest.java	/^    public void onStart() {$/;"	m	class:ClickAndMoveTest
onStart	tests/CocosNodeTest.java	/^    public void onStart() {$/;"	m	class:CocosNodeTest
onStart	tests/DrawPrimitivesTest.java	/^    public void onStart() {$/;"	m	class:DrawPrimitivesTest
onStart	tests/EaseActionsTest.java	/^    public void onStart() {$/;"	m	class:EaseActionsTest
onStart	tests/JBox2DTest.java	/^    public void onStart() {$/;"	m	class:JBox2DTest
onStart	tests/MenuTest.java	/^    public void onStart() {$/;"	m	class:MenuTest
onStart	tests/MotionStreakTest.java	/^    public void onStart() {$/;"	m	class:MotionStreakTest
onStart	tests/ParallaxTest.java	/^    public void onStart() {$/;"	m	class:ParallaxTest
onStart	tests/ParticleTest.java	/^    public void onStart() {$/;"	m	class:ParticleTest
onStart	tests/RotateWorldTest.java	/^    public void onStart() {$/;"	m	class:RotateWorldTest
onStart	tests/SpritesTest.java	/^    public void onStart() {$/;"	m	class:SpritesTest
onStart	tests/TransitionsTest.java	/^    public void onStart() {$/;"	m	class:TransitionsTest
onSurfaceChanged	nodes/Director.java	/^    public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:Director
onSurfaceCreated	nodes/Director.java	/^    public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:Director
onTouchEvent	opengl/CCGLSurfaceView.java	/^    public boolean onTouchEvent(MotionEvent event) {$/;"	m	class:CCGLSurfaceView
onUpdate	tests/MotionStreakTest.java	/^        public void onUpdate(float delta) {$/;"	m	class:MotionStreakTest.Test1
onVoid	tests/SceneTest.java	/^        public void onVoid() {$/;"	m	class:SceneTest.Layer1
one	actions/interval/Spawn.java	/^    private FiniteTimeAction one;$/;"	f	class:Spawn	file:
opacityModifyRGB_	nodes/AtlasNode.java	/^    boolean opacityModifyRGB_;$/;"	f	class:AtlasNode
opacityModifyRGB_	nodes/TextureNode.java	/^    boolean opacityModifyRGB_;$/;"	f	class:TextureNode
opacity_	layers/ColorLayer.java	/^    protected int opacity_;$/;"	f	class:ColorLayer
opacity_	menus/MenuItemToggle.java	/^    private byte opacity_;$/;"	f	class:MenuItemToggle	file:
opacity_	nodes/AtlasNode.java	/^    int opacity_;$/;"	f	class:AtlasNode
opacity_	nodes/AtlasSprite.java	/^    private int opacity_;$/;"	f	class:AtlasSprite	file:
opacity_	nodes/TextureNode.java	/^    private int opacity_;$/;"	f	class:TextureNode	file:
openGLView_	nodes/Director.java	/^    private GLSurfaceView openGLView_;$/;"	f	class:Director	file:
org.cocos2d	Cocos2D.java	/^package org.cocos2d;$/;"	p
org.cocos2d.actions	actions/ActionManager.java	/^package org.cocos2d.actions;$/;"	p
org.cocos2d.actions	actions/Scheduler.java	/^package org.cocos2d.actions;$/;"	p
org.cocos2d.actions.base	actions/base/Action.java	/^package org.cocos2d.actions.base;$/;"	p
org.cocos2d.actions.base	actions/base/FiniteTimeAction.java	/^package org.cocos2d.actions.base;$/;"	p
org.cocos2d.actions.base	actions/base/RepeatForever.java	/^package org.cocos2d.actions.base;$/;"	p
org.cocos2d.actions.base	actions/base/Speed.java	/^package org.cocos2d.actions.base;$/;"	p
org.cocos2d.actions.camera	actions/camera/CameraAction.java	/^package org.cocos2d.actions.camera;$/;"	p
org.cocos2d.actions.camera	actions/camera/OrbitCamera.java	/^package org.cocos2d.actions.camera;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseAction.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseBackIn.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseBackInOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseBackOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseBounce.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseBounceIn.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseBounceInOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseBounceOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseElastic.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseElasticIn.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseElasticInOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseElasticOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseExponentialIn.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseExponentialInOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseExponentialOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseIn.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseInOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseRateAction.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseSineIn.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseSineInOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.ease	actions/ease/EaseSineOut.java	/^package org.cocos2d.actions.ease;$/;"	p
org.cocos2d.actions.grid	actions/grid/Grid3DAction.java	/^package org.cocos2d.actions.grid;$/;"	p
org.cocos2d.actions.grid	actions/grid/GridAction.java	/^package org.cocos2d.actions.grid;$/;"	p
org.cocos2d.actions.instant	actions/instant/CallFunc.java	/^package org.cocos2d.actions.instant;$/;"	p
org.cocos2d.actions.instant	actions/instant/CallFuncN.java	/^package org.cocos2d.actions.instant;$/;"	p
org.cocos2d.actions.instant	actions/instant/CallFuncND.java	/^package org.cocos2d.actions.instant;$/;"	p
org.cocos2d.actions.instant	actions/instant/Hide.java	/^package org.cocos2d.actions.instant;$/;"	p
org.cocos2d.actions.instant	actions/instant/InstantAction.java	/^package org.cocos2d.actions.instant;$/;"	p
org.cocos2d.actions.instant	actions/instant/Place.java	/^package org.cocos2d.actions.instant;$/;"	p
org.cocos2d.actions.instant	actions/instant/Show.java	/^package org.cocos2d.actions.instant;$/;"	p
org.cocos2d.actions.instant	actions/instant/ToggleVisibility.java	/^package org.cocos2d.actions.instant;$/;"	p
org.cocos2d.actions.interval	actions/interval/Animate.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/BezierBy.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/Blink.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/DelayTime.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/FadeIn.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/FadeOut.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/FadeTo.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/IntervalAction.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/JumpBy.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/JumpTo.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/MoveBy.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/MoveTo.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/Repeat.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/ReverseTime.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/RotateBy.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/RotateTo.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/ScaleBy.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/ScaleTo.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/Sequence.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/Spawn.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/TintBy.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.actions.interval	actions/interval/TintTo.java	/^package org.cocos2d.actions.interval;$/;"	p
org.cocos2d.box2d	box2d/AndroidTest.java	/^package org.cocos2d.box2d;$/;"	p
org.cocos2d.box2d	box2d/Box2DView.java	/^package org.cocos2d.box2d;$/;"	p
org.cocos2d.box2d	box2d/ContactPoint.java	/^package org.cocos2d.box2d;$/;"	p
org.cocos2d.box2d	box2d/DestructionListener.java	/^package org.cocos2d.box2d;$/;"	p
org.cocos2d.box2d	box2d/GLESDebugDraw.java	/^package org.cocos2d.box2d;$/;"	p
org.cocos2d.box2d	box2d/Settings.java	/^package org.cocos2d.box2d;$/;"	p
org.cocos2d.box2d	box2d/Test.java	/^package org.cocos2d.box2d;$/;"	p
org.cocos2d.box2d	box2d/TestCreateFcn.java	/^package org.cocos2d.box2d;$/;"	p
org.cocos2d.box2d	box2d/TestEntry.java	/^package org.cocos2d.box2d;$/;"	p
org.cocos2d.events	events/TouchDelegate.java	/^package org.cocos2d.events;$/;"	p
org.cocos2d.events	events/TouchDispatcher.java	/^package org.cocos2d.events;$/;"	p
org.cocos2d.events	events/TouchHandler.java	/^package org.cocos2d.events;$/;"	p
org.cocos2d.grid	grid/Grid3D.java	/^package org.cocos2d.grid;$/;"	p
org.cocos2d.grid	grid/GridBase.java	/^package org.cocos2d.grid;$/;"	p
org.cocos2d.grid	grid/TiledGrid3D.java	/^package org.cocos2d.grid;$/;"	p
org.cocos2d.layers	layers/ColorLayer.java	/^package org.cocos2d.layers;$/;"	p
org.cocos2d.layers	layers/Layer.java	/^package org.cocos2d.layers;$/;"	p
org.cocos2d.layers	layers/MultiplexLayer.java	/^package org.cocos2d.layers;$/;"	p
org.cocos2d.menus	menus/Menu.java	/^package org.cocos2d.menus;$/;"	p
org.cocos2d.menus	menus/MenuItem.java	/^package org.cocos2d.menus;$/;"	p
org.cocos2d.menus	menus/MenuItemAtlasFont.java	/^package org.cocos2d.menus;$/;"	p
org.cocos2d.menus	menus/MenuItemAtlasSprite.java	/^package org.cocos2d.menus;$/;"	p
org.cocos2d.menus	menus/MenuItemFont.java	/^package org.cocos2d.menus;$/;"	p
org.cocos2d.menus	menus/MenuItemImage.java	/^package org.cocos2d.menus;$/;"	p
org.cocos2d.menus	menus/MenuItemLabel.java	/^package org.cocos2d.menus;$/;"	p
org.cocos2d.menus	menus/MenuItemSprite.java	/^package org.cocos2d.menus;$/;"	p
org.cocos2d.menus	menus/MenuItemToggle.java	/^package org.cocos2d.menus;$/;"	p
org.cocos2d.nodes	nodes/Animation.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/AtlasAnimation.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/AtlasNode.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/AtlasSprite.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/AtlasSpriteFrame.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/AtlasSpriteManager.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/CocosNode.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/Director.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/Label.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/LabelAtlas.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/MotionStreak.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/ParallaxNode.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/Ribbon.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/Scene.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/Sprite.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/TextureManager.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/TextureNode.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.nodes	nodes/TileMapAtlas.java	/^package org.cocos2d.nodes;$/;"	p
org.cocos2d.opengl	opengl/CCGLSurfaceView.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/Camera.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/GLDebugWrapper.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/GLU.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/OpenGLViewAlreadyAttachedException.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/OpenGLViewCantAttachException.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/OpenGLViewCantDetachException.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/OpenGLViewCantInitException.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/OpenGLViewNotAttachedException.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/Primitives.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/TGA.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/Texture2D.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.opengl	opengl/TextureAtlas.java	/^package org.cocos2d.opengl;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleExplosion.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleFire.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleFireworks.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleFlower.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleGalaxy.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleMeteor.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleRain.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleSmoke.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleSnow.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleSpiral.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleSun.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.particlesystem	particlesystem/ParticleSystem.java	/^package org.cocos2d.particlesystem;$/;"	p
org.cocos2d.tests	tests/AtlasSpriteTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/AtlasTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/Box2DTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/ClickAndMoveTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/CocosNodeTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/DrawPrimitivesTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/EaseActionsTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/JBox2DTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/MenuTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/MotionStreakTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/ParallaxTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/ParticleTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/RotateWorldTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/SceneTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/SpritesTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.tests	tests/TransitionsTest.java	/^package org.cocos2d.tests;$/;"	p
org.cocos2d.transitions	transitions/FadeBLTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/FadeDownTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/FadeTRTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/FadeTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/FadeUpTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/FlipAngularTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/FlipXTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/FlipYTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/JumpZoomTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/MoveInBTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/MoveInLTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/MoveInRTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/MoveInTTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/OrientedTransitionScene.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/PageTurnTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/RotoZoomTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/ShrinkGrowTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/SlideInBTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/SlideInLTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/SlideInRTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/SlideInTTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/SplitColsTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/SplitRowsTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/TransitionScene.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/TurnOffTilesTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/ZoomFlipAngularTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/ZoomFlipXTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.transitions	transitions/ZoomFlipYTransition.java	/^package org.cocos2d.transitions;$/;"	p
org.cocos2d.types	types/CCAffineTransform.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCBezierConfig.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCBlendFunc.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCColor3B.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCColor4B.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCColorF.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCGridSize.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCMacros.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCPoint.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCPointSize.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCPointSprite.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCQuad2.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCQuad3.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCRGBB.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCRect.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCSize.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCTexParams.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCV3F_C4B_T2F_Quad.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/CCVertex3D.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/Copyable.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.types	types/NoninvertibleTransformException.java	/^package org.cocos2d.types;$/;"	p
org.cocos2d.utils	utils/CCFormatter.java	/^package org.cocos2d.utils;$/;"	p
org.cocos2d.utils	utils/FloatBufferProvider.java	/^package org.cocos2d.utils;$/;"	p
org.cocos2d.utils	utils/TransformUtils.java	/^package org.cocos2d.utils;$/;"	p
orientation	transitions/OrientedTransitionScene.java	/^    int orientation;$/;"	f	class:OrientedTransitionScene
origFrame	actions/interval/Animate.java	/^    private Object origFrame;$/;"	f	class:Animate	file:
origin	types/CCRect.java	/^    public CCPoint origin;$/;"	f	class:CCRect
originalTarget	actions/base/Action.java	/^    private CocosNode originalTarget;$/;"	f	class:Action	file:
originalTile	grid/TiledGrid3D.java	/^    public CCQuad3 originalTile(CCGridSize pos) {$/;"	m	class:TiledGrid3D
originalVertex	actions/grid/Grid3DAction.java	/^    public CCVertex3D originalVertex(CCGridSize pos) {$/;"	m	class:Grid3DAction
originalVertex	grid/Grid3D.java	/^    public CCVertex3D originalVertex(CCGridSize pos) {$/;"	m	class:Grid3D
originalVertices	grid/Grid3D.java	/^    FloatBuffer originalVertices;$/;"	f	class:Grid3D
originalVertices	grid/TiledGrid3D.java	/^    FloatBuffer originalVertices;$/;"	f	class:TiledGrid3D
other	actions/base/RepeatForever.java	/^    protected IntervalAction other;$/;"	f	class:RepeatForever
other	actions/base/Speed.java	/^    protected Action other;$/;"	f	class:Speed
other	actions/ease/EaseAction.java	/^    protected IntervalAction other;$/;"	f	class:EaseAction
other	actions/interval/Repeat.java	/^    private FiniteTimeAction other;$/;"	f	class:Repeat	file:
other	actions/interval/ReverseTime.java	/^    private FiniteTimeAction other;$/;"	f	class:ReverseTime	file:
outScene	transitions/TransitionScene.java	/^    protected Scene outScene;$/;"	f	class:TransitionScene
parallaxArray_	nodes/ParallaxNode.java	/^    private ArrayList<CCPointObject> parallaxArray_;$/;"	f	class:ParallaxNode	file:
parent	nodes/CocosNode.java	/^    public CocosNode parent;$/;"	f	class:CocosNode
parentToNodeTransform	nodes/CocosNode.java	/^    private CCAffineTransform parentToNodeTransform() {$/;"	m	class:CocosNode	file:
particleCount	particlesystem/ParticleSystem.java	/^    protected int particleCount;$/;"	f	class:ParticleSystem
particleIdx	particlesystem/ParticleSystem.java	/^    protected int particleIdx;$/;"	f	class:ParticleSystem
particles	particlesystem/ParticleSystem.java	/^    protected Particle particles[];$/;"	f	class:ParticleSystem
pause	box2d/Settings.java	/^    public int pause;$/;"	f	class:Settings
pause	nodes/Director.java	/^    public void pause() {$/;"	m	class:Director
pauseAllActions	actions/ActionManager.java	/^    public void pauseAllActions(CocosNode target) {$/;"	m	class:ActionManager
paused	actions/ActionManager.java	/^        boolean paused;$/;"	f	class:ActionManager.HashElement
paused	nodes/Director.java	/^    private boolean paused;$/;"	f	class:Director	file:
period_	actions/ease/EaseElastic.java	/^    protected float period_;$/;"	f	class:EaseElastic
pixelDepth	opengl/TGA.java	/^        int type, pixelDepth;$/;"	f	class:TGA.ImageTGA
pixelsHigh	opengl/Texture2D.java	/^    public int pixelsHigh() {$/;"	m	class:Texture2D
pixelsWide	opengl/Texture2D.java	/^    public int pixelsWide() {$/;"	m	class:Texture2D
popScene	nodes/Director.java	/^    public void popScene() {$/;"	m	class:Director
pos	particlesystem/ParticleSystem.java	/^        CCPoint pos = new CCPoint();$/;"	f	class:ParticleSystem.Particle
posToAtlasIndex	nodes/TileMapAtlas.java	/^    private HashMap<String, Integer> posToAtlasIndex;$/;"	f	class:TileMapAtlas	file:
posVar	particlesystem/ParticleSystem.java	/^    protected CCPoint posVar = CCPoint.zero();$/;"	f	class:ParticleSystem
position	actions/instant/Place.java	/^    private PointF position;$/;"	f	class:Place	file:
position	box2d/ContactPoint.java	/^    BBVec2 position;$/;"	f	class:ContactPoint
positionForTwo	tests/EaseActionsTest.java	/^        public void positionForTwo()$/;"	m	class:EaseActionsTest.SpriteDemo
positionIterations	box2d/Settings.java	/^    public int positionIterations;$/;"	f	class:Settings
positionType_	particlesystem/ParticleSystem.java	/^    private	int positionType_;$/;"	f	class:ParticleSystem	file:
position_	nodes/CocosNode.java	/^    private CCPoint position_;$/;"	f	class:CocosNode	file:
preConcatenate	types/CCAffineTransform.java	/^    public void preConcatenate(CCAffineTransform t) {$/;"	m	class:CCAffineTransform
previousLocation	tests/ParallaxTest.java	/^        CCPoint previousLocation;$/;"	f	class:ParallaxTest.Parallax2
priority_	events/TouchHandler.java	/^    private int priority_;$/;"	f	class:TouchHandler	file:
projection_	nodes/Director.java	/^    private int projection_;$/;"	f	class:Director	file:
pushScene	nodes/Director.java	/^    public void pushScene(Scene scene) {$/;"	m	class:Director
putColor	opengl/TextureAtlas.java	/^    private void putColor(ByteBuffer dst, byte[] color, int index) {$/;"	m	class:TextureAtlas	file:
putTexCoords	opengl/TextureAtlas.java	/^    private void putTexCoords(FloatBuffer dst, float[] quadT, int index) {$/;"	m	class:TextureAtlas	file:
putVertex	opengl/TextureAtlas.java	/^    private void putVertex(FloatBuffer dst, float[] quadV, int index) {$/;"	m	class:TextureAtlas	file:
r	types/CCColor3B.java	/^    public int r;$/;"	f	class:CCColor3B
r	types/CCColor4B.java	/^    public int r;$/;"	f	class:CCColor4B
r	types/CCColorF.java	/^    public float r;$/;"	f	class:CCColorF
r	types/CCRGBB.java	/^    public byte r;$/;"	f	class:CCRGBB
rRect	types/CCRect.java	/^    private static CCRect rRect = new CCRect();$/;"	f	class:CCRect	file:
radDeltaX	actions/camera/OrbitCamera.java	/^    private float radDeltaX;$/;"	f	class:OrbitCamera	file:
radDeltaZ	actions/camera/OrbitCamera.java	/^    private float radDeltaZ;$/;"	f	class:OrbitCamera	file:
radX	actions/camera/OrbitCamera.java	/^    private float radX;$/;"	f	class:OrbitCamera	file:
radZ	actions/camera/OrbitCamera.java	/^    private float radZ;$/;"	f	class:OrbitCamera	file:
radialAccel	particlesystem/ParticleSystem.java	/^        float radialAccel;$/;"	f	class:ParticleSystem.Particle
radialAccel	particlesystem/ParticleSystem.java	/^    protected float radialAccel;$/;"	f	class:ParticleSystem
radialAccelVar	particlesystem/ParticleSystem.java	/^    protected float radialAccelVar;$/;"	f	class:ParticleSystem
radius	actions/camera/OrbitCamera.java	/^    private float radius;$/;"	f	class:OrbitCamera	file:
randomFloat	box2d/AndroidTest.java	/^    public static float randomFloat()$/;"	m	class:AndroidTest
randomFloat	box2d/AndroidTest.java	/^    public static float randomFloat(float lo, float hi)$/;"	m	class:AndroidTest
rate	actions/ease/EaseRateAction.java	/^    float rate;$/;"	f	class:EaseRateAction
ratioX_	nodes/ParallaxNode.java	/^        private float ratioX_;$/;"	f	class:ParallaxNode.CCPointObject	file:
ratioY_	nodes/ParallaxNode.java	/^        private float ratioY_;$/;"	f	class:ParallaxNode.CCPointObject	file:
readObject	types/CCAffineTransform.java	/^    private void readObject(java.io.ObjectInputStream stream) throws IOException,$/;"	m	class:CCAffineTransform	file:
rect	menus/MenuItem.java	/^    public CCRect rect() {$/;"	m	class:MenuItem
rect	nodes/AtlasSpriteFrame.java	/^    public CCRect rect;$/;"	f	class:AtlasSpriteFrame
rect_	nodes/AtlasSprite.java	/^    private CCRect rect_;$/;"	f	class:AtlasSprite	file:
registerWithAccelerometer	layers/Layer.java	/^    protected void registerWithAccelerometer()$/;"	m	class:Layer
registerWithTouchDispatcher	layers/Layer.java	/^    protected void registerWithTouchDispatcher() {$/;"	m	class:Layer
registerWithTouchDispatcher	menus/Menu.java	/^    protected void registerWithTouchDispatcher() {$/;"	m	class:Menu
registerWithTouchDispatcher	tests/ParallaxTest.java	/^        public void registerWithTouchDispatcher()$/;"	m	class:ParallaxTest.Parallax2
relativeAnchorPoint_	nodes/CocosNode.java	/^    private boolean relativeAnchorPoint_;$/;"	f	class:CocosNode	file:
releaseMap	nodes/TileMapAtlas.java	/^    public void releaseMap() {$/;"	m	class:TileMapAtlas
removeAction	actions/ActionManager.java	/^    private void removeAction(int index, HashElement element) {$/;"	m	class:ActionManager	file:
removeAction	actions/ActionManager.java	/^    public void removeAction(Action action) {$/;"	m	class:ActionManager
removeAction	actions/ActionManager.java	/^    public void removeAction(int tag, CocosNode target) {$/;"	m	class:ActionManager
removeAllActions	actions/ActionManager.java	/^    public void removeAllActions() {$/;"	m	class:ActionManager
removeAllActions	actions/ActionManager.java	/^    public void removeAllActions(CocosNode target) {$/;"	m	class:ActionManager
removeAllChildren	nodes/AtlasSpriteManager.java	/^    public void removeAllChildren(boolean doCleanup) {$/;"	m	class:AtlasSpriteManager
removeAllChildren	nodes/CocosNode.java	/^    public void removeAllChildren(boolean cleanup) {$/;"	m	class:CocosNode
removeAllChildren	nodes/ParallaxNode.java	/^    public void removeAllChildren(boolean cleanup)$/;"	m	class:ParallaxNode
removeAllDelegates	events/TouchDispatcher.java	/^    public void removeAllDelegates()$/;"	m	class:TouchDispatcher
removeAllQuads	opengl/TextureAtlas.java	/^    public void removeAllQuads() {$/;"	m	class:TextureAtlas
removeAllTextures	nodes/TextureManager.java	/^    public void removeAllTextures() {$/;"	m	class:TextureManager
removeAndAddSprite	tests/AtlasSpriteTest.java	/^        public void removeAndAddSprite(float dt) {$/;"	m	class:AtlasSpriteTest.Atlas3
removeChild	nodes/AtlasSpriteManager.java	/^    public void removeChild(CocosNode node, boolean doCleanup) {$/;"	m	class:AtlasSpriteManager
removeChild	nodes/AtlasSpriteManager.java	/^    public void removeChild(int index, boolean doCleanup) {$/;"	m	class:AtlasSpriteManager
removeChild	nodes/CocosNode.java	/^    public void removeChild(CocosNode child, boolean cleanup) {$/;"	m	class:CocosNode
removeChild	nodes/CocosNode.java	/^    public void removeChild(int tag, boolean cleanup) {$/;"	m	class:CocosNode
removeChild	nodes/ParallaxNode.java	/^    public void removeChild(CocosNode node, boolean cleanup)$/;"	m	class:ParallaxNode
removeDelegate	events/TouchDispatcher.java	/^    public void removeDelegate(TouchDelegate delegate)$/;"	m	class:TouchDispatcher
removeMe	tests/CocosNodeTest.java	/^        public void removeMe(CocosNode node) {$/;"	m	class:CocosNodeTest.Test7
removeQuad	opengl/TextureAtlas.java	/^    public void removeQuad(int index) {$/;"	m	class:TextureAtlas
removeTexture	nodes/TextureManager.java	/^    void removeTexture(Texture2D tex) {$/;"	m	class:TextureManager
reorderChild	nodes/AtlasSpriteManager.java	/^    public void reorderChild(CocosNode node, int z) {$/;"	m	class:AtlasSpriteManager
reorderChild	nodes/CocosNode.java	/^    public void reorderChild(CocosNode child, int zOrder) {$/;"	m	class:CocosNode
reorderSprite	tests/AtlasSpriteTest.java	/^        public void reorderSprite(float dt) {$/;"	m	class:AtlasSpriteTest.Atlas4
replaceScene	nodes/Director.java	/^    public void replaceScene(Scene scene) {$/;"	m	class:Director
reset	nodes/Ribbon.java	/^        public void reset() {$/;"	m	class:Ribbon.RibbonSegment
resetSystem	particlesystem/ParticleSystem.java	/^    public void resetSystem() {$/;"	m	class:ParticleSystem
resizeAtlas	nodes/AtlasSpriteManager.java	/^    private void resizeAtlas() {$/;"	m	class:AtlasSpriteManager	file:
resizeCapacity	opengl/TextureAtlas.java	/^    public void resizeCapacity(int newCapacity) {$/;"	m	class:TextureAtlas
restartAction	tests/AtlasSpriteTest.java	/^    static Layer restartAction() {$/;"	m	class:AtlasSpriteTest
restartAction	tests/AtlasTest.java	/^    static Layer restartAction() {$/;"	m	class:AtlasTest
restartAction	tests/CocosNodeTest.java	/^    static Layer restartAction() {$/;"	m	class:CocosNodeTest
restartAction	tests/DrawPrimitivesTest.java	/^    public static Layer restartAction() {$/;"	m	class:DrawPrimitivesTest
restartAction	tests/EaseActionsTest.java	/^    static Layer restartAction() {$/;"	m	class:EaseActionsTest
restartAction	tests/MotionStreakTest.java	/^    static Layer restartAction() {$/;"	m	class:MotionStreakTest
restartAction	tests/ParallaxTest.java	/^    static Layer restartAction() {$/;"	m	class:ParallaxTest
restartAction	tests/ParticleTest.java	/^    static Layer restartAction() {$/;"	m	class:ParticleTest
restartAction	tests/SpritesTest.java	/^    static Layer restartAction() {$/;"	m	class:SpritesTest
restartCallback	tests/AtlasSpriteTest.java	/^        public static void restartCallback() {$/;"	m	class:AtlasSpriteTest.AtlasSpriteDemo
restartCallback	tests/AtlasTest.java	/^        public static void restartCallback() {$/;"	m	class:AtlasTest.AtlasDemo
restartCallback	tests/CocosNodeTest.java	/^        public static void restartCallback() {$/;"	m	class:CocosNodeTest.TestDemo
restartCallback	tests/DrawPrimitivesTest.java	/^        public void restartCallback() {$/;"	m	class:DrawPrimitivesTest.TestDemo
restartCallback	tests/EaseActionsTest.java	/^        public static void restartCallback() {$/;"	m	class:EaseActionsTest.SpriteDemo
restartCallback	tests/MotionStreakTest.java	/^        public static void restartCallback() {$/;"	m	class:MotionStreakTest.TestDemo
restartCallback	tests/ParallaxTest.java	/^        public static void restartCallback() {$/;"	m	class:ParallaxTest.ParallaxDemo
restartCallback	tests/ParticleTest.java	/^        public void restartCallback() {$/;"	m	class:ParticleTest.ParticleDemo
restartCallback	tests/SpritesTest.java	/^        public static void restartCallback() {$/;"	m	class:SpritesTest.SpriteDemo
restartCallback	tests/TransitionsTest.java	/^        public void restartCallback() {$/;"	m	class:TransitionsTest.TestLayer1
restartCallback	tests/TransitionsTest.java	/^        public void restartCallback() {$/;"	m	class:TransitionsTest.TestLayer2
restartTransition	tests/TransitionsTest.java	/^    static TransitionScene restartTransition(float d, Scene s) {$/;"	m	class:TransitionsTest
restore	opengl/Camera.java	/^    public void restore() {$/;"	m	class:Camera
restoreOriginalFrame	actions/interval/Animate.java	/^    private boolean restoreOriginalFrame;$/;"	f	class:Animate	file:
restoreTexParameters	opengl/Texture2D.java	/^    public static void restoreTexParameters() {$/;"	m	class:Texture2D
resume	nodes/Director.java	/^    public void resume() {$/;"	m	class:Director
resumeAllActions	actions/ActionManager.java	/^    public void resumeAllActions(CocosNode target) {$/;"	m	class:ActionManager
reuse	grid/Grid3D.java	/^    public void reuse() {$/;"	m	class:Grid3D
reuse	grid/GridBase.java	/^    public abstract void reuse();$/;"	m	class:GridBase
reuse	grid/TiledGrid3D.java	/^    public void reuse() {$/;"	m	class:TiledGrid3D
reuseGrid	grid/GridBase.java	/^    protected int reuseGrid;$/;"	f	class:GridBase
reuseGrid	grid/GridBase.java	/^    public boolean reuseGrid() {$/;"	m	class:GridBase
reverse	actions/base/FiniteTimeAction.java	/^    public FiniteTimeAction reverse() {$/;"	m	class:FiniteTimeAction
reverse	actions/base/RepeatForever.java	/^    public RepeatForever reverse() {$/;"	m	class:RepeatForever
reverse	actions/base/Speed.java	/^    public Speed reverse() {$/;"	m	class:Speed
reverse	actions/camera/CameraAction.java	/^    public IntervalAction reverse() {$/;"	m	class:CameraAction
reverse	actions/ease/EaseAction.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseAction
reverse	actions/ease/EaseBackIn.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseBackIn
reverse	actions/ease/EaseBackInOut.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseBackInOut
reverse	actions/ease/EaseBackOut.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseBackOut
reverse	actions/ease/EaseBounce.java	/^    public abstract IntervalAction reverse();$/;"	m	class:EaseBounce
reverse	actions/ease/EaseBounceIn.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseBounceIn
reverse	actions/ease/EaseBounceInOut.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseBounceInOut
reverse	actions/ease/EaseBounceOut.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseBounceOut
reverse	actions/ease/EaseElastic.java	/^    public abstract IntervalAction reverse();$/;"	m	class:EaseElastic
reverse	actions/ease/EaseElasticIn.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseElasticIn
reverse	actions/ease/EaseElasticInOut.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseElasticInOut
reverse	actions/ease/EaseElasticOut.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseElasticOut
reverse	actions/ease/EaseExponentialIn.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseExponentialIn
reverse	actions/ease/EaseExponentialOut.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseExponentialOut
reverse	actions/ease/EaseRateAction.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseRateAction
reverse	actions/ease/EaseSineIn.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseSineIn
reverse	actions/ease/EaseSineInOut.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseSineInOut
reverse	actions/ease/EaseSineOut.java	/^    public IntervalAction reverse() {$/;"	m	class:EaseSineOut
reverse	actions/grid/GridAction.java	/^    public IntervalAction reverse() {$/;"	m	class:GridAction
reverse	actions/instant/Hide.java	/^    public FiniteTimeAction reverse() {$/;"	m	class:Hide
reverse	actions/instant/InstantAction.java	/^    public FiniteTimeAction reverse() {$/;"	m	class:InstantAction
reverse	actions/instant/Show.java	/^    public FiniteTimeAction reverse() {$/;"	m	class:Show
reverse	actions/interval/BezierBy.java	/^    public IntervalAction reverse() {$/;"	m	class:BezierBy
reverse	actions/interval/Blink.java	/^    public IntervalAction reverse() {$/;"	m	class:Blink
reverse	actions/interval/DelayTime.java	/^    public IntervalAction reverse() {$/;"	m	class:DelayTime
reverse	actions/interval/FadeIn.java	/^    public IntervalAction reverse() {$/;"	m	class:FadeIn
reverse	actions/interval/FadeOut.java	/^    public IntervalAction reverse() {$/;"	m	class:FadeOut
reverse	actions/interval/IntervalAction.java	/^    public IntervalAction reverse() {$/;"	m	class:IntervalAction
reverse	actions/interval/JumpBy.java	/^    public IntervalAction reverse() {$/;"	m	class:JumpBy
reverse	actions/interval/MoveBy.java	/^    public IntervalAction reverse() {$/;"	m	class:MoveBy
reverse	actions/interval/Repeat.java	/^    public IntervalAction reverse() {$/;"	m	class:Repeat
reverse	actions/interval/ReverseTime.java	/^    public IntervalAction reverse() {$/;"	m	class:ReverseTime
reverse	actions/interval/RotateBy.java	/^    public IntervalAction reverse() {$/;"	m	class:RotateBy
reverse	actions/interval/ScaleBy.java	/^    public IntervalAction reverse() {$/;"	m	class:ScaleBy
reverse	actions/interval/Sequence.java	/^    public IntervalAction reverse() {$/;"	m	class:Sequence
reverse	actions/interval/Spawn.java	/^    public IntervalAction reverse() {$/;"	m	class:Spawn
reverse	actions/interval/TintBy.java	/^    public IntervalAction reverse() {$/;"	m	class:TintBy
ribbon_	nodes/MotionStreak.java	/^    Ribbon ribbon_;$/;"	f	class:MotionStreak
root	tests/MotionStreakTest.java	/^        CocosNode root;$/;"	f	class:MotionStreakTest.Test1
rotate	types/CCAffineTransform.java	/^    public void rotate(double angle) {$/;"	m	class:CCAffineTransform
rotate	types/CCAffineTransform.java	/^    public void rotate(double angle, double px, double py) {$/;"	m	class:CCAffineTransform
rotatePoint	nodes/Ribbon.java	/^    private CCPoint rotatePoint(CCPoint vec, float a) {$/;"	m	class:Ribbon	file:
rotation_	nodes/CocosNode.java	/^    private float rotation_;$/;"	f	class:CocosNode	file:
runAction	nodes/CocosNode.java	/^    public Action runAction(Action action) {$/;"	m	class:CocosNode
runWithScene	nodes/Director.java	/^    public void runWithScene(Scene scene) {$/;"	m	class:Director
runningScene	nodes/Director.java	/^    public Scene runningScene() {$/;"	m	class:Director
runningScene_	nodes/Director.java	/^    private Scene runningScene_;$/;"	f	class:Director	file:
sDisplayNameComparator	Cocos2D.java	/^    private final static Comparator<Map<String, ?>> sDisplayNameComparator = new Comparator<Map<String, ?>>() {$/;"	f	class:Cocos2D	file:
sRect	types/CCRect.java	/^    private static CCRect sRect = new CCRect();$/;"	f	class:CCRect	file:
saveTexParameters	opengl/Texture2D.java	/^    public static void saveTexParameters() {$/;"	m	class:Texture2D
sb	utils/CCFormatter.java	/^    private StringBuilder sb;$/;"	f	class:CCFormatter	file:
scale	nodes/CocosNode.java	/^    public float scale() {$/;"	m	class:CocosNode
scale	nodes/CocosNode.java	/^    public void scale(float s) {$/;"	m	class:CocosNode
scale	types/CCAffineTransform.java	/^    public void scale(double scx, double scy) {$/;"	m	class:CCAffineTransform
scaleX	actions/interval/ScaleTo.java	/^    protected float scaleX;$/;"	f	class:ScaleTo
scaleX_	nodes/CocosNode.java	/^    private float scaleX_;$/;"	f	class:CocosNode	file:
scaleY	actions/interval/ScaleTo.java	/^    protected float scaleY;$/;"	f	class:ScaleTo
scaleY_	nodes/CocosNode.java	/^    private float scaleY_;$/;"	f	class:CocosNode	file:
sceneIdx	tests/AtlasSpriteTest.java	/^    static int sceneIdx = -1;$/;"	f	class:AtlasSpriteTest
sceneIdx	tests/AtlasTest.java	/^    static int sceneIdx = -1;$/;"	f	class:AtlasTest
sceneIdx	tests/CocosNodeTest.java	/^    static int sceneIdx = -1;$/;"	f	class:CocosNodeTest
sceneIdx	tests/DrawPrimitivesTest.java	/^    static int sceneIdx = -1;$/;"	f	class:DrawPrimitivesTest
sceneIdx	tests/EaseActionsTest.java	/^    static int sceneIdx = -1;$/;"	f	class:EaseActionsTest
sceneIdx	tests/MotionStreakTest.java	/^    static int sceneIdx = -1;$/;"	f	class:MotionStreakTest
sceneIdx	tests/ParallaxTest.java	/^    static int sceneIdx = -1;$/;"	f	class:ParallaxTest
sceneIdx	tests/ParticleTest.java	/^    static int sceneIdx = -1;$/;"	f	class:ParticleTest
sceneIdx	tests/SpritesTest.java	/^    static int sceneIdx = -1;$/;"	f	class:SpritesTest
sceneIdx	tests/TransitionsTest.java	/^    static int sceneIdx = 0;$/;"	f	class:TransitionsTest
sceneOrder	transitions/FadeTRTransition.java	/^    public void sceneOrder()$/;"	m	class:FadeTRTransition
sceneOrder	transitions/PageTurnTransition.java	/^    public void sceneOrder()$/;"	m	class:PageTurnTransition
sceneOrder	transitions/SlideInBTransition.java	/^    public void sceneOrder() {$/;"	m	class:SlideInBTransition
sceneOrder	transitions/SlideInLTransition.java	/^    public void sceneOrder() {$/;"	m	class:SlideInLTransition
sceneOrder	transitions/SlideInRTransition.java	/^    public void sceneOrder() {$/;"	m	class:SlideInRTransition
sceneOrder	transitions/SlideInTTransition.java	/^    public void sceneOrder() {$/;"	m	class:SlideInTTransition
sceneOrder	transitions/TransitionScene.java	/^    protected void sceneOrder() {$/;"	m	class:TransitionScene
sceneOrder	transitions/TurnOffTilesTransition.java	/^    public void sceneOrder()$/;"	m	class:TurnOffTilesTransition
scenesStack_	nodes/Director.java	/^    private ArrayList<Scene> scenesStack_;$/;"	f	class:Director	file:
schedule	actions/Scheduler.java	/^    public void schedule(Timer t) {$/;"	m	class:Scheduler
schedule	nodes/CocosNode.java	/^    public void schedule(String selector) {$/;"	m	class:CocosNode
schedule	nodes/CocosNode.java	/^    public void schedule(String selector, float interval) {$/;"	m	class:CocosNode
scheduledMethods	actions/Scheduler.java	/^    ArrayList<Timer> scheduledMethods;$/;"	f	class:Scheduler
scheduledSelectors	nodes/CocosNode.java	/^    private HashMap<String, Scheduler.Timer> scheduledSelectors;$/;"	f	class:CocosNode	file:
selected	menus/MenuItem.java	/^    public void selected() {$/;"	m	class:MenuItem
selected	menus/MenuItemAtlasSprite.java	/^    public void selected() {$/;"	m	class:MenuItemAtlasSprite
selected	menus/MenuItemLabel.java	/^    public void selected() {$/;"	m	class:MenuItemLabel
selected	menus/MenuItemToggle.java	/^    public void selected() {$/;"	m	class:MenuItemToggle
selectedImage_	menus/MenuItemSprite.java	/^    protected CocosNode selectedImage_;$/;"	f	class:MenuItemSprite
selectedIndex	menus/MenuItemToggle.java	/^    public int selectedIndex() {$/;"	m	class:MenuItemToggle
selectedIndex_	menus/MenuItemToggle.java	/^    private int selectedIndex_;$/;"	f	class:MenuItemToggle	file:
selectedItem	menus/Menu.java	/^    private MenuItem selectedItem;$/;"	f	class:Menu	file:
selectedItem	menus/MenuItemToggle.java	/^    public MenuItem selectedItem() {$/;"	m	class:MenuItemToggle
selector	actions/Scheduler.java	/^        private String selector;$/;"	f	class:Scheduler.Timer	file:
selector	actions/instant/CallFunc.java	/^    protected String selector;$/;"	f	class:CallFunc
selector	menus/MenuItem.java	/^    protected String selector;$/;"	f	class:MenuItem
sensorManager	layers/Layer.java	/^    protected final SensorManager sensorManager;$/;"	f	class:Layer
serialVersionUID	types/CCAffineTransform.java	/^    private static final long serialVersionUID = 1330973210523860834L;$/;"	f	class:CCAffineTransform	file:
serialVersionUID	types/NoninvertibleTransformException.java	/^    private static final long serialVersionUID = 6137225240503990466L;$/;"	f	class:NoninvertibleTransformException	file:
set2DProjection	grid/GridBase.java	/^    public void set2DProjection(GL10 gl) {$/;"	m	class:GridBase
set2Dprojection	nodes/Director.java	/^    private void set2Dprojection(GL10 gl) {$/;"	m	class:Director	file:
set3DProjection	grid/GridBase.java	/^    public void set3DProjection(GL10 gl) {$/;"	m	class:GridBase
set3Dprojection	nodes/Director.java	/^    private void set3Dprojection(GL10 gl) {$/;"	m	class:Director	file:
setActive	grid/GridBase.java	/^    public void setActive(boolean flag) {$/;"	m	class:GridBase
setAliasTexParameters	opengl/Texture2D.java	/^    public static void setAliasTexParameters() {$/;"	m	class:Texture2D
setAlphaBlending	nodes/Director.java	/^    public void setAlphaBlending(GL10 gl, boolean on) {$/;"	m	class:Director
setAnchorPoint	nodes/AtlasSprite.java	/^    public void setAnchorPoint(float x, float y) {$/;"	m	class:AtlasSprite
setAnchorPoint	nodes/CocosNode.java	/^    public void setAnchorPoint(float x, float y) {$/;"	m	class:CocosNode
setAnimationInterval	nodes/Director.java	/^    public void setAnimationInterval(double interval) {$/;"	m	class:Director
setAntiAliasTexParameters	opengl/Texture2D.java	/^    public static void setAntiAliasTexParameters() {$/;"	m	class:Texture2D
setBlendFunc	nodes/MotionStreak.java	/^    public void setBlendFunc(CCBlendFunc blendFunc) {$/;"	m	class:MotionStreak
setBlendFunc	nodes/Ribbon.java	/^    public void setBlendFunc(CCBlendFunc blendFunc) {$/;"	m	class:Ribbon
setCenter	opengl/Camera.java	/^    public void setCenter(float x, float y, float z) {$/;"	m	class:Camera
setChild	nodes/ParallaxNode.java	/^        public void setChild(CocosNode child) {$/;"	m	class:ParallaxNode.CCPointObject
setColor	layers/ColorLayer.java	/^    public void setColor(CCColor3B color) {$/;"	m	class:ColorLayer
setColor	menus/MenuItemLabel.java	/^    public void setColor(CCColor3B color) {$/;"	m	class:MenuItemLabel
setColor	menus/MenuItemSprite.java	/^    public void setColor(CCColor3B color) {$/;"	m	class:MenuItemSprite
setColor	menus/MenuItemToggle.java	/^    public void setColor(CCColor3B color) {$/;"	m	class:MenuItemToggle
setColor	nodes/AtlasNode.java	/^    public void setColor(CCColor3B color) {$/;"	m	class:AtlasNode
setColor	nodes/AtlasSprite.java	/^    public void setColor(CCColor3B color) {$/;"	m	class:AtlasSprite
setColor	nodes/CocosNode.java	/^        public void setColor(CCColor3B color);$/;"	m	interface:CocosNode.CocosNodeRGBA
setColor	nodes/TextureNode.java	/^    public void setColor(CCColor3B color) {$/;"	m	class:TextureNode
setContentSize	layers/ColorLayer.java	/^    public void setContentSize(float w, float h) {$/;"	m	class:ColorLayer
setContentSize	nodes/CocosNode.java	/^    public void setContentSize(float w, float h) {$/;"	m	class:CocosNode
setDefaultProjection	nodes/Director.java	/^    private void setDefaultProjection(GL10 gl) {$/;"	m	class:Director	file:
setDepthTest	nodes/Director.java	/^    public void setDepthTest(GL10 gl, boolean on) {$/;"	m	class:Director
setDeviceOrientation	nodes/Director.java	/^    public void setDeviceOrientation(int orientation) {$/;"	m	class:Director
setDirty	opengl/Camera.java	/^    public void setDirty(boolean value) {$/;"	m	class:Camera
setDisabledColor	menus/MenuItemLabel.java	/^    public void setDisabledColor(CCColor3B color) {$/;"	m	class:MenuItemLabel
setDispatchEvents	events/TouchDispatcher.java	/^    public void setDispatchEvents(boolean b) {$/;"	m	class:TouchDispatcher
setDisplayFPS	nodes/Director.java	/^    public void setDisplayFPS(boolean value) {$/;"	m	class:Director
setDisplayFrame	nodes/AtlasSprite.java	/^    public void setDisplayFrame(Object newFrame) {$/;"	m	class:AtlasSprite
setDisplayFrame	nodes/AtlasSprite.java	/^    public void setDisplayFrame(String animationName, int frameIndex) {$/;"	m	class:AtlasSprite
setDisplayFrame	nodes/CocosNode.java	/^        public void setDisplayFrame(Object newFrame);$/;"	m	interface:CocosNode.CocosNodeFrames
setDisplayFrame	nodes/CocosNode.java	/^        public void setDisplayFrame(String animationName, int frameIndex);$/;"	m	interface:CocosNode.CocosNodeFrames
setDisplayFrame	nodes/Sprite.java	/^    public void setDisplayFrame(Object frame) {$/;"	m	class:Sprite
setDisplayFrame	nodes/Sprite.java	/^    public void setDisplayFrame(String animationName, int frameIndex) {$/;"	m	class:Sprite
setDuration	actions/base/FiniteTimeAction.java	/^    public void setDuration(float duration) {$/;"	m	class:FiniteTimeAction
setDuration	particlesystem/ParticleSystem.java	/^    public void setDuration(float duration) {$/;"	m	class:ParticleSystem
setEmitterPosition	tests/ParticleTest.java	/^        public void setEmitterPosition()$/;"	m	class:ParticleTest.ParticleDemo
setEye	opengl/Camera.java	/^    public void setEye(float x, float y, float z) {$/;"	m	class:Camera
setFlipX	nodes/AtlasSprite.java	/^    public void setFlipX(boolean b)$/;"	m	class:AtlasSprite
setFlipY	nodes/AtlasSprite.java	/^    public void setFlipY(boolean b)$/;"	m	class:AtlasSprite
setFontName	menus/MenuItemFont.java	/^    public static void setFontName(String n) {$/;"	m	class:MenuItemFont
setFontSize	menus/MenuItemFont.java	/^    public static void setFontSize(int s) {$/;"	m	class:MenuItemFont
setGravity	particlesystem/ParticleSystem.java	/^    public void setGravity(CCPoint gravity) {$/;"	m	class:ParticleSystem
setGrid	nodes/CocosNode.java	/^    public void setGrid(GridBase grid) {$/;"	m	class:CocosNode
setIndex	nodes/AtlasSprite.java	/^    public void setIndex(int index) {$/;"	m	class:AtlasSprite
setInterval	actions/Scheduler.java	/^        public void setInterval(float i) {$/;"	m	class:Scheduler.Timer
setIsAccelerometerEnabled	layers/Layer.java	/^    public void setIsAccelerometerEnabled(boolean enabled)$/;"	m	class:Layer
setIsEnabled	menus/MenuItem.java	/^    public void setIsEnabled(boolean enabled) {$/;"	m	class:MenuItem
setIsEnabled	menus/MenuItemAtlasSprite.java	/^    public void setIsEnabled(boolean enabled) {$/;"	m	class:MenuItemAtlasSprite
setIsEnabled	menus/MenuItemLabel.java	/^    public void setIsEnabled(boolean enabled) {$/;"	m	class:MenuItemLabel
setIsEnabled	menus/MenuItemToggle.java	/^    public void setIsEnabled(boolean enabled) {$/;"	m	class:MenuItemToggle
setIsTouchEnabled	layers/Layer.java	/^    public void setIsTouchEnabled(boolean enabled)$/;"	m	class:Layer
setLabel	menus/MenuItemLabel.java	/^    public void setLabel(CocosNodeLabel label) {$/;"	m	class:MenuItemLabel
setLandscape	nodes/Director.java	/^    public void setLandscape(boolean on) {$/;"	m	class:Director
setLife	particlesystem/ParticleSystem.java	/^    public void setLife(float life) {$/;"	m	class:ParticleSystem
setNewScene	transitions/TransitionScene.java	/^    public void setNewScene(float dt) {$/;"	m	class:TransitionScene
setNextScene	nodes/Director.java	/^    public void setNextScene() {$/;"	m	class:Director
setOpacity	layers/ColorLayer.java	/^    public void setOpacity(int o) {$/;"	m	class:ColorLayer
setOpacity	menus/MenuItemLabel.java	/^    public void setOpacity(int opacity) {$/;"	m	class:MenuItemLabel
setOpacity	menus/MenuItemSprite.java	/^    public void setOpacity(int opacity) {$/;"	m	class:MenuItemSprite
setOpacity	menus/MenuItemToggle.java	/^    public void setOpacity(byte opacity) {$/;"	m	class:MenuItemToggle
setOpacity	nodes/AtlasNode.java	/^    public void setOpacity(int opacity) {$/;"	m	class:AtlasNode
setOpacity	nodes/AtlasSprite.java	/^    public void setOpacity(int opacity) {$/;"	m	class:AtlasSprite
setOpacity	nodes/CocosNode.java	/^        public void setOpacity(int opacity);$/;"	m	interface:CocosNode.CocosNodeRGBA
setOpacity	nodes/TextureNode.java	/^    public void setOpacity(int opacity) {$/;"	m	class:TextureNode
setOriginalTarget	actions/base/Action.java	/^    public void setOriginalTarget(CocosNode value) {$/;"	m	class:Action
setParent	nodes/CocosNode.java	/^    public void setParent(CocosNode parent) {$/;"	m	class:CocosNode
setPixelFormat	nodes/Director.java	/^    public void setPixelFormat(int format) {$/;"	m	class:Director
setPosition	menus/MenuItemAtlasSprite.java	/^    public void setPosition(float x, float y) {$/;"	m	class:MenuItemAtlasSprite
setPosition	nodes/AtlasSprite.java	/^    public void setPosition(float x, float y) {$/;"	m	class:AtlasSprite
setPosition	nodes/CocosNode.java	/^    public void setPosition(float x, float y) {$/;"	m	class:CocosNode
setPositionType	particlesystem/ParticleSystem.java	/^    public void setPositionType(int type) {$/;"	m	class:ParticleSystem
setPriority	events/TouchDispatcher.java	/^    public void setPriority(int priority, TouchHandler delegate)$/;"	m	class:TouchDispatcher
setPriority	events/TouchHandler.java	/^    public void setPriority(int prio) {$/;"	m	class:TouchHandler
setRelativeAnchorPoint	nodes/AtlasSprite.java	/^    public void setRelativeAnchorPoint(boolean relative) {$/;"	m	class:AtlasSprite
setRelativeAnchorPoint	nodes/CocosNode.java	/^    public void setRelativeAnchorPoint(boolean newValue) {$/;"	m	class:CocosNode
setRotation	menus/MenuItemAtlasSprite.java	/^    public void setRotation(float angle) {$/;"	m	class:MenuItemAtlasSprite
setRotation	nodes/AtlasSprite.java	/^    public void setRotation(float rot) {$/;"	m	class:AtlasSprite
setRotation	nodes/CocosNode.java	/^    public void setRotation(float rot) {$/;"	m	class:CocosNode
setScale	menus/MenuItemAtlasSprite.java	/^    public void setScale(float scale) {$/;"	m	class:MenuItemAtlasSprite
setScale	nodes/AtlasSprite.java	/^    public void setScale(float s) {$/;"	m	class:AtlasSprite
setScale	nodes/CocosNode.java	/^    public void setScale(float s) {$/;"	m	class:CocosNode
setScaleX	nodes/AtlasSprite.java	/^    public void setScaleX(float sx) {$/;"	m	class:AtlasSprite
setScaleX	nodes/CocosNode.java	/^    public void setScaleX(float sx) {$/;"	m	class:CocosNode
setScaleY	nodes/AtlasSprite.java	/^    public void setScaleY(float sy) {$/;"	m	class:AtlasSprite
setScaleY	nodes/CocosNode.java	/^    public void setScaleY(float sy) {$/;"	m	class:CocosNode
setSelectedIndex	menus/MenuItemToggle.java	/^    public void setSelectedIndex(int index) {$/;"	m	class:MenuItemToggle
setSelectedItem	menus/Menu.java	/^    public void setSelectedItem(MenuItem selectedItem) {$/;"	m	class:Menu
setSource	particlesystem/ParticleSystem.java	/^    public void setSource(CCPoint source) {$/;"	m	class:ParticleSystem
setSpeed	actions/base/Speed.java	/^    public void setSpeed(float speed) {$/;"	m	class:Speed
setString	menus/MenuItemLabel.java	/^    public void setString(String string) {$/;"	m	class:MenuItemLabel
setString	nodes/CocosNode.java	/^        public void setString(String label);$/;"	m	interface:CocosNode.CocosNodeLabel
setString	nodes/Label.java	/^    public void setString(String string) {$/;"	m	class:Label
setString	nodes/LabelAtlas.java	/^    public void setString(String newString) {$/;"	m	class:LabelAtlas
setTag	actions/base/Action.java	/^    public void setTag(int value) {$/;"	m	class:Action
setTarget	actions/base/Action.java	/^    public void setTarget(CocosNode value) {$/;"	m	class:Action
setTexParameters	opengl/Texture2D.java	/^    public static void setTexParameters(CCTexParams texParams) {$/;"	m	class:Texture2D
setTexture	nodes/AtlasNode.java	/^    public void setTexture(Texture2D texture) {$/;"	m	class:AtlasNode
setTexture	nodes/CocosNode.java	/^        public void setTexture(Texture2D texture);$/;"	m	interface:CocosNode.CocosNodeTexture
setTexture	nodes/MotionStreak.java	/^    public void setTexture(Texture2D texture) {$/;"	m	class:MotionStreak
setTexture	nodes/Ribbon.java	/^    public void setTexture(Texture2D texture) {$/;"	m	class:Ribbon
setTexture	nodes/TextureNode.java	/^    public void setTexture(Texture2D texture) {$/;"	m	class:TextureNode
setTexture	opengl/TextureAtlas.java	/^    public void setTexture(Texture2D tex) {$/;"	m	class:TextureAtlas
setTexture	particlesystem/ParticleSystem.java	/^    public void setTexture(Texture2D tex) {$/;"	m	class:ParticleSystem
setTexture2D	nodes/Director.java	/^    public void setTexture2D(GL10 gl, boolean on) {$/;"	m	class:Director
setTextureRect	nodes/AtlasSprite.java	/^    public void setTextureRect(CCRect rect) {$/;"	m	class:AtlasSprite
setTile	grid/TiledGrid3D.java	/^    public void setTile(CCGridSize pos, CCQuad3 coords) {$/;"	m	class:TiledGrid3D
setTile	nodes/TileMapAtlas.java	/^    public void setTile(CCRGBB tile, CCGridSize pos) {$/;"	m	class:TileMapAtlas
setTimeScale	actions/Scheduler.java	/^    public void setTimeScale(float ts) {$/;"	m	class:Scheduler
setToIdentity	types/CCAffineTransform.java	/^    public void setToIdentity() {$/;"	m	class:CCAffineTransform
setToRotation	types/CCAffineTransform.java	/^    public void setToRotation(double angle) {$/;"	m	class:CCAffineTransform
setToRotation	types/CCAffineTransform.java	/^    public void setToRotation(double angle, double px, double py) {$/;"	m	class:CCAffineTransform
setToScale	types/CCAffineTransform.java	/^    public void setToScale(double scx, double scy) {$/;"	m	class:CCAffineTransform
setToShear	types/CCAffineTransform.java	/^    public void setToShear(double shx, double shy) {$/;"	m	class:CCAffineTransform
setToTranslation	types/CCAffineTransform.java	/^    public void setToTranslation(double mx, double my) {$/;"	m	class:CCAffineTransform
setTransform	types/CCAffineTransform.java	/^    public void setTransform(CCAffineTransform t) {$/;"	m	class:CCAffineTransform
setTransform	types/CCAffineTransform.java	/^    public void setTransform(double m00, double m10, double m01, double m11, double m02, double m12) {$/;"	m	class:CCAffineTransform
setUp	opengl/Camera.java	/^    public void setUp(float x, float y, float z) {$/;"	m	class:Camera
setUserData	nodes/CocosNode.java	/^    public void setUserData(Object data) {$/;"	m	class:CocosNode
setVertex	actions/grid/Grid3DAction.java	/^    public void setVertex(CCGridSize pos, CCVertex3D vertex) {$/;"	m	class:Grid3DAction
setVertex	grid/Grid3D.java	/^    public void setVertex(CCGridSize pos, CCVertex3D vertex) {$/;"	m	class:Grid3D
setVertexZ	nodes/AtlasSprite.java	/^    public void setVertexZ(float z) {$/;"	m	class:AtlasSprite
setVertexZ	nodes/CocosNode.java	/^    public void setVertexZ(float z) {$/;"	m	class:CocosNode
setVisible	nodes/AtlasSprite.java	/^    public void setVisible(boolean v) {$/;"	m	class:AtlasSprite
setVisible	nodes/CocosNode.java	/^    public void setVisible(boolean visible) {$/;"	m	class:CocosNode
setZOrder	nodes/CocosNode.java	/^    public void setZOrder(int z) {$/;"	m	class:CocosNode
setprojection	nodes/Director.java	/^    private void setprojection(GL10 gl, int projection) {$/;"	m	class:Director	file:
sharedDirector	nodes/Director.java	/^    public static Director sharedDirector() {$/;"	m	class:Director
sharedDispatcher	events/TouchDispatcher.java	/^    public static TouchDispatcher sharedDispatcher() {$/;"	m	class:TouchDispatcher
sharedManager	actions/ActionManager.java	/^    public static ActionManager sharedManager() {$/;"	m	class:ActionManager
sharedScheduler	actions/Scheduler.java	/^    public static Scheduler sharedScheduler() {$/;"	m	class:Scheduler
sharedTextureManager	nodes/TextureManager.java	/^    public static TextureManager sharedTextureManager() {$/;"	m	class:TextureManager
shear	types/CCAffineTransform.java	/^    public void shear(double shx, double shy) {$/;"	m	class:CCAffineTransform
shouldNotCrash	tests/CocosNodeTest.java	/^        public void shouldNotCrash(float delta) {$/;"	m	class:CocosNodeTest.Test7
showFPS	nodes/Director.java	/^    private void showFPS(GL10 gl) {$/;"	m	class:Director	file:
sideOfLine	nodes/Ribbon.java	/^    public float sideOfLine(CCPoint p, CCPoint l1, CCPoint l2) {$/;"	m	class:Ribbon
singleStep	box2d/Settings.java	/^    public int singleStep;$/;"	f	class:Settings
size	particlesystem/ParticleSystem.java	/^        float size;$/;"	f	class:ParticleSystem.Particle
size	particlesystem/ParticleSystem.java	/^    protected float size;$/;"	f	class:ParticleSystem
size	types/CCColor3B.java	/^    public static final int size = 3;$/;"	f	class:CCColor3B
size	types/CCColor4B.java	/^    public static final int size = 4;$/;"	f	class:CCColor4B
size	types/CCPointSize.java	/^    public float size;$/;"	f	class:CCPointSize
size	types/CCPointSprite.java	/^    public float size;$/;"	f	class:CCPointSprite
size	types/CCQuad2.java	/^    public static final int size = 4 * 2;$/;"	f	class:CCQuad2
size	types/CCQuad3.java	/^    public static final int size = 4 * 3;$/;"	f	class:CCQuad3
size	types/CCRect.java	/^    public CCSize size;$/;"	f	class:CCRect
sizeVar	particlesystem/ParticleSystem.java	/^    protected float sizeVar;$/;"	f	class:ParticleSystem
source	particlesystem/ParticleSystem.java	/^    protected CCPoint source = CCPoint.zero();$/;"	f	class:ParticleSystem
speed	actions/base/Speed.java	/^    protected float speed;$/;"	f	class:Speed
speed	particlesystem/ParticleSystem.java	/^    protected float speed;$/;"	f	class:ParticleSystem
speedVar	particlesystem/ParticleSystem.java	/^    protected float speedVar;$/;"	f	class:ParticleSystem
spherical	actions/camera/OrbitCamera.java	/^    private void spherical(float newRadius[], float zenith[], float azimuth[]) {$/;"	m	class:OrbitCamera	file:
split	actions/interval/Sequence.java	/^    private float split;$/;"	f	class:Sequence	file:
sprite	nodes/AtlasSprite.java	/^    public static AtlasSprite sprite(CCRect rect, AtlasSpriteManager manager) {$/;"	m	class:AtlasSprite
sprite	nodes/Sprite.java	/^    public static Sprite sprite(Bitmap image) {$/;"	m	class:Sprite
sprite	nodes/Sprite.java	/^    public static Sprite sprite(String filename) {$/;"	m	class:Sprite
sprite	nodes/Sprite.java	/^    public static Sprite sprite(Texture2D tex) {$/;"	m	class:Sprite
squareColors_	layers/ColorLayer.java	/^    private ByteBuffer squareColors_;$/;"	f	class:ColorLayer	file:
squareVertices_	layers/ColorLayer.java	/^    private FloatBuffer squareVertices_;$/;"	f	class:ColorLayer	file:
src	types/CCBlendFunc.java	/^    public int src;$/;"	f	class:CCBlendFunc
start	actions/base/Action.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:Action
start	actions/base/RepeatForever.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:RepeatForever
start	actions/base/Speed.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:Speed
start	actions/camera/CameraAction.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:CameraAction
start	actions/camera/OrbitCamera.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:OrbitCamera
start	actions/ease/EaseAction.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:EaseAction
start	actions/grid/GridAction.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:GridAction
start	actions/instant/CallFunc.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:CallFunc
start	actions/instant/Hide.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:Hide
start	actions/instant/Place.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:Place
start	actions/instant/Show.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:Show
start	actions/instant/ToggleVisibility.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:ToggleVisibility
start	actions/interval/Animate.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:Animate
start	actions/interval/BezierBy.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:BezierBy
start	actions/interval/FadeTo.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:FadeTo
start	actions/interval/IntervalAction.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:IntervalAction
start	actions/interval/JumpBy.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:JumpBy
start	actions/interval/JumpTo.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:JumpTo
start	actions/interval/MoveBy.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:MoveBy
start	actions/interval/MoveTo.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:MoveTo
start	actions/interval/Repeat.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:Repeat
start	actions/interval/ReverseTime.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:ReverseTime
start	actions/interval/RotateBy.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:RotateBy
start	actions/interval/RotateTo.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:RotateTo
start	actions/interval/ScaleBy.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:ScaleBy
start	actions/interval/ScaleTo.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:ScaleTo
start	actions/interval/Sequence.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:Sequence
start	actions/interval/Spawn.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:Spawn
start	actions/interval/TintBy.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:TintBy
start	actions/interval/TintTo.java	/^    public void start(CocosNode aTarget) {$/;"	m	class:TintTo
startAngle	actions/interval/RotateBy.java	/^    private float startAngle;$/;"	f	class:RotateBy	file:
startAngle	actions/interval/RotateTo.java	/^    private float startAngle;$/;"	f	class:RotateTo	file:
startAnimation	nodes/Director.java	/^    public void startAnimation() {$/;"	m	class:Director
startColor	particlesystem/ParticleSystem.java	/^    protected CCColorF startColor = new CCColorF();$/;"	f	class:ParticleSystem
startColorVar	particlesystem/ParticleSystem.java	/^    protected CCColorF startColorVar = new CCColorF();$/;"	f	class:ParticleSystem
startPos	particlesystem/ParticleSystem.java	/^        CCPoint startPos = new CCPoint();$/;"	f	class:ParticleSystem.Particle
startPosition	actions/interval/BezierBy.java	/^    private CCPoint startPosition;$/;"	f	class:BezierBy	file:
startPosition	actions/interval/JumpBy.java	/^    protected PointF startPosition;$/;"	f	class:JumpBy
startPosition	types/CCBezierConfig.java	/^    public CCPoint startPosition;$/;"	f	class:CCBezierConfig
startPositionX	actions/interval/MoveTo.java	/^    private float startPositionX;$/;"	f	class:MoveTo	file:
startPositionY	actions/interval/MoveTo.java	/^    private float startPositionY;$/;"	f	class:MoveTo	file:
startScaleX	actions/interval/ScaleTo.java	/^    protected float startScaleX;$/;"	f	class:ScaleTo
startScaleY	actions/interval/ScaleTo.java	/^    protected float startScaleY;$/;"	f	class:ScaleTo
state	menus/Menu.java	/^    private MenuState state;$/;"	f	class:Menu	file:
status	opengl/TGA.java	/^        TGAError status;$/;"	f	class:TGA.ImageTGA
step	actions/base/Action.java	/^    public void step(float dt) {$/;"	m	class:Action
step	actions/base/RepeatForever.java	/^    public void step(float dt) {$/;"	m	class:RepeatForever
step	actions/base/Speed.java	/^    public void step(float dt) {$/;"	m	class:Speed
step	actions/instant/InstantAction.java	/^    public void step(float dt) {$/;"	m	class:InstantAction
step	actions/interval/IntervalAction.java	/^    public void step(float dt) {$/;"	m	class:IntervalAction
step	grid/GridBase.java	/^    protected CCPoint step;$/;"	f	class:GridBase
step	particlesystem/ParticleSystem.java	/^    public void step(float dt) {$/;"	m	class:ParticleSystem
step	tests/AtlasTest.java	/^        public void step(float dt) {$/;"	m	class:AtlasTest.Atlas2
step	tests/ParticleTest.java	/^        public void step(float dt)$/;"	m	class:ParticleTest.ParticleDemo
stop	actions/base/Action.java	/^    public void stop() {$/;"	m	class:Action
stop	actions/base/Speed.java	/^    public void stop() {$/;"	m	class:Speed
stop	actions/ease/EaseAction.java	/^    public void stop() {$/;"	m	class:EaseAction
stop	actions/interval/Animate.java	/^    public void stop() {$/;"	m	class:Animate
stop	actions/interval/Repeat.java	/^    public void stop() {$/;"	m	class:Repeat
stop	actions/interval/ReverseTime.java	/^    public void stop() {$/;"	m	class:ReverseTime
stop	actions/interval/Sequence.java	/^    public void stop() {$/;"	m	class:Sequence
stop	actions/interval/Spawn.java	/^    public void stop() {$/;"	m	class:Spawn
stopAction	nodes/CocosNode.java	/^    public void stopAction(Action action) {$/;"	m	class:CocosNode
stopAction	nodes/CocosNode.java	/^    public void stopAction(int tag) {$/;"	m	class:CocosNode
stopAllActions	nodes/CocosNode.java	/^    public void stopAllActions() {$/;"	m	class:CocosNode
stopAnimation	nodes/Director.java	/^    public void stopAnimation() {$/;"	m	class:Director
stopSystem	particlesystem/ParticleSystem.java	/^    public void stopSystem() {$/;"	m	class:ParticleSystem
streak	tests/MotionStreakTest.java	/^        MotionStreak streak;$/;"	f	class:MotionStreakTest.Test1
string	nodes/LabelAtlas.java	/^    String string;$/;"	f	class:LabelAtlas
subItems_	menus/MenuItemToggle.java	/^    private ArrayList<MenuItem> subItems_;$/;"	f	class:MenuItemToggle	file:
switchTo	layers/MultiplexLayer.java	/^    public void switchTo(int n) {$/;"	m	class:MultiplexLayer
tag	actions/base/Action.java	/^    private int tag;$/;"	f	class:Action	file:
tag_	nodes/CocosNode.java	/^    private int tag_;$/;"	f	class:CocosNode	file:
tamara	tests/EaseActionsTest.java	/^        Sprite tamara;$/;"	f	class:EaseActionsTest.SpriteDemo
tamara	tests/SpritesTest.java	/^        Sprite tamara;$/;"	f	class:SpritesTest.SpriteDemo
tangentialAccel	particlesystem/ParticleSystem.java	/^        float tangentialAccel;$/;"	f	class:ParticleSystem.Particle
tangentialAccel	particlesystem/ParticleSystem.java	/^    protected float tangentialAccel;$/;"	f	class:ParticleSystem
tangentialAccelVar	particlesystem/ParticleSystem.java	/^    protected float tangentialAccelVar;$/;"	f	class:ParticleSystem
target	actions/ActionManager.java	/^        CocosNode target;$/;"	f	class:ActionManager.HashElement
target	actions/Scheduler.java	/^        private Object target;$/;"	f	class:Scheduler.Timer	file:
target	actions/base/Action.java	/^    public CocosNode target;$/;"	f	class:Action
target	tests/MotionStreakTest.java	/^        CocosNode target;$/;"	f	class:MotionStreakTest.Test1
targetCallback	actions/instant/CallFunc.java	/^    protected Object targetCallback;$/;"	f	class:CallFunc
targetCallback	menus/MenuItem.java	/^    protected Object targetCallback;$/;"	f	class:MenuItem
targets	actions/ActionManager.java	/^    private ConcurrentHashMap<CocosNode, HashElement> targets;$/;"	f	class:ActionManager	file:
test	box2d/DestructionListener.java	/^    Test test;$/;"	f	class:DestructionListener
testStopAction	tests/EaseActionsTest.java	/^        public void testStopAction(float dt)$/;"	m	class:EaseActionsTest.SpriteEase
texCoordinates	grid/Grid3D.java	/^    FloatBuffer texCoordinates;$/;"	f	class:Grid3D
texCoordinates	grid/TiledGrid3D.java	/^    FloatBuffer texCoordinates;$/;"	f	class:TiledGrid3D
texCoords_	nodes/AtlasSprite.java	/^    private CCQuad2 texCoords_ = new CCQuad2();$/;"	f	class:AtlasSprite	file:
texParameters	opengl/Texture2D.java	/^    public static CCTexParams texParameters() {$/;"	m	class:Texture2D
texStepX	nodes/AtlasNode.java	/^    protected float texStepX;$/;"	f	class:AtlasNode
texStepY	nodes/AtlasNode.java	/^    protected float texStepY;$/;"	f	class:AtlasNode
texture	grid/GridBase.java	/^    protected Texture2D texture;$/;"	f	class:GridBase
texture	nodes/MotionStreak.java	/^    public Texture2D texture() {$/;"	m	class:MotionStreak
texture	nodes/Ribbon.java	/^    public Texture2D texture() {$/;"	m	class:Ribbon
texture	particlesystem/ParticleSystem.java	/^    protected Texture2D texture;$/;"	f	class:ParticleSystem
textureAtlas	tests/AtlasTest.java	/^        TextureAtlas textureAtlas;$/;"	f	class:AtlasTest.Atlas1
textureAtlas_	nodes/AtlasNode.java	/^    protected TextureAtlas textureAtlas_;$/;"	f	class:AtlasNode
textureAtlas_	nodes/AtlasSprite.java	/^    TextureAtlas textureAtlas_;$/;"	f	class:AtlasSprite
textureAtlas_	nodes/AtlasSpriteManager.java	/^    TextureAtlas textureAtlas_;$/;"	f	class:AtlasSpriteManager
textureCoordinates	opengl/TextureAtlas.java	/^    private FloatBuffer textureCoordinates;$/;"	f	class:TextureAtlas	file:
textureLength_	nodes/Ribbon.java	/^    float textureLength_;$/;"	f	class:Ribbon
texture_	nodes/Ribbon.java	/^    Texture2D texture_;$/;"	f	class:Ribbon
texture_	nodes/TextureNode.java	/^    private Texture2D texture_;$/;"	f	class:TextureNode	file:
texture_	opengl/TextureAtlas.java	/^    private Texture2D texture_;$/;"	f	class:TextureAtlas	file:
textures	nodes/TextureManager.java	/^    private HashMap<String, Texture2D> textures;$/;"	f	class:TextureManager	file:
tgaInfo	nodes/TileMapAtlas.java	/^    public TGA.ImageTGA tgaInfo() {$/;"	m	class:TileMapAtlas
tgaInfo	nodes/TileMapAtlas.java	/^    public TGA.ImageTGA tgaInfo;$/;"	f	class:TileMapAtlas
tick	actions/ActionManager.java	/^    public void tick(float dt) {$/;"	m	class:ActionManager
tick	actions/Scheduler.java	/^    public void tick(float dt) {$/;"	m	class:Scheduler
tick	tests/Box2DTest.java	/^        public void tick(float dt)$/;"	m	class:Box2DTest.Box2DTestLayer
tick	tests/JBox2DTest.java	/^        public synchronized void tick(float delta) {$/;"	m	class:JBox2DTest.JBox2DTestLayer
tile	grid/TiledGrid3D.java	/^    public CCQuad3 tile(CCGridSize pos) {$/;"	m	class:TiledGrid3D
tile	nodes/TileMapAtlas.java	/^    public CCRGBB tile(CCGridSize pos) {$/;"	m	class:TileMapAtlas
tilemap	nodes/TileMapAtlas.java	/^    public static TileMapAtlas tilemap(String tile, String map, int w, int h) {$/;"	m	class:TileMapAtlas
time	tests/AtlasTest.java	/^        float time;$/;"	f	class:AtlasTest.Atlas2
timeScale_	actions/Scheduler.java	/^    private float timeScale_;$/;"	f	class:Scheduler	file:
timerAlloc	nodes/CocosNode.java	/^    private void timerAlloc() {$/;"	m	class:CocosNode	file:
times	actions/interval/Blink.java	/^    private int times;$/;"	f	class:Blink	file:
times	actions/interval/Repeat.java	/^    private int times;$/;"	f	class:Repeat	file:
title	tests/AtlasSpriteTest.java	/^        public String title() {$/;"	m	class:AtlasSpriteTest.Atlas1
title	tests/AtlasSpriteTest.java	/^        public String title() {$/;"	m	class:AtlasSpriteTest.Atlas2
title	tests/AtlasSpriteTest.java	/^        public String title() {$/;"	m	class:AtlasSpriteTest.Atlas3
title	tests/AtlasSpriteTest.java	/^        public String title() {$/;"	m	class:AtlasSpriteTest.Atlas4
title	tests/AtlasSpriteTest.java	/^        public String title() {$/;"	m	class:AtlasSpriteTest.Atlas5
title	tests/AtlasSpriteTest.java	/^        public String title() {$/;"	m	class:AtlasSpriteTest.Atlas6
title	tests/AtlasSpriteTest.java	/^        public abstract String title();$/;"	m	class:AtlasSpriteTest.AtlasSpriteDemo
title	tests/AtlasTest.java	/^        public String title() {$/;"	m	class:AtlasTest.Atlas1
title	tests/AtlasTest.java	/^        public String title() {$/;"	m	class:AtlasTest.Atlas2
title	tests/AtlasTest.java	/^        public String title() {$/;"	m	class:AtlasTest.Atlas3
title	tests/AtlasTest.java	/^        public String title() {$/;"	m	class:AtlasTest.Atlas4
title	tests/AtlasTest.java	/^        public abstract String title();$/;"	m	class:AtlasTest.AtlasDemo
title	tests/CocosNodeTest.java	/^        public String title() {$/;"	m	class:CocosNodeTest.Test1
title	tests/CocosNodeTest.java	/^        public String title() {$/;"	m	class:CocosNodeTest.Test2
title	tests/CocosNodeTest.java	/^        public String title() {$/;"	m	class:CocosNodeTest.Test3
title	tests/CocosNodeTest.java	/^        public String title() {$/;"	m	class:CocosNodeTest.Test4
title	tests/CocosNodeTest.java	/^        public String title() {$/;"	m	class:CocosNodeTest.Test5
title	tests/CocosNodeTest.java	/^        public String title() {$/;"	m	class:CocosNodeTest.Test6
title	tests/CocosNodeTest.java	/^        public String title() {$/;"	m	class:CocosNodeTest.Test7
title	tests/CocosNodeTest.java	/^        public abstract String title();$/;"	m	class:CocosNodeTest.TestDemo
title	tests/DrawPrimitivesTest.java	/^        String title() {$/;"	m	class:DrawPrimitivesTest.TestDemo
title	tests/DrawPrimitivesTest.java	/^        public String title() {$/;"	m	class:DrawPrimitivesTest.Test1
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpeedTest
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEase
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseBack
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseBackInOut
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseBounce
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseBounceInOut
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseElastic
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseElasticInOut
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseExponential
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseExponentialInOut
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseInOut
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseSine
title	tests/EaseActionsTest.java	/^        public String title()$/;"	m	class:EaseActionsTest.SpriteEaseSineInOut
title	tests/EaseActionsTest.java	/^        public abstract String title();$/;"	m	class:EaseActionsTest.SpriteDemo
title	tests/MotionStreakTest.java	/^        public String title() {$/;"	m	class:MotionStreakTest.Test1
title	tests/MotionStreakTest.java	/^        public abstract String title();$/;"	m	class:MotionStreakTest.TestDemo
title	tests/ParallaxTest.java	/^        public String title() {$/;"	m	class:ParallaxTest.Parallax1
title	tests/ParallaxTest.java	/^        public String title() {$/;"	m	class:ParallaxTest.Parallax2
title	tests/ParallaxTest.java	/^        public abstract String title();$/;"	m	class:ParallaxTest.ParallaxDemo
title	tests/ParticleTest.java	/^        public String title() {$/;"	m	class:ParticleTest.DemoExplosion
title	tests/ParticleTest.java	/^        public String title() {$/;"	m	class:ParticleTest.DemoFire
title	tests/ParticleTest.java	/^        public String title() {$/;"	m	class:ParticleTest.DemoFirework
title	tests/ParticleTest.java	/^        public abstract String title();$/;"	m	class:ParticleTest.ParticleDemo
title	tests/SpritesTest.java	/^        protected abstract String title();$/;"	m	class:SpritesTest.SpriteDemo
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteAnimate
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteBezier
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteBlink
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteCallFunc
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteDelayTime
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteFade
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteJump
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteManual
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteMove
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteOrbit
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteRepeat
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteReverse
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteReverseSequence
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteReverseSequence2
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteRotate
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteScale
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteSequence
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteSpawn
title	tests/SpritesTest.java	/^        public String title() {$/;"	m	class:SpritesTest.SpriteTint
tl_x	types/CCQuad2.java	/^    public float tl_x, tl_y;$/;"	f	class:CCQuad2
tl_x	types/CCQuad3.java	/^    public float tl_x, tl_y, tl_z;$/;"	f	class:CCQuad3
tl_y	types/CCQuad2.java	/^    public float tl_x, tl_y;$/;"	f	class:CCQuad2
tl_y	types/CCQuad3.java	/^    public float tl_x, tl_y, tl_z;$/;"	f	class:CCQuad3
tl_z	types/CCQuad3.java	/^    public float tl_x, tl_y, tl_z;$/;"	f	class:CCQuad3
toB	actions/interval/TintTo.java	/^    protected int toR, toG, toB;$/;"	f	class:TintTo
toG	actions/interval/TintTo.java	/^    protected int toR, toG, toB;$/;"	f	class:TintTo
toOpacity	actions/interval/FadeTo.java	/^    byte toOpacity, fromOpacity;$/;"	f	class:FadeTo
toR	actions/interval/TintTo.java	/^    protected int toR, toG, toB;$/;"	f	class:TintTo
toString	actions/ActionManager.java	/^        public String toString() {$/;"	m	class:ActionManager.HashElement
toString	grid/GridBase.java	/^    public String toString() {$/;"	m	class:GridBase
toString	nodes/AtlasSprite.java	/^    public String toString() {$/;"	m	class:AtlasSprite
toString	nodes/AtlasSpriteFrame.java	/^    public String toString() {$/;"	m	class:AtlasSpriteFrame
toString	nodes/CocosNode.java	/^    public String toString() {$/;"	m	class:CocosNode
toString	opengl/Camera.java	/^    public String toString() {$/;"	m	class:Camera
toString	opengl/TextureAtlas.java	/^    public String toString() {$/;"	m	class:TextureAtlas
toString	types/CCAffineTransform.java	/^    public String toString() {$/;"	m	class:CCAffineTransform
toString	types/CCColor3B.java	/^    public String toString() {$/;"	m	class:CCColor3B
toString	types/CCColor4B.java	/^    public String toString() {$/;"	m	class:CCColor4B
toString	types/CCColorF.java	/^    public String toString() {$/;"	m	class:CCColorF
toString	types/CCPoint.java	/^    public String toString() {$/;"	m	class:CCPoint
toString	types/CCQuad2.java	/^    public String toString() {$/;"	m	class:CCQuad2
toString	types/CCQuad3.java	/^    public String toString() {$/;"	m	class:CCQuad3
toString	types/CCRect.java	/^    public String toString() {$/;"	m	class:CCRect
toString	types/CCSize.java	/^    public String toString() {$/;"	m	class:CCSize
toggleCallback	tests/ParticleTest.java	/^        public void toggleCallback()$/;"	m	class:ParticleTest.ParticleDemo
total	actions/interval/Repeat.java	/^    private int total;$/;"	f	class:Repeat	file:
totalParticles	particlesystem/ParticleSystem.java	/^    protected int totalParticles;$/;"	f	class:ParticleSystem
totalQuads_	opengl/TextureAtlas.java	/^    private int totalQuads_;$/;"	f	class:TextureAtlas	file:
totalSprites_	nodes/AtlasSpriteManager.java	/^    int totalSprites_;$/;"	f	class:AtlasSpriteManager
touchHandlers	events/TouchDispatcher.java	/^    private CopyOnWriteArrayList<TouchHandler> touchHandlers;$/;"	f	class:TouchDispatcher	file:
touchesBegan	events/TouchDispatcher.java	/^    public void touchesBegan(MotionEvent event)$/;"	m	class:TouchDispatcher
touchesCancelled	events/TouchDispatcher.java	/^    public void touchesCancelled(MotionEvent event)$/;"	m	class:TouchDispatcher
touchesEnded	events/TouchDispatcher.java	/^    public void touchesEnded(MotionEvent event)$/;"	m	class:TouchDispatcher
touchesMoved	events/TouchDispatcher.java	/^    public void touchesMoved(MotionEvent event)$/;"	m	class:TouchDispatcher
tr_x	types/CCQuad2.java	/^    public float tr_x, tr_y;$/;"	f	class:CCQuad2
tr_x	types/CCQuad3.java	/^    public float tr_x, tr_y, tr_z;$/;"	f	class:CCQuad3
tr_y	types/CCQuad2.java	/^    public float tr_x, tr_y;$/;"	f	class:CCQuad2
tr_y	types/CCQuad3.java	/^    public float tr_x, tr_y, tr_z;$/;"	f	class:CCQuad3
tr_z	types/CCQuad3.java	/^    public float tr_x, tr_y, tr_z;$/;"	f	class:CCQuad3
transform	nodes/CocosNode.java	/^    public void transform(GL10 gl) {$/;"	m	class:CocosNode
transform	types/CCAffineTransform.java	/^    public CCPoint transform(CCPoint src, CCPoint dst) {$/;"	m	class:CCAffineTransform
transform	types/CCAffineTransform.java	/^    public void transform(CCPoint[] src, int srcOff, CCPoint[] dst, int dstOff, int length) {$/;"	m	class:CCAffineTransform
transform	types/CCAffineTransform.java	/^    public void transform(double[] src, int srcOff, double[] dst, int dstOff, int length) {$/;"	m	class:CCAffineTransform
transform	types/CCAffineTransform.java	/^    public void transform(double[] src, int srcOff, float[] dst, int dstOff, int length) {$/;"	m	class:CCAffineTransform
transform	types/CCAffineTransform.java	/^    public void transform(float[] src, int srcOff, double[] dst, int dstOff, int length) {$/;"	m	class:CCAffineTransform
transform	types/CCAffineTransform.java	/^    public void transform(float[] src, int srcOff, float[] dst, int dstOff, int length) {$/;"	m	class:CCAffineTransform
transformAncestors	nodes/CocosNode.java	/^    public void transformAncestors(GL10 gl) {$/;"	m	class:CocosNode
transformAnchor_	nodes/CocosNode.java	/^    private CCPoint transformAnchor_;$/;"	f	class:CocosNode	file:
transform_	nodes/CocosNode.java	/^    private CCAffineTransform transform_, inverse_;$/;"	f	class:CocosNode	file:
transition	transitions/FadeTRTransition.java	/^    public static FadeTRTransition transition(float t, Scene s) {$/;"	m	class:FadeTRTransition
transition	transitions/FadeTransition.java	/^    public static FadeTransition transition(float t, Scene s, CCColor3B rgb) {$/;"	m	class:FadeTransition
transition	transitions/FlipAngularTransition.java	/^    public static FlipAngularTransition transition(float t, Scene s, int orientation) {$/;"	m	class:FlipAngularTransition
transition	transitions/FlipXTransition.java	/^    public static FlipXTransition transition(float t, Scene s, int orientation) {$/;"	m	class:FlipXTransition
transition	transitions/FlipYTransition.java	/^    public static FlipYTransition transition(float t, Scene s, int orientation) {$/;"	m	class:FlipYTransition
transition	transitions/JumpZoomTransition.java	/^    public static JumpZoomTransition transition(float t, Scene s) {$/;"	m	class:JumpZoomTransition
transition	transitions/MoveInBTransition.java	/^    public static MoveInBTransition transition(float t, Scene s) {$/;"	m	class:MoveInBTransition
transition	transitions/MoveInLTransition.java	/^    public static MoveInLTransition transition(float t, Scene s) {$/;"	m	class:MoveInLTransition
transition	transitions/MoveInRTransition.java	/^    public static MoveInRTransition transition(float t, Scene s) {$/;"	m	class:MoveInRTransition
transition	transitions/MoveInTTransition.java	/^    public static MoveInTTransition transition(float t, Scene s) {$/;"	m	class:MoveInTTransition
transition	transitions/PageTurnTransition.java	/^    public static PageTurnTransition transition(float t, Scene s, boolean back) {$/;"	m	class:PageTurnTransition
transition	transitions/RotoZoomTransition.java	/^    public static RotoZoomTransition transition(float t, Scene s) {$/;"	m	class:RotoZoomTransition
transition	transitions/ShrinkGrowTransition.java	/^    public static ShrinkGrowTransition transition(float t, Scene s) {$/;"	m	class:ShrinkGrowTransition
transition	transitions/SlideInBTransition.java	/^    public static SlideInBTransition transition(float t, Scene s) {$/;"	m	class:SlideInBTransition
transition	transitions/SlideInLTransition.java	/^    public static SlideInLTransition transition(float t, Scene s) {$/;"	m	class:SlideInLTransition
transition	transitions/SlideInRTransition.java	/^    public static SlideInRTransition transition(float t, Scene s) {$/;"	m	class:SlideInRTransition
transition	transitions/SlideInTTransition.java	/^    public static SlideInTTransition transition(float t, Scene s) {$/;"	m	class:SlideInTTransition
transition	transitions/TransitionScene.java	/^    public static TransitionScene transition(float t, Scene s) {$/;"	m	class:TransitionScene
transition	transitions/TurnOffTilesTransition.java	/^    public static TransitionScene transition(float t, Scene s) {$/;"	m	class:TurnOffTilesTransition
transition	transitions/ZoomFlipAngularTransition.java	/^    public static ZoomFlipAngularTransition transition(float t, Scene s, int orientation) {$/;"	m	class:ZoomFlipAngularTransition
transition	transitions/ZoomFlipXTransition.java	/^    public static ZoomFlipXTransition transition(float t, Scene s, int orientation) {$/;"	m	class:ZoomFlipXTransition
transition	transitions/ZoomFlipYTransition.java	/^    public static ZoomFlipYTransition transition(float t, Scene s, int orientation) {$/;"	m	class:ZoomFlipYTransition
transitions	tests/AtlasSpriteTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:AtlasSpriteTest
transitions	tests/AtlasTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:AtlasTest
transitions	tests/CocosNodeTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:CocosNodeTest
transitions	tests/DrawPrimitivesTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:DrawPrimitivesTest
transitions	tests/EaseActionsTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:EaseActionsTest
transitions	tests/MotionStreakTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:MotionStreakTest
transitions	tests/ParallaxTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:ParallaxTest
transitions	tests/ParticleTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:ParticleTest
transitions	tests/SpritesTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:SpritesTest
transitions	tests/TransitionsTest.java	/^    static Class<?> transitions[] = {$/;"	f	class:TransitionsTest
translate	types/CCAffineTransform.java	/^    public void translate(double mx, double my) {$/;"	m	class:CCAffineTransform
two	actions/interval/Spawn.java	/^    private FiniteTimeAction two;$/;"	f	class:Spawn	file:
type	opengl/TGA.java	/^        int type, pixelDepth;$/;"	f	class:TGA.ImageTGA
type	types/CCAffineTransform.java	/^    transient int type;$/;"	f	class:CCAffineTransform
unregisterWithAccelerometer	layers/Layer.java	/^    protected void unregisterWithAccelerometer()$/;"	m	class:Layer
unschedule	actions/Scheduler.java	/^    public void unschedule(Timer t) {$/;"	m	class:Scheduler
unschedule	nodes/CocosNode.java	/^    public void unschedule(String selector) {$/;"	m	class:CocosNode
unselected	menus/MenuItem.java	/^    public void unselected() {$/;"	m	class:MenuItem
unselected	menus/MenuItemAtlasSprite.java	/^    public void unselected() {$/;"	m	class:MenuItemAtlasSprite
unselected	menus/MenuItemLabel.java	/^    public void unselected() {$/;"	m	class:MenuItemLabel
unselected	menus/MenuItemToggle.java	/^    public void unselected() {$/;"	m	class:MenuItemToggle
upX	opengl/Camera.java	/^    private float upX;$/;"	f	class:Camera	file:
upXOrig	actions/camera/CameraAction.java	/^    protected float upXOrig;$/;"	f	class:CameraAction
upY	opengl/Camera.java	/^    private float upY;$/;"	f	class:Camera	file:
upYOrig	actions/camera/CameraAction.java	/^    protected float upYOrig;$/;"	f	class:CameraAction
upZ	opengl/Camera.java	/^    private float upZ;$/;"	f	class:Camera	file:
upZOrig	actions/camera/CameraAction.java	/^    protected float upZOrig;$/;"	f	class:CameraAction
update	actions/base/Action.java	/^    public void update(float time) {$/;"	m	class:Action
update	actions/camera/OrbitCamera.java	/^    public void update(float t) {$/;"	m	class:OrbitCamera
update	actions/ease/EaseAction.java	/^    public void update(float t) {$/;"	m	class:EaseAction
update	actions/ease/EaseBackIn.java	/^    public void update(float t) {$/;"	m	class:EaseBackIn
update	actions/ease/EaseBackInOut.java	/^    public void update(float t) {$/;"	m	class:EaseBackInOut
update	actions/ease/EaseBackOut.java	/^    public void update(float t) {$/;"	m	class:EaseBackOut
update	actions/ease/EaseBounce.java	/^    public abstract void update(float t);$/;"	m	class:EaseBounce
update	actions/ease/EaseBounceIn.java	/^    public void update(float t) {$/;"	m	class:EaseBounceIn
update	actions/ease/EaseBounceInOut.java	/^    public void update(float t) {$/;"	m	class:EaseBounceInOut
update	actions/ease/EaseBounceOut.java	/^    public void update(float t) {$/;"	m	class:EaseBounceOut
update	actions/ease/EaseElasticIn.java	/^    public void update(float t) {$/;"	m	class:EaseElasticIn
update	actions/ease/EaseElasticInOut.java	/^    public void update(float t) {$/;"	m	class:EaseElasticInOut
update	actions/ease/EaseElasticOut.java	/^    public void update(float t) {$/;"	m	class:EaseElasticOut
update	actions/ease/EaseExponentialIn.java	/^    public void update(float t) {$/;"	m	class:EaseExponentialIn
update	actions/ease/EaseExponentialInOut.java	/^    public void update(float t) {$/;"	m	class:EaseExponentialInOut
update	actions/ease/EaseExponentialOut.java	/^    public void update(float t) {$/;"	m	class:EaseExponentialOut
update	actions/ease/EaseIn.java	/^    public void update(float t) {$/;"	m	class:EaseIn
update	actions/ease/EaseInOut.java	/^    public void update(float t) {$/;"	m	class:EaseInOut
update	actions/ease/EaseOut.java	/^    public void update(float t) {$/;"	m	class:EaseOut
update	actions/ease/EaseSineIn.java	/^    public void update(float t) {$/;"	m	class:EaseSineIn
update	actions/ease/EaseSineInOut.java	/^    public void update(float t) {$/;"	m	class:EaseSineInOut
update	actions/ease/EaseSineOut.java	/^    public void update(float t) {$/;"	m	class:EaseSineOut
update	actions/instant/InstantAction.java	/^    public void update(float t) {$/;"	m	class:InstantAction
update	actions/interval/Animate.java	/^    public void update(float t) {$/;"	m	class:Animate
update	actions/interval/BezierBy.java	/^    public void update(float t) {$/;"	m	class:BezierBy
update	actions/interval/Blink.java	/^    public void update(float t) {$/;"	m	class:Blink
update	actions/interval/DelayTime.java	/^    public void update(float t) {$/;"	m	class:DelayTime
update	actions/interval/FadeIn.java	/^    public void update(float t) {$/;"	m	class:FadeIn
update	actions/interval/FadeOut.java	/^    public void update(float t) {$/;"	m	class:FadeOut
update	actions/interval/FadeTo.java	/^    public void update(float t) {$/;"	m	class:FadeTo
update	actions/interval/JumpBy.java	/^    public void update(float t) {$/;"	m	class:JumpBy
update	actions/interval/MoveTo.java	/^    public void update(float t) {$/;"	m	class:MoveTo
update	actions/interval/Repeat.java	/^    public void update(float dt) {$/;"	m	class:Repeat
update	actions/interval/ReverseTime.java	/^    public void update(float t) {$/;"	m	class:ReverseTime
update	actions/interval/RotateBy.java	/^    public void update(float t) {$/;"	m	class:RotateBy
update	actions/interval/RotateTo.java	/^    public void update(float t) {$/;"	m	class:RotateTo
update	actions/interval/ScaleTo.java	/^    public void update(float t) {$/;"	m	class:ScaleTo
update	actions/interval/Sequence.java	/^    public void update(float t) {$/;"	m	class:Sequence
update	actions/interval/Spawn.java	/^    public void update(float t) {$/;"	m	class:Spawn
update	actions/interval/TintBy.java	/^    public void update(float t) {$/;"	m	class:TintBy
update	actions/interval/TintTo.java	/^    public void update(float t) {$/;"	m	class:TintTo
update	nodes/MotionStreak.java	/^    public void update(float delta) {$/;"	m	class:MotionStreak
update	nodes/Ribbon.java	/^    public void update(float delta) {$/;"	m	class:Ribbon
updateAtlas	nodes/AtlasSprite.java	/^    public void updateAtlas() {$/;"	m	class:AtlasSprite
updateAtlas	nodes/TileMapAtlas.java	/^    private void updateAtlas(CCGridSize pos, CCRGBB value, int idx) {$/;"	m	class:TileMapAtlas	file:
updateAtlasValues	nodes/AtlasNode.java	/^    public abstract void updateAtlasValues();$/;"	m	class:AtlasNode
updateAtlasValues	nodes/LabelAtlas.java	/^    public void updateAtlasValues() {$/;"	m	class:LabelAtlas
updateAtlasValues	nodes/TileMapAtlas.java	/^    public void updateAtlasValues() {$/;"	m	class:TileMapAtlas
updateBlendFunc	nodes/AtlasNode.java	/^    public void updateBlendFunc() {$/;"	m	class:AtlasNode
updateBlendFunc	nodes/AtlasSpriteManager.java	/^    private void updateBlendFunc()$/;"	m	class:AtlasSpriteManager	file:
updateColor	layers/ColorLayer.java	/^    private void updateColor() {$/;"	m	class:ColorLayer	file:
updateColor	nodes/AtlasSprite.java	/^    public void updateColor() {$/;"	m	class:AtlasSprite
updateColor	opengl/TextureAtlas.java	/^    public void updateColor(CCColor4B color, int index) {$/;"	m	class:TextureAtlas
updateMap	tests/AtlasTest.java	/^        public void updateMap(float dt) {$/;"	m	class:AtlasTest.Atlas4
updatePosition	nodes/AtlasSprite.java	/^    public void updatePosition() {$/;"	m	class:AtlasSprite
updateQuad	opengl/TextureAtlas.java	/^    public void updateQuad(CCQuad2 quadT, CCQuad3 quadV, int index) {$/;"	m	class:TextureAtlas
updateTextureCoords	nodes/AtlasSprite.java	/^    private void updateTextureCoords() {$/;"	m	class:AtlasSprite	file:
userData	nodes/CocosNode.java	/^    private Object userData;$/;"	f	class:CocosNode	file:
velocityIterations	box2d/Settings.java	/^    public int velocityIterations;$/;"	f	class:Settings
vertex	actions/grid/Grid3DAction.java	/^    public CCVertex3D vertex(CCGridSize pos) {$/;"	m	class:Grid3DAction
vertex	grid/Grid3D.java	/^    public CCVertex3D vertex(CCGridSize pos) {$/;"	m	class:Grid3D
vertexCoordinates	opengl/TextureAtlas.java	/^    private FloatBuffer vertexCoordinates;$/;"	f	class:TextureAtlas	file:
vertexCoords_	nodes/AtlasSprite.java	/^    private CCQuad3 vertexCoords_ = new CCQuad3();$/;"	f	class:AtlasSprite	file:
vertexZ_	nodes/CocosNode.java	/^    private float vertexZ_;$/;"	f	class:CocosNode	file:
vertices	grid/Grid3D.java	/^    FloatBuffer vertices;$/;"	f	class:Grid3D
vertices	grid/TiledGrid3D.java	/^    FloatBuffer vertices;$/;"	f	class:TiledGrid3D
vertices	particlesystem/ParticleSystem.java	/^    CCPointSprite vertices[];$/;"	f	class:ParticleSystem
verticesID	particlesystem/ParticleSystem.java	/^    protected int verticesID = -1;$/;"	f	class:ParticleSystem
verts	nodes/Ribbon.java	/^        float[] verts = new float[COUNT * 3 * 2];$/;"	f	class:Ribbon.RibbonSegment
visible_	nodes/CocosNode.java	/^    protected boolean visible_;$/;"	f	class:CocosNode
visit	nodes/AtlasSpriteManager.java	/^    public void visit(GL10 gl) {$/;"	m	class:AtlasSpriteManager
visit	nodes/CocosNode.java	/^    public void visit(GL10 gl) {$/;"	m	class:CocosNode
visit	nodes/ParallaxNode.java	/^    public void visit(GL10 gl)$/;"	m	class:ParallaxNode
width	opengl/TGA.java	/^        public int width;$/;"	f	class:TGA.ImageTGA
width	types/CCRect.java	/^    public static float width(final CCRect aRect) {$/;"	m	class:CCRect
width	types/CCSize.java	/^    public float width, height;$/;"	f	class:CCSize
width_	nodes/Director.java	/^    private int width_, height_;$/;"	f	class:Director	file:
winSize	nodes/Director.java	/^    public CCSize winSize() {$/;"	m	class:Director
withColorArray	opengl/TextureAtlas.java	/^    public boolean withColorArray() {$/;"	m	class:TextureAtlas
withColorArray_	opengl/TextureAtlas.java	/^    private boolean withColorArray_;$/;"	f	class:TextureAtlas	file:
world	tests/Box2DTest.java	/^        BBWorld world;$/;"	f	class:Box2DTest.Box2DTestLayer
worldToNodeTransform	nodes/CocosNode.java	/^    private CCAffineTransform worldToNodeTransform() {$/;"	m	class:CocosNode	file:
wrap	opengl/GLDebugWrapper.java	/^    public GL wrap(GL gl) {$/;"	m	class:GLDebugWrapper
wrapS	types/CCTexParams.java	/^    public int wrapS;$/;"	f	class:CCTexParams
wrapT	types/CCTexParams.java	/^    public int wrapT;$/;"	f	class:CCTexParams
writeObject	types/CCAffineTransform.java	/^    private void writeObject(java.io.ObjectOutputStream stream) throws IOException {$/;"	m	class:CCAffineTransform	file:
x	types/CCGridSize.java	/^    public int x;$/;"	f	class:CCGridSize
x	types/CCPoint.java	/^    public float x, y;$/;"	f	class:CCPoint
x	types/CCPointSprite.java	/^    public float x;$/;"	f	class:CCPointSprite
x	types/CCVertex3D.java	/^    public float x;$/;"	f	class:CCVertex3D
y	types/CCGridSize.java	/^    public int y;$/;"	f	class:CCGridSize
y	types/CCPoint.java	/^    public float x, y;$/;"	f	class:CCPoint
y	types/CCPointSprite.java	/^    public float y;$/;"	f	class:CCPointSprite
y	types/CCVertex3D.java	/^    public float y;$/;"	f	class:CCVertex3D
z	types/CCVertex3D.java	/^    public float z;$/;"	f	class:CCVertex3D
zOrder_	nodes/CocosNode.java	/^    private int zOrder_;$/;"	f	class:CocosNode	file:
zero	types/CCPoint.java	/^    public static CCPoint zero() {$/;"	m	class:CCPoint
zero	types/CCSize.java	/^    public static CCSize zero() {$/;"	m	class:CCSize
